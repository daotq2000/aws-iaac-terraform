{
  "version": 4,
  "terraform_version": "1.8.2",
  "serial": 36,
  "lineage": "ffee0d21-562a-7002-a7bf-f726b11ce0ba",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "aws_load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.7.2",
                "chart": "aws-load-balancer-controller",
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"clusterName\":\"Eks-cluster\",\"region\":\"us-east-1\",\"vpcId\":\"10.0.0.0/16\"}",
                "version": "1.7.2"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "clusterName",
                "type": "",
                "value": "Eks-cluster"
              },
              {
                "name": "region",
                "type": "",
                "value": "us-east-1"
              },
              {
                "name": "vpcId",
                "type": "",
                "value": "10.0.0.0/16"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.7.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "public-nginx-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-public",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.4.0",
                "chart": "ingress-nginx",
                "name": "ingress-public",
                "namespace": "nginx-ingress-namespace",
                "revision": 1,
                "values": "{\"controller\":{\"config\":{\"client-body-buffer-size\":\"32M\",\"compute-full-forwarded-for\":\"true\",\"log-format-upstream\":\"$remote_addr - $remote_user [$time_local] \\\"$request\\\" $status $body_bytes_sent \\\"$http_referer\\\" \\\"$http_user_agent\\\" $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id $http_x_device_id|$http_x_device_os|$http_x_device_os_version|$http_x_device_locale|$http_x_app_version|$http_x_app_id\",\"proxy-body-size\":\"100G\",\"proxy-buffering\":\"off\",\"proxy-read-timeout\":\"600\",\"proxy-send-timeout\":\"600\",\"use-forwarded-headers\":\"true\"},\"ingressClass\":\"public\",\"ingressClassByName\":true,\"ingressClassResource\":{\"controllerValue\":\"k8s.io/public-ingress-nginx\",\"default\":false,\"enabled\":true,\"name\":\"public\"},\"metrics\":{\"enabled\":false,\"serviceMonitor\":{\"enabled\":true}},\"replicaCount\":2,\"service\":{\"nodePorts\":{\"http\":\"30080\",\"https\":\"30443\",\"tcp\":{\"31280\":31280,\"32069\":32069,\"32070\":32070},\"udp\":{}},\"type\":\"NodePort\"}}}",
                "version": "4.3.0"
              }
            ],
            "name": "ingress-public",
            "namespace": "nginx-ingress-namespace",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "controller:\n  replicaCount: 2\n  ingressClassByName: true\n  ingressClassResource:\n    name: \"public\"\n    enabled: true\n    default: false\n    controllerValue: \"k8s.io/public-ingress-nginx\"\n  ## Name of the ingress class to route through this controller\n  ##\n  ingressClass: public\n  config:\n    #Upload\n    client-body-buffer-size: 32M\n    proxy-body-size: 100G\n    proxy-buffering: \"off\"\n    proxy-read-timeout: \"600\"\n    proxy-send-timeout: \"600\"\n    #Logging\n    log-format-upstream: '$remote_addr - $remote_user [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id $http_x_device_id|$http_x_device_os|$http_x_device_os_version|$http_x_device_locale|$http_x_app_version|$http_x_app_id'\n    # Accesslog Request IP\n    compute-full-forwarded-for: \"true\"\n    use-forwarded-headers: \"true\"\n  service:\n    type: NodePort\n    nodePorts:\n      http: \"30080\"\n      https: \"30443\"\n      tcp:\n        32069: 32069\n        32070: 32070\n        31280: 31280\n      udp: {}\n  metrics:\n    enabled: false\n    serviceMonitor:\n      enabled: true\n#tcp:\n#  32069: \"external/window-rdp-external:32069\"\n#  32070: \"external/avnet-poc-external:3393\"\n#  31280: \"external/squid-external:31280\"\n\n"
            ],
            "verify": false,
            "version": "4.3.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.nginx-ingress"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "alb_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "alb.ingress.kubernetes.io/listen-ports": "[{\"HTTP\":80}]",
                    "alb.ingress.kubernetes.io/scheme": "internet-facing",
                    "alb.ingress.kubernetes.io/target-type": "instance",
                    "kubernetes.io/ingress.class": "alb"
                  },
                  "name": "alb-ingress",
                  "namespace": "nginx-ingress-namespace"
                },
                "spec": {
                  "rules": [
                    {
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "service": {
                                "name": "aws-load-balancer-target",
                                "port": {
                                  "number": 30080
                                }
                              }
                            },
                            "path": "/*",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "alb.ingress.kubernetes.io/listen-ports": "string",
                          "alb.ingress.kubernetes.io/scheme": "string",
                          "alb.ingress.kubernetes.io/target-type": "string",
                          "kubernetes.io/ingress.class": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "rules": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "http": [
                                "object",
                                {
                                  "paths": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "backend": [
                                            "object",
                                            {
                                              "service": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "port": [
                                                    "object",
                                                    {
                                                      "number": "number"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "path": "string",
                                          "pathType": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "networking.k8s.io/v1",
                "kind": "Ingress",
                "metadata": {
                  "annotations": {
                    "alb.ingress.kubernetes.io/listen-ports": "[{\"HTTP\":80}]",
                    "alb.ingress.kubernetes.io/scheme": "internet-facing",
                    "alb.ingress.kubernetes.io/target-type": "instance",
                    "kubernetes.io/ingress.class": "alb"
                  },
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "alb-ingress",
                  "namespace": "nginx-ingress-namespace",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "defaultBackend": {
                    "resource": {
                      "apiGroup": null,
                      "kind": null,
                      "name": null
                    },
                    "service": {
                      "name": null,
                      "port": {
                        "name": null,
                        "number": null
                      }
                    }
                  },
                  "ingressClassName": null,
                  "rules": [
                    {
                      "host": null,
                      "http": {
                        "paths": [
                          {
                            "backend": {
                              "resource": {
                                "apiGroup": null,
                                "kind": null,
                                "name": null
                              },
                              "service": {
                                "name": "aws-load-balancer-target",
                                "port": {
                                  "name": null,
                                  "number": 30080
                                }
                              }
                            },
                            "path": "/*",
                            "pathType": "Prefix"
                          }
                        ]
                      }
                    }
                  ],
                  "tls": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "defaultBackend": [
                        "object",
                        {
                          "resource": [
                            "object",
                            {
                              "apiGroup": "string",
                              "kind": "string",
                              "name": "string"
                            }
                          ],
                          "service": [
                            "object",
                            {
                              "name": "string",
                              "port": [
                                "object",
                                {
                                  "name": "string",
                                  "number": "number"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "ingressClassName": "string",
                      "rules": [
                        "list",
                        [
                          "object",
                          {
                            "host": "string",
                            "http": [
                              "object",
                              {
                                "paths": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "backend": [
                                        "object",
                                        {
                                          "resource": [
                                            "object",
                                            {
                                              "apiGroup": "string",
                                              "kind": "string",
                                              "name": "string"
                                            }
                                          ],
                                          "service": [
                                            "object",
                                            {
                                              "name": "string",
                                              "port": [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "number": "number"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "path": "string",
                                      "pathType": "string"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      ],
                      "tls": [
                        "list",
                        [
                          "object",
                          {
                            "hosts": [
                              "list",
                              "string"
                            ],
                            "secretName": "string"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ciaws",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ciaws",
            "metadata": [
              {
                "annotations": {
                  "name": "ciaws"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ciaws",
                "resource_version": "1575",
                "uid": "448c2397-2740-4f4b-b6f6-ed695caf6515"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "monitoring",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring",
            "metadata": [
              {
                "annotations": {
                  "name": "monitoring"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "monitoring",
                "resource_version": "1574",
                "uid": "efa81fd6-8a30-40ab-8c6c-55bac745e188"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "nginx-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "nginx-ingress-namespace",
            "metadata": [
              {
                "annotations": {
                  "name": "ingress-nginx-namespace"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "nginx-ingress-namespace",
                "resource_version": "1576",
                "uid": "6fce9c54-8fc6-48ec-8db5-31666605a376"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    }
  ],
  "check_results": null
}
