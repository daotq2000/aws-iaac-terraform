Subject: [PATCH] update helm chart and kubeconfig
---
Index: HelmChart/ingress-nginx/ingress-nginx/CHANGELOG.md
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/CHANGELOG.md b/HelmChart/ingress-nginx/ingress-nginx/CHANGELOG.md
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/CHANGELOG.md	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,440 @@
+# Changelog
+
+This file documents all notable changes to [ingress-nginx](https://github.com/kubernetes/ingress-nginx) Helm Chart. The release numbering uses [semantic versioning](http://semver.org).
+
+### 4.2.0
+
+- Support for Kubernetes v1.19.0 was removed
+- "[8810](https://github.com/kubernetes/ingress-nginx/pull/8810) Prepare for v1.3.0"
+- "[8808](https://github.com/kubernetes/ingress-nginx/pull/8808) revert arch var name"
+- "[8805](https://github.com/kubernetes/ingress-nginx/pull/8805) Bump k8s.io/klog/v2 from 2.60.1 to 2.70.1"
+- "[8803](https://github.com/kubernetes/ingress-nginx/pull/8803) Update to nginx base with alpine v3.16"
+- "[8802](https://github.com/kubernetes/ingress-nginx/pull/8802) chore: start v1.3.0 release process"
+- "[8798](https://github.com/kubernetes/ingress-nginx/pull/8798) Add v1.24.0 to test matrix"
+- "[8796](https://github.com/kubernetes/ingress-nginx/pull/8796) fix: add MAC_OS variable for static-check"
+- "[8793](https://github.com/kubernetes/ingress-nginx/pull/8793) changed to alpine-v3.16"
+- "[8781](https://github.com/kubernetes/ingress-nginx/pull/8781) Bump github.com/stretchr/testify from 1.7.5 to 1.8.0"
+- "[8778](https://github.com/kubernetes/ingress-nginx/pull/8778) chore: remove stable.txt from release process"
+- "[8775](https://github.com/kubernetes/ingress-nginx/pull/8775) Remove stable"
+- "[8773](https://github.com/kubernetes/ingress-nginx/pull/8773) Bump github/codeql-action from 2.1.14 to 2.1.15"
+- "[8772](https://github.com/kubernetes/ingress-nginx/pull/8772) Bump ossf/scorecard-action from 1.1.1 to 1.1.2"
+- "[8771](https://github.com/kubernetes/ingress-nginx/pull/8771) fix bullet md format"
+- "[8770](https://github.com/kubernetes/ingress-nginx/pull/8770) Add condition for monitoring.coreos.com/v1 API"
+- "[8769](https://github.com/kubernetes/ingress-nginx/pull/8769) Fix typos and add links to developer guide"
+- "[8767](https://github.com/kubernetes/ingress-nginx/pull/8767) change v1.2.0 to v1.2.1 in deploy doc URLs"
+- "[8765](https://github.com/kubernetes/ingress-nginx/pull/8765) Bump github/codeql-action from 1.0.26 to 2.1.14"
+- "[8752](https://github.com/kubernetes/ingress-nginx/pull/8752) Bump github.com/spf13/cobra from 1.4.0 to 1.5.0"
+- "[8751](https://github.com/kubernetes/ingress-nginx/pull/8751) Bump github.com/stretchr/testify from 1.7.2 to 1.7.5"
+- "[8750](https://github.com/kubernetes/ingress-nginx/pull/8750) added announcement"
+- "[8740](https://github.com/kubernetes/ingress-nginx/pull/8740) change sha e2etestrunner and echoserver"
+- "[8738](https://github.com/kubernetes/ingress-nginx/pull/8738) Update docs to make it easier for noobs to follow step by step"
+- "[8737](https://github.com/kubernetes/ingress-nginx/pull/8737) updated baseimage sha"
+- "[8736](https://github.com/kubernetes/ingress-nginx/pull/8736) set ld-musl-path"
+- "[8733](https://github.com/kubernetes/ingress-nginx/pull/8733) feat: migrate leaderelection lock to leases"
+- "[8726](https://github.com/kubernetes/ingress-nginx/pull/8726) prometheus metric: upstream_latency_seconds"
+- "[8720](https://github.com/kubernetes/ingress-nginx/pull/8720) Ci pin deps"
+- "[8719](https://github.com/kubernetes/ingress-nginx/pull/8719) Working OpenTelemetry sidecar (base nginx image)"
+- "[8714](https://github.com/kubernetes/ingress-nginx/pull/8714) Create Openssf scorecard"
+- "[8708](https://github.com/kubernetes/ingress-nginx/pull/8708) Bump github.com/prometheus/common from 0.34.0 to 0.35.0"
+- "[8703](https://github.com/kubernetes/ingress-nginx/pull/8703) Bump actions/dependency-review-action from 1 to 2"
+- "[8701](https://github.com/kubernetes/ingress-nginx/pull/8701) Fix several typos"
+- "[8699](https://github.com/kubernetes/ingress-nginx/pull/8699) fix the gosec test and a make target for it"
+- "[8698](https://github.com/kubernetes/ingress-nginx/pull/8698) Bump actions/upload-artifact from 2.3.1 to 3.1.0"
+- "[8697](https://github.com/kubernetes/ingress-nginx/pull/8697) Bump actions/setup-go from 2.2.0 to 3.2.0"
+- "[8695](https://github.com/kubernetes/ingress-nginx/pull/8695) Bump actions/download-artifact from 2 to 3"
+- "[8694](https://github.com/kubernetes/ingress-nginx/pull/8694) Bump crazy-max/ghaction-docker-buildx from 1.6.2 to 3.3.1"
+
+### 4.1.2
+
+- "[8587](https://github.com/kubernetes/ingress-nginx/pull/8587) Add CAP_SYS_CHROOT to DS/PSP when needed"
+- "[8458](https://github.com/kubernetes/ingress-nginx/pull/8458) Add portNamePreffix Helm chart parameter"
+- "[8522](https://github.com/kubernetes/ingress-nginx/pull/8522) Add documentation for controller.service.loadBalancerIP in Helm chart"
+
+### 4.1.0
+
+- "[8481](https://github.com/kubernetes/ingress-nginx/pull/8481) Fix log creation in chroot script"
+- "[8479](https://github.com/kubernetes/ingress-nginx/pull/8479) changed nginx base img tag to img built with alpine3.14.6"
+- "[8478](https://github.com/kubernetes/ingress-nginx/pull/8478) update base images and protobuf gomod"
+- "[8468](https://github.com/kubernetes/ingress-nginx/pull/8468) Fallback to ngx.var.scheme for redirectScheme with use-forward-headers when X-Forwarded-Proto is empty"
+- "[8456](https://github.com/kubernetes/ingress-nginx/pull/8456) Implement object deep inspector"
+- "[8455](https://github.com/kubernetes/ingress-nginx/pull/8455) Update dependencies"
+- "[8454](https://github.com/kubernetes/ingress-nginx/pull/8454) Update index.md"
+- "[8447](https://github.com/kubernetes/ingress-nginx/pull/8447) typo fixing"
+- "[8446](https://github.com/kubernetes/ingress-nginx/pull/8446) Fix suggested annotation-value-word-blocklist"
+- "[8444](https://github.com/kubernetes/ingress-nginx/pull/8444) replace deprecated topology key in example with current one"
+- "[8443](https://github.com/kubernetes/ingress-nginx/pull/8443) Add dependency review enforcement"
+- "[8434](https://github.com/kubernetes/ingress-nginx/pull/8434) added new auth-tls-match-cn annotation"
+- "[8426](https://github.com/kubernetes/ingress-nginx/pull/8426) Bump github.com/prometheus/common from 0.32.1 to 0.33.0"
+
+### 4.0.18
+
+- "[8291](https://github.com/kubernetes/ingress-nginx/pull/8291) remove git tag env from cloud build"
+- "[8286](https://github.com/kubernetes/ingress-nginx/pull/8286) Fix OpenTelemetry sidecar image build"
+- "[8277](https://github.com/kubernetes/ingress-nginx/pull/8277) Add OpenSSF Best practices badge"
+- "[8273](https://github.com/kubernetes/ingress-nginx/pull/8273) Issue#8241"
+- "[8267](https://github.com/kubernetes/ingress-nginx/pull/8267) Add fsGroup value to admission-webhooks/job-patch charts"
+- "[8262](https://github.com/kubernetes/ingress-nginx/pull/8262) Updated confusing error"
+- "[8256](https://github.com/kubernetes/ingress-nginx/pull/8256) fix: deny locations with invalid auth-url annotation"
+- "[8253](https://github.com/kubernetes/ingress-nginx/pull/8253) Add a certificate info metric"
+- "[8236](https://github.com/kubernetes/ingress-nginx/pull/8236) webhook: remove useless code."
+- "[8227](https://github.com/kubernetes/ingress-nginx/pull/8227) Update libraries in webhook image"
+- "[8225](https://github.com/kubernetes/ingress-nginx/pull/8225) fix inconsistent-label-cardinality for prometheus metrics: nginx_ingress_controller_requests"
+- "[8221](https://github.com/kubernetes/ingress-nginx/pull/8221) Do not validate ingresses with unknown ingress class in admission webhook endpoint"
+- "[8210](https://github.com/kubernetes/ingress-nginx/pull/8210) Bump github.com/prometheus/client_golang from 1.11.0 to 1.12.1"
+- "[8209](https://github.com/kubernetes/ingress-nginx/pull/8209) Bump google.golang.org/grpc from 1.43.0 to 1.44.0"
+- "[8204](https://github.com/kubernetes/ingress-nginx/pull/8204) Add Artifact Hub lint"
+- "[8203](https://github.com/kubernetes/ingress-nginx/pull/8203) Fix Indentation of example and link to cert-manager tutorial"
+- "[8201](https://github.com/kubernetes/ingress-nginx/pull/8201) feat(metrics): add path and method labels to requests countera"
+- "[8199](https://github.com/kubernetes/ingress-nginx/pull/8199) use functional options to reduce number of methods creating an EchoDeployment"
+- "[8196](https://github.com/kubernetes/ingress-nginx/pull/8196) docs: fix inconsistent controller annotation"
+- "[8191](https://github.com/kubernetes/ingress-nginx/pull/8191) Using Go install for misspell"
+- "[8186](https://github.com/kubernetes/ingress-nginx/pull/8186) prometheus+grafana using servicemonitor"
+- "[8185](https://github.com/kubernetes/ingress-nginx/pull/8185) Append elements on match, instead of removing for cors-annotations"
+- "[8179](https://github.com/kubernetes/ingress-nginx/pull/8179) Bump github.com/opencontainers/runc from 1.0.3 to 1.1.0"
+- "[8173](https://github.com/kubernetes/ingress-nginx/pull/8173) Adding annotations to the controller service account"
+- "[8163](https://github.com/kubernetes/ingress-nginx/pull/8163) Update the $req_id placeholder description"
+- "[8162](https://github.com/kubernetes/ingress-nginx/pull/8162) Versioned static manifests"
+- "[8159](https://github.com/kubernetes/ingress-nginx/pull/8159) Adding some geoip variables and default values"
+- "[8155](https://github.com/kubernetes/ingress-nginx/pull/8155) #7271 feat: avoid-pdb-creation-when-default-backend-disabled-and-replicas-gt-1"
+- "[8151](https://github.com/kubernetes/ingress-nginx/pull/8151) Automatically generate helm docs"
+- "[8143](https://github.com/kubernetes/ingress-nginx/pull/8143) Allow to configure delay before controller exits"
+- "[8136](https://github.com/kubernetes/ingress-nginx/pull/8136) add ingressClass option to helm chart - back compatibility with ingress.class annotations"
+- "[8126](https://github.com/kubernetes/ingress-nginx/pull/8126) Example for JWT"
+
+
+### 4.0.15
+
+- [8120] https://github.com/kubernetes/ingress-nginx/pull/8120    Update go in runner and release v1.1.1
+- [8119] https://github.com/kubernetes/ingress-nginx/pull/8119    Update to go v1.17.6
+- [8118] https://github.com/kubernetes/ingress-nginx/pull/8118    Remove deprecated libraries, update other libs
+- [8117] https://github.com/kubernetes/ingress-nginx/pull/8117    Fix codegen errors
+- [8115] https://github.com/kubernetes/ingress-nginx/pull/8115    chart/ghaction: set the correct permission to have access to push a release
+- [8098] https://github.com/kubernetes/ingress-nginx/pull/8098    generating SHA for CA only certs in backend_ssl.go + comparision of P…
+- [8088] https://github.com/kubernetes/ingress-nginx/pull/8088    Fix Edit this page link to use main branch
+- [8072] https://github.com/kubernetes/ingress-nginx/pull/8072    Expose GeoIP2 Continent code as variable
+- [8061] https://github.com/kubernetes/ingress-nginx/pull/8061    docs(charts): using helm-docs for chart
+- [8058] https://github.com/kubernetes/ingress-nginx/pull/8058    Bump github.com/spf13/cobra from 1.2.1 to 1.3.0
+- [8054] https://github.com/kubernetes/ingress-nginx/pull/8054    Bump google.golang.org/grpc from 1.41.0 to 1.43.0
+- [8051] https://github.com/kubernetes/ingress-nginx/pull/8051    align bug report with feature request regarding kind documentation
+- [8046] https://github.com/kubernetes/ingress-nginx/pull/8046    Report expired certificates (#8045)
+- [8044] https://github.com/kubernetes/ingress-nginx/pull/8044    remove G109 check till gosec resolves issues
+- [8042] https://github.com/kubernetes/ingress-nginx/pull/8042    docs_multiple_instances_one_cluster_ticket_7543
+- [8041] https://github.com/kubernetes/ingress-nginx/pull/8041    docs: fix typo'd executible name
+- [8035] https://github.com/kubernetes/ingress-nginx/pull/8035    Comment busy owners
+- [8029] https://github.com/kubernetes/ingress-nginx/pull/8029    Add stream-snippet as a ConfigMap and Annotation option
+- [8023] https://github.com/kubernetes/ingress-nginx/pull/8023    fix nginx compilation flags
+- [8021] https://github.com/kubernetes/ingress-nginx/pull/8021    Disable default modsecurity_rules_file if modsecurity-snippet is specified
+- [8019] https://github.com/kubernetes/ingress-nginx/pull/8019    Revise main documentation page
+- [8018] https://github.com/kubernetes/ingress-nginx/pull/8018    Preserve order of plugin invocation
+- [8015] https://github.com/kubernetes/ingress-nginx/pull/8015    Add newline indenting to admission webhook annotations
+- [8014] https://github.com/kubernetes/ingress-nginx/pull/8014    Add link to example error page manifest in docs
+- [8009] https://github.com/kubernetes/ingress-nginx/pull/8009    Fix spelling in documentation and top-level files
+- [8008] https://github.com/kubernetes/ingress-nginx/pull/8008    Add relabelings in controller-servicemonitor.yaml
+- [8003] https://github.com/kubernetes/ingress-nginx/pull/8003    Minor improvements (formatting, consistency) in install guide
+- [8001] https://github.com/kubernetes/ingress-nginx/pull/8001    fix: go-grpc Dockerfile
+- [7999] https://github.com/kubernetes/ingress-nginx/pull/7999    images: use k8s-staging-test-infra/gcb-docker-gcloud
+- [7996] https://github.com/kubernetes/ingress-nginx/pull/7996    doc: improvement
+- [7983] https://github.com/kubernetes/ingress-nginx/pull/7983    Fix a couple of misspellings in the annotations documentation.
+- [7979] https://github.com/kubernetes/ingress-nginx/pull/7979    allow set annotations for admission Jobs
+- [7977] https://github.com/kubernetes/ingress-nginx/pull/7977    Add ssl_reject_handshake to defaul server
+- [7975] https://github.com/kubernetes/ingress-nginx/pull/7975    add legacy version update v0.50.0 to main changelog
+- [7972] https://github.com/kubernetes/ingress-nginx/pull/7972    updated service upstream definition
+
+### 4.0.14
+
+- [8061] https://github.com/kubernetes/ingress-nginx/pull/8061 Using helm-docs to populate values table in README.md
+
+### 4.0.13
+
+- [8008] https://github.com/kubernetes/ingress-nginx/pull/8008 Add relabelings in controller-servicemonitor.yaml
+
+### 4.0.12
+
+- [7978] https://github.com/kubernetes/ingress-nginx/pull/7979 Support custom annotations in admissions Jobs
+
+### 4.0.11
+
+- [7873] https://github.com/kubernetes/ingress-nginx/pull/7873 Makes the [appProtocol](https://kubernetes.io/docs/concepts/services-networking/_print/#application-protocol) field optional.
+
+### 4.0.10
+
+- [7964] https://github.com/kubernetes/ingress-nginx/pull/7964 Update controller version to v1.1.0
+
+### 4.0.9
+
+- [6992] https://github.com/kubernetes/ingress-nginx/pull/6992 Add ability to specify labels for all resources
+
+### 4.0.7
+
+- [7923] https://github.com/kubernetes/ingress-nginx/pull/7923 Release v1.0.5 of ingress-nginx
+- [7806] https://github.com/kubernetes/ingress-nginx/pull/7806 Choice option for internal/external loadbalancer type service
+
+### 4.0.6
+
+- [7804] https://github.com/kubernetes/ingress-nginx/pull/7804 Release v1.0.4 of ingress-nginx
+- [7651] https://github.com/kubernetes/ingress-nginx/pull/7651 Support ipFamilyPolicy and ipFamilies fields in Helm Chart
+- [7798] https://github.com/kubernetes/ingress-nginx/pull/7798 Exoscale: use HTTP Healthcheck mode
+- [7793] https://github.com/kubernetes/ingress-nginx/pull/7793 Update kube-webhook-certgen to v1.1.1
+
+### 4.0.5
+
+- [7740] https://github.com/kubernetes/ingress-nginx/pull/7740 Release v1.0.3 of ingress-nginx
+
+### 4.0.3
+
+- [7707] https://github.com/kubernetes/ingress-nginx/pull/7707 Release v1.0.2 of ingress-nginx
+
+### 4.0.2
+
+- [7681] https://github.com/kubernetes/ingress-nginx/pull/7681 Release v1.0.1 of ingress-nginx
+
+### 4.0.1
+
+- [7535] https://github.com/kubernetes/ingress-nginx/pull/7535 Release v1.0.0 ingress-nginx
+
+### 3.34.0
+
+- [7256] https://github.com/kubernetes/ingress-nginx/pull/7256 Add namespace field in the namespace scoped resource templates
+
+### 3.33.0
+
+- [7164] https://github.com/kubernetes/ingress-nginx/pull/7164 Update nginx to v1.20.1
+
+### 3.32.0
+
+- [7117] https://github.com/kubernetes/ingress-nginx/pull/7117 Add annotations for HPA
+
+### 3.31.0
+
+- [7137] https://github.com/kubernetes/ingress-nginx/pull/7137 Add support for custom probes
+
+### 3.30.0
+
+- [#7092](https://github.com/kubernetes/ingress-nginx/pull/7092) Removes the possibility of using localhost in ExternalNames as endpoints
+
+### 3.29.0
+
+- [X] [#6945](https://github.com/kubernetes/ingress-nginx/pull/7020) Add option to specify job label for ServiceMonitor
+
+### 3.28.0
+
+- [ ] [#6900](https://github.com/kubernetes/ingress-nginx/pull/6900) Support existing PSPs
+
+### 3.27.0
+
+- Update ingress-nginx v0.45.0
+
+### 3.26.0
+
+- [X] [#6979](https://github.com/kubernetes/ingress-nginx/pull/6979) Changed servicePort value for metrics
+
+### 3.25.0
+
+- [X] [#6957](https://github.com/kubernetes/ingress-nginx/pull/6957) Add ability to specify automountServiceAccountToken
+
+### 3.24.0
+
+- [X] [#6908](https://github.com/kubernetes/ingress-nginx/pull/6908) Add volumes to default-backend deployment
+
+### 3.23.0
+
+- Update ingress-nginx v0.44.0
+
+### 3.22.0
+
+- [X] [#6802](https://github.com/kubernetes/ingress-nginx/pull/6802) Add value for configuring a custom Diffie-Hellman parameters file
+- [X] [#6815](https://github.com/kubernetes/ingress-nginx/pull/6815) Allow use of numeric namespaces in helm chart
+
+### 3.21.0
+
+- [X] [#6783](https://github.com/kubernetes/ingress-nginx/pull/6783) Add custom annotations to ScaledObject
+- [X] [#6761](https://github.com/kubernetes/ingress-nginx/pull/6761) Adding quotes in the serviceAccount name in Helm values
+- [X] [#6767](https://github.com/kubernetes/ingress-nginx/pull/6767) Remove ClusterRole when scope option is enabled
+- [X] [#6785](https://github.com/kubernetes/ingress-nginx/pull/6785) Update kube-webhook-certgen image to v1.5.1
+
+### 3.20.1
+
+- Do not create KEDA in case of DaemonSets.
+- Fix KEDA v2 definition
+
+### 3.20.0
+
+- [X] [#6730](https://github.com/kubernetes/ingress-nginx/pull/6730) Do not create HPA for defaultBackend if not enabled.
+
+### 3.19.0
+
+- Update ingress-nginx v0.43.0
+
+### 3.18.0
+
+- [X] [#6688](https://github.com/kubernetes/ingress-nginx/pull/6688) Allow volume-type emptyDir in controller podsecuritypolicy
+- [X] [#6691](https://github.com/kubernetes/ingress-nginx/pull/6691) Improve parsing of helm parameters
+
+### 3.17.0
+
+- Update ingress-nginx v0.42.0
+
+### 3.16.1
+
+- Fix chart-releaser action
+
+### 3.16.0
+
+- [X] [#6646](https://github.com/kubernetes/ingress-nginx/pull/6646) Added LoadBalancerIP value for internal service
+
+### 3.15.1
+
+- Fix chart-releaser action
+
+### 3.15.0
+
+- [X] [#6586](https://github.com/kubernetes/ingress-nginx/pull/6586) Fix 'maxmindLicenseKey' location in values.yaml
+
+### 3.14.0
+
+- [X] [#6469](https://github.com/kubernetes/ingress-nginx/pull/6469) Allow custom service names for controller and backend
+
+### 3.13.0
+
+- [X] [#6544](https://github.com/kubernetes/ingress-nginx/pull/6544) Fix default backend HPA name variable
+
+### 3.12.0
+
+- [X] [#6514](https://github.com/kubernetes/ingress-nginx/pull/6514) Remove helm2 support and update docs
+
+### 3.11.1
+
+- [X] [#6505](https://github.com/kubernetes/ingress-nginx/pull/6505) Reorder HPA resource list to work with GitOps tooling
+
+### 3.11.0
+
+- Support Keda Autoscaling
+
+### 3.10.1
+
+- Fix regression introduced in 0.41.0 with external authentication
+
+### 3.10.0
+
+- Fix routing regression introduced in 0.41.0 with PathType Exact
+
+### 3.9.0
+
+- [X] [#6423](https://github.com/kubernetes/ingress-nginx/pull/6423) Add Default backend HPA autoscaling
+
+### 3.8.0
+
+- [X] [#6395](https://github.com/kubernetes/ingress-nginx/pull/6395) Update jettech/kube-webhook-certgen image
+- [X] [#6377](https://github.com/kubernetes/ingress-nginx/pull/6377) Added loadBalancerSourceRanges for internal lbs
+- [X] [#6356](https://github.com/kubernetes/ingress-nginx/pull/6356) Add securitycontext settings on defaultbackend
+- [X] [#6401](https://github.com/kubernetes/ingress-nginx/pull/6401) Fix controller service annotations
+- [X] [#6403](https://github.com/kubernetes/ingress-nginx/pull/6403) Initial helm chart changelog
+
+### 3.7.1
+
+- [X] [#6326](https://github.com/kubernetes/ingress-nginx/pull/6326) Fix liveness and readiness probe path in daemonset chart
+
+### 3.7.0
+
+- [X] [#6316](https://github.com/kubernetes/ingress-nginx/pull/6316) Numerals in podAnnotations in quotes [#6315](https://github.com/kubernetes/ingress-nginx/issues/6315)
+
+### 3.6.0
+
+- [X] [#6305](https://github.com/kubernetes/ingress-nginx/pull/6305) Add default linux nodeSelector
+
+### 3.5.1
+
+- [X] [#6299](https://github.com/kubernetes/ingress-nginx/pull/6299) Fix helm chart release
+
+### 3.5.0
+
+- [X] [#6260](https://github.com/kubernetes/ingress-nginx/pull/6260) Allow Helm Chart to customize admission webhook's annotations, timeoutSeconds, namespaceSelector, objectSelector and cert files locations
+
+### 3.4.0
+
+- [X] [#6268](https://github.com/kubernetes/ingress-nginx/pull/6268) Update to 0.40.2 in helm chart #6288
+
+### 3.3.1
+
+- [X] [#6259](https://github.com/kubernetes/ingress-nginx/pull/6259) Release helm chart
+- [X] [#6258](https://github.com/kubernetes/ingress-nginx/pull/6258) Fix chart markdown link
+- [X] [#6253](https://github.com/kubernetes/ingress-nginx/pull/6253) Release v0.40.0
+
+### 3.3.1
+
+- [X] [#6233](https://github.com/kubernetes/ingress-nginx/pull/6233) Add admission controller e2e test
+
+### 3.3.0
+
+- [X] [#6203](https://github.com/kubernetes/ingress-nginx/pull/6203) Refactor parsing of key values
+- [X] [#6162](https://github.com/kubernetes/ingress-nginx/pull/6162) Add helm chart options to expose metrics service as NodePort
+- [X] [#6180](https://github.com/kubernetes/ingress-nginx/pull/6180) Fix helm chart admissionReviewVersions regression
+- [X] [#6169](https://github.com/kubernetes/ingress-nginx/pull/6169) Fix Typo in example prometheus rules
+
+### 3.0.0
+
+- [X] [#6167](https://github.com/kubernetes/ingress-nginx/pull/6167) Update chart requirements
+
+### 2.16.0
+
+- [X] [#6154](https://github.com/kubernetes/ingress-nginx/pull/6154) add `topologySpreadConstraint` to controller
+
+### 2.15.0
+
+- [X] [#6087](https://github.com/kubernetes/ingress-nginx/pull/6087) Adding parameter for externalTrafficPolicy in internal controller service spec
+
+### 2.14.0
+
+- [X] [#6104](https://github.com/kubernetes/ingress-nginx/pull/6104) Misc fixes for nginx-ingress chart for better keel and prometheus-operator integration
+
+### 2.13.0
+
+- [X] [#6093](https://github.com/kubernetes/ingress-nginx/pull/6093) Release v0.35.0
+
+### 2.13.0
+
+- [X] [#6093](https://github.com/kubernetes/ingress-nginx/pull/6093) Release v0.35.0
+- [X] [#6080](https://github.com/kubernetes/ingress-nginx/pull/6080) Switch images to k8s.gcr.io after Vanity Domain Flip
+
+### 2.12.1
+
+- [X] [#6075](https://github.com/kubernetes/ingress-nginx/pull/6075) Sync helm chart affinity examples
+
+### 2.12.0
+
+- [X] [#6039](https://github.com/kubernetes/ingress-nginx/pull/6039) Add configurable serviceMonitor metricRelabelling and targetLabels
+- [X] [#6044](https://github.com/kubernetes/ingress-nginx/pull/6044) Fix YAML linting
+
+### 2.11.3
+
+- [X] [#6038](https://github.com/kubernetes/ingress-nginx/pull/6038) Bump chart version PATCH
+
+### 2.11.2
+
+- [X] [#5951](https://github.com/kubernetes/ingress-nginx/pull/5951) Bump chart patch version
+
+### 2.11.1
+
+- [X] [#5900](https://github.com/kubernetes/ingress-nginx/pull/5900) Release helm chart for v0.34.1
+
+### 2.11.0
+
+- [X] [#5879](https://github.com/kubernetes/ingress-nginx/pull/5879) Update helm chart for v0.34.0
+- [X] [#5671](https://github.com/kubernetes/ingress-nginx/pull/5671) Make liveness probe more fault tolerant than readiness probe
+
+### 2.10.0
+
+- [X] [#5843](https://github.com/kubernetes/ingress-nginx/pull/5843) Update jettech/kube-webhook-certgen image
+
+### 2.9.1
+
+- [X] [#5823](https://github.com/kubernetes/ingress-nginx/pull/5823) Add quoting to sysctls because numeric values need to be presented as strings (#5823)
+
+### 2.9.0
+
+- [X] [#5795](https://github.com/kubernetes/ingress-nginx/pull/5795) Use fully qualified images to avoid cri-o issues
+
+
+### TODO
+
+Keep building the changelog using *git log charts* checking the tag
Index: HelmChart/ingress-nginx/ingress-nginx/Chart.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/Chart.yaml b/HelmChart/ingress-nginx/ingress-nginx/Chart.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/Chart.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,60 @@
+annotations:
+  artifacthub.io/changes: |
+    - "[8810](https://github.com/kubernetes/ingress-nginx/pull/8810) Prepare for v1.3.0"
+    - "[8808](https://github.com/kubernetes/ingress-nginx/pull/8808) revert arch var name"
+    - "[8805](https://github.com/kubernetes/ingress-nginx/pull/8805) Bump k8s.io/klog/v2 from 2.60.1 to 2.70.1"
+    - "[8803](https://github.com/kubernetes/ingress-nginx/pull/8803) Update to nginx base with alpine v3.16"
+    - "[8802](https://github.com/kubernetes/ingress-nginx/pull/8802) chore: start v1.3.0 release process"
+    - "[8798](https://github.com/kubernetes/ingress-nginx/pull/8798) Add v1.24.0 to test matrix"
+    - "[8796](https://github.com/kubernetes/ingress-nginx/pull/8796) fix: add MAC_OS variable for static-check"
+    - "[8793](https://github.com/kubernetes/ingress-nginx/pull/8793) changed to alpine-v3.16"
+    - "[8781](https://github.com/kubernetes/ingress-nginx/pull/8781) Bump github.com/stretchr/testify from 1.7.5 to 1.8.0"
+    - "[8778](https://github.com/kubernetes/ingress-nginx/pull/8778) chore: remove stable.txt from release process"
+    - "[8775](https://github.com/kubernetes/ingress-nginx/pull/8775) Remove stable"
+    - "[8773](https://github.com/kubernetes/ingress-nginx/pull/8773) Bump github/codeql-action from 2.1.14 to 2.1.15"
+    - "[8772](https://github.com/kubernetes/ingress-nginx/pull/8772) Bump ossf/scorecard-action from 1.1.1 to 1.1.2"
+    - "[8771](https://github.com/kubernetes/ingress-nginx/pull/8771) fix bullet md format"
+    - "[8770](https://github.com/kubernetes/ingress-nginx/pull/8770) Add condition for monitoring.coreos.com/v1 API"
+    - "[8769](https://github.com/kubernetes/ingress-nginx/pull/8769) Fix typos and add links to developer guide"
+    - "[8767](https://github.com/kubernetes/ingress-nginx/pull/8767) change v1.2.0 to v1.2.1 in deploy doc URLs"
+    - "[8765](https://github.com/kubernetes/ingress-nginx/pull/8765) Bump github/codeql-action from 1.0.26 to 2.1.14"
+    - "[8752](https://github.com/kubernetes/ingress-nginx/pull/8752) Bump github.com/spf13/cobra from 1.4.0 to 1.5.0"
+    - "[8751](https://github.com/kubernetes/ingress-nginx/pull/8751) Bump github.com/stretchr/testify from 1.7.2 to 1.7.5"
+    - "[8750](https://github.com/kubernetes/ingress-nginx/pull/8750) added announcement"
+    - "[8740](https://github.com/kubernetes/ingress-nginx/pull/8740) change sha e2etestrunner and echoserver"
+    - "[8738](https://github.com/kubernetes/ingress-nginx/pull/8738) Update docs to make it easier for noobs to follow step by step"
+    - "[8737](https://github.com/kubernetes/ingress-nginx/pull/8737) updated baseimage sha"
+    - "[8736](https://github.com/kubernetes/ingress-nginx/pull/8736) set ld-musl-path"
+    - "[8733](https://github.com/kubernetes/ingress-nginx/pull/8733) feat: migrate leaderelection lock to leases"
+    - "[8726](https://github.com/kubernetes/ingress-nginx/pull/8726) prometheus metric: upstream_latency_seconds"
+    - "[8720](https://github.com/kubernetes/ingress-nginx/pull/8720) Ci pin deps"
+    - "[8719](https://github.com/kubernetes/ingress-nginx/pull/8719) Working OpenTelemetry sidecar (base nginx image)"
+    - "[8714](https://github.com/kubernetes/ingress-nginx/pull/8714) Create Openssf scorecard"
+    - "[8708](https://github.com/kubernetes/ingress-nginx/pull/8708) Bump github.com/prometheus/common from 0.34.0 to 0.35.0"
+    - "[8703](https://github.com/kubernetes/ingress-nginx/pull/8703) Bump actions/dependency-review-action from 1 to 2"
+    - "[8701](https://github.com/kubernetes/ingress-nginx/pull/8701) Fix several typos"
+    - "[8699](https://github.com/kubernetes/ingress-nginx/pull/8699) fix the gosec test and a make target for it"
+    - "[8698](https://github.com/kubernetes/ingress-nginx/pull/8698) Bump actions/upload-artifact from 2.3.1 to 3.1.0"
+    - "[8697](https://github.com/kubernetes/ingress-nginx/pull/8697) Bump actions/setup-go from 2.2.0 to 3.2.0"
+    - "[8695](https://github.com/kubernetes/ingress-nginx/pull/8695) Bump actions/download-artifact from 2 to 3"
+    - "[8694](https://github.com/kubernetes/ingress-nginx/pull/8694) Bump crazy-max/ghaction-docker-buildx from 1.6.2 to 3.3.1"
+  artifacthub.io/prerelease: "false"
+apiVersion: v2
+appVersion: 1.3.0
+description: Ingress controller for Kubernetes using NGINX as a reverse proxy and
+  load balancer
+home: https://github.com/kubernetes/ingress-nginx
+icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png
+keywords:
+- ingress
+- nginx
+kubeVersion: '>=1.20.0-0'
+maintainers:
+- name: rikatz
+- name: strongjz
+- name: tao12345666333
+name: ingress-nginx
+sources:
+- https://github.com/kubernetes/ingress-nginx
+type: application
+version: 4.2.0
Index: HelmChart/ingress-nginx/ingress-nginx/README.md
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/README.md b/HelmChart/ingress-nginx/ingress-nginx/README.md
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/README.md	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,492 @@
+# ingress-nginx
+
+[ingress-nginx](https://github.com/kubernetes/ingress-nginx) Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer
+
+![Version: 4.2.0](https://img.shields.io/badge/Version-4.2.0-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![AppVersion: 1.3.0](https://img.shields.io/badge/AppVersion-1.3.0-informational?style=flat-square)
+
+To use, add `ingressClassName: nginx` spec field or the `kubernetes.io/ingress.class: nginx` annotation to your Ingress resources.
+
+This chart bootstraps an ingress-nginx deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.
+
+## Prerequisites
+
+- Chart version 3.x.x: Kubernetes v1.16+
+- Chart version 4.x.x and above: Kubernetes v1.19+
+
+## Get Repo Info
+
+```console
+helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
+helm repo update
+```
+
+## Install Chart
+
+**Important:** only helm3 is supported
+
+```console
+helm install [RELEASE_NAME] ingress-nginx/ingress-nginx
+```
+
+The command deploys ingress-nginx on the Kubernetes cluster in the default configuration.
+
+_See [configuration](#configuration) below._
+
+_See [helm install](https://helm.sh/docs/helm/helm_install/) for command documentation._
+
+## Uninstall Chart
+
+```console
+helm uninstall [RELEASE_NAME]
+```
+
+This removes all the Kubernetes components associated with the chart and deletes the release.
+
+_See [helm uninstall](https://helm.sh/docs/helm/helm_uninstall/) for command documentation._
+
+## Upgrading Chart
+
+```console
+helm upgrade [RELEASE_NAME] [CHART] --install
+```
+
+_See [helm upgrade](https://helm.sh/docs/helm/helm_upgrade/) for command documentation._
+
+### Upgrading With Zero Downtime in Production
+
+By default the ingress-nginx controller has service interruptions whenever it's pods are restarted or redeployed. In order to fix that, see the excellent blog post by Lindsay Landry from Codecademy: [Kubernetes: Nginx and Zero Downtime in Production](https://medium.com/codecademy-engineering/kubernetes-nginx-and-zero-downtime-in-production-2c910c6a5ed8).
+
+### Migrating from stable/nginx-ingress
+
+There are two main ways to migrate a release from `stable/nginx-ingress` to `ingress-nginx/ingress-nginx` chart:
+
+1. For Nginx Ingress controllers used for non-critical services, the easiest method is to [uninstall](#uninstall-chart) the old release and [install](#install-chart) the new one
+1. For critical services in production that require zero-downtime, you will want to:
+    1. [Install](#install-chart) a second Ingress controller
+    1. Redirect your DNS traffic from the old controller to the new controller
+    1. Log traffic from both controllers during this changeover
+    1. [Uninstall](#uninstall-chart) the old controller once traffic has fully drained from it
+    1. For details on all of these steps see [Upgrading With Zero Downtime in Production](#upgrading-with-zero-downtime-in-production)
+
+Note that there are some different and upgraded configurations between the two charts, described by Rimas Mocevicius from JFrog in the "Upgrading to ingress-nginx Helm chart" section of [Migrating from Helm chart nginx-ingress to ingress-nginx](https://rimusz.net/migrating-to-ingress-nginx). As the `ingress-nginx/ingress-nginx` chart continues to update, you will want to check current differences by running [helm configuration](#configuration) commands on both charts.
+
+## Configuration
+
+See [Customizing the Chart Before Installing](https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing). To see all configurable options with detailed comments, visit the chart's [values.yaml](./values.yaml), or run these configuration commands:
+
+```console
+helm show values ingress-nginx/ingress-nginx
+```
+
+### PodDisruptionBudget
+
+Note that the PodDisruptionBudget resource will only be defined if the replicaCount is greater than one,
+else it would make it impossible to evacuate a node. See [gh issue #7127](https://github.com/helm/charts/issues/7127) for more info.
+
+### Prometheus Metrics
+
+The Nginx ingress controller can export Prometheus metrics, by setting `controller.metrics.enabled` to `true`.
+
+You can add Prometheus annotations to the metrics service using `controller.metrics.service.annotations`.
+Alternatively, if you use the Prometheus Operator, you can enable ServiceMonitor creation using `controller.metrics.serviceMonitor.enabled`. And set `controller.metrics.serviceMonitor.additionalLabels.release="prometheus"`. "release=prometheus" should match the label configured in the prometheus servicemonitor ( see `kubectl get servicemonitor prometheus-kube-prom-prometheus -oyaml -n prometheus`)
+
+### ingress-nginx nginx\_status page/stats server
+
+Previous versions of this chart had a `controller.stats.*` configuration block, which is now obsolete due to the following changes in nginx ingress controller:
+
+- In [0.16.1](https://github.com/kubernetes/ingress-nginx/blob/main/Changelog.md#0161), the vts (virtual host traffic status) dashboard was removed
+- In [0.23.0](https://github.com/kubernetes/ingress-nginx/blob/main/Changelog.md#0230), the status page at port 18080 is now a unix socket webserver only available at localhost.
+  You can use `curl --unix-socket /tmp/nginx-status-server.sock http://localhost/nginx_status` inside the controller container to access it locally, or use the snippet from [nginx-ingress changelog](https://github.com/kubernetes/ingress-nginx/blob/main/Changelog.md#0230) to re-enable the http server
+
+### ExternalDNS Service Configuration
+
+Add an [ExternalDNS](https://github.com/kubernetes-incubator/external-dns) annotation to the LoadBalancer service:
+
+```yaml
+controller:
+  service:
+    annotations:
+      external-dns.alpha.kubernetes.io/hostname: kubernetes-example.com.
+```
+
+### AWS L7 ELB with SSL Termination
+
+Annotate the controller as shown in the [nginx-ingress l7 patch](https://github.com/kubernetes/ingress-nginx/blob/ab3a789caae65eec4ad6e3b46b19750b481b6bce/deploy/aws/l7/service-l7.yaml):
+
+```yaml
+controller:
+  service:
+    targetPorts:
+      http: http
+      https: http
+    annotations:
+      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:XX-XXXX-X:XXXXXXXXX:certificate/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXX
+      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
+      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
+      service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '3600'
+```
+
+### AWS route53-mapper
+
+To configure the LoadBalancer service with the [route53-mapper addon](https://github.com/kubernetes/kops/blob/be63d4f1a7a46daaf1c4c482527328236850f111/addons/route53-mapper/README.md), add the `domainName` annotation and `dns` label:
+
+```yaml
+controller:
+  service:
+    labels:
+      dns: "route53"
+    annotations:
+      domainName: "kubernetes-example.com"
+```
+
+### Additional Internal Load Balancer
+
+This setup is useful when you need both external and internal load balancers but don't want to have multiple ingress controllers and multiple ingress objects per application.
+
+By default, the ingress object will point to the external load balancer address, but if correctly configured, you can make use of the internal one if the URL you are looking up resolves to the internal load balancer's URL.
+
+You'll need to set both the following values:
+
+`controller.service.internal.enabled`
+`controller.service.internal.annotations`
+
+If one of them is missing the internal load balancer will not be deployed. Example you may have `controller.service.internal.enabled=true` but no annotations set, in this case no action will be taken.
+
+`controller.service.internal.annotations` varies with the cloud service you're using.
+
+Example for AWS:
+
+```yaml
+controller:
+  service:
+    internal:
+      enabled: true
+      annotations:
+        # Create internal ELB
+        service.beta.kubernetes.io/aws-load-balancer-internal: "true"
+        # Any other annotation can be declared here.
+```
+
+Example for GCE:
+
+```yaml
+controller:
+  service:
+    internal:
+      enabled: true
+      annotations:
+        # Create internal LB. More informations: https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing
+        # For GKE versions 1.17 and later
+        networking.gke.io/load-balancer-type: "Internal"
+        # For earlier versions
+        # cloud.google.com/load-balancer-type: "Internal"
+
+        # Any other annotation can be declared here.
+```
+
+Example for Azure:
+
+```yaml
+controller:
+  service:
+      annotations:
+        # Create internal LB
+        service.beta.kubernetes.io/azure-load-balancer-internal: "true"
+        # Any other annotation can be declared here.
+```
+
+Example for Oracle Cloud Infrastructure:
+
+```yaml
+controller:
+  service:
+      annotations:
+        # Create internal LB
+        service.beta.kubernetes.io/oci-load-balancer-internal: "true"
+        # Any other annotation can be declared here.
+```
+
+An use case for this scenario is having a split-view DNS setup where the public zone CNAME records point to the external balancer URL while the private zone CNAME records point to the internal balancer URL. This way, you only need one ingress kubernetes object.
+
+Optionally you can set `controller.service.loadBalancerIP` if you need a static IP for the resulting `LoadBalancer`.
+
+### Ingress Admission Webhooks
+
+With nginx-ingress-controller version 0.25+, the nginx ingress controller pod exposes an endpoint that will integrate with the `validatingwebhookconfiguration` Kubernetes feature to prevent bad ingress from being added to the cluster.
+**This feature is enabled by default since 0.31.0.**
+
+With nginx-ingress-controller in 0.25.* work only with kubernetes 1.14+, 0.26 fix [this issue](https://github.com/kubernetes/ingress-nginx/pull/4521)
+
+### Helm Error When Upgrading: spec.clusterIP: Invalid value: ""
+
+If you are upgrading this chart from a version between 0.31.0 and 1.2.2 then you may get an error like this:
+
+```console
+Error: UPGRADE FAILED: Service "?????-controller" is invalid: spec.clusterIP: Invalid value: "": field is immutable
+```
+
+Detail of how and why are in [this issue](https://github.com/helm/charts/pull/13646) but to resolve this you can set `xxxx.service.omitClusterIP` to `true` where `xxxx` is the service referenced in the error.
+
+As of version `1.26.0` of this chart, by simply not providing any clusterIP value, `invalid: spec.clusterIP: Invalid value: "": field is immutable` will no longer occur since `clusterIP: ""` will not be rendered.
+
+## Requirements
+
+Kubernetes: `>=1.20.0-0`
+
+## Values
+
+| Key | Type | Default | Description |
+|-----|------|---------|-------------|
+| commonLabels | object | `{}` |  |
+| controller.addHeaders | object | `{}` | Will add custom headers before sending response traffic to the client according to: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#add-headers |
+| controller.admissionWebhooks.annotations | object | `{}` |  |
+| controller.admissionWebhooks.certificate | string | `"/usr/local/certificates/cert"` |  |
+| controller.admissionWebhooks.createSecretJob.resources | object | `{}` |  |
+| controller.admissionWebhooks.enabled | bool | `true` |  |
+| controller.admissionWebhooks.existingPsp | string | `""` | Use an existing PSP instead of creating one |
+| controller.admissionWebhooks.extraEnvs | list | `[]` | Additional environment variables to set |
+| controller.admissionWebhooks.failurePolicy | string | `"Fail"` | Admission Webhook failure policy to use |
+| controller.admissionWebhooks.key | string | `"/usr/local/certificates/key"` |  |
+| controller.admissionWebhooks.labels | object | `{}` | Labels to be added to admission webhooks |
+| controller.admissionWebhooks.namespaceSelector | object | `{}` |  |
+| controller.admissionWebhooks.objectSelector | object | `{}` |  |
+| controller.admissionWebhooks.patch.enabled | bool | `true` |  |
+| controller.admissionWebhooks.patch.fsGroup | int | `2000` |  |
+| controller.admissionWebhooks.patch.image.digest | string | `"sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660"` |  |
+| controller.admissionWebhooks.patch.image.image | string | `"ingress-nginx/kube-webhook-certgen"` |  |
+| controller.admissionWebhooks.patch.image.pullPolicy | string | `"IfNotPresent"` |  |
+| controller.admissionWebhooks.patch.image.registry | string | `"registry.k8s.io"` |  |
+| controller.admissionWebhooks.patch.image.tag | string | `"v1.1.1"` |  |
+| controller.admissionWebhooks.patch.labels | object | `{}` | Labels to be added to patch job resources |
+| controller.admissionWebhooks.patch.nodeSelector."kubernetes.io/os" | string | `"linux"` |  |
+| controller.admissionWebhooks.patch.podAnnotations | object | `{}` |  |
+| controller.admissionWebhooks.patch.priorityClassName | string | `""` | Provide a priority class name to the webhook patching job |
+| controller.admissionWebhooks.patch.runAsUser | int | `2000` |  |
+| controller.admissionWebhooks.patch.tolerations | list | `[]` |  |
+| controller.admissionWebhooks.patchWebhookJob.resources | object | `{}` |  |
+| controller.admissionWebhooks.port | int | `8443` |  |
+| controller.admissionWebhooks.service.annotations | object | `{}` |  |
+| controller.admissionWebhooks.service.externalIPs | list | `[]` |  |
+| controller.admissionWebhooks.service.loadBalancerSourceRanges | list | `[]` |  |
+| controller.admissionWebhooks.service.servicePort | int | `443` |  |
+| controller.admissionWebhooks.service.type | string | `"ClusterIP"` |  |
+| controller.affinity | object | `{}` | Affinity and anti-affinity rules for server scheduling to nodes |
+| controller.allowSnippetAnnotations | bool | `true` | This configuration defines if Ingress Controller should allow users to set their own *-snippet annotations, otherwise this is forbidden / dropped when users add those annotations. Global snippets in ConfigMap are still respected |
+| controller.annotations | object | `{}` | Annotations to be added to the controller Deployment or DaemonSet |
+| controller.autoscaling.behavior | object | `{}` |  |
+| controller.autoscaling.enabled | bool | `false` |  |
+| controller.autoscaling.maxReplicas | int | `11` |  |
+| controller.autoscaling.minReplicas | int | `1` |  |
+| controller.autoscaling.targetCPUUtilizationPercentage | int | `50` |  |
+| controller.autoscaling.targetMemoryUtilizationPercentage | int | `50` |  |
+| controller.autoscalingTemplate | list | `[]` |  |
+| controller.config | object | `{}` | Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/ |
+| controller.configAnnotations | object | `{}` | Annotations to be added to the controller config configuration configmap. |
+| controller.configMapNamespace | string | `""` | Allows customization of the configmap / nginx-configmap namespace; defaults to $(POD_NAMESPACE) |
+| controller.containerName | string | `"controller"` | Configures the controller container name |
+| controller.containerPort | object | `{"http":80,"https":443}` | Configures the ports that the nginx-controller listens on |
+| controller.customTemplate.configMapKey | string | `""` |  |
+| controller.customTemplate.configMapName | string | `""` |  |
+| controller.dnsConfig | object | `{}` | Optionally customize the pod dnsConfig. |
+| controller.dnsPolicy | string | `"ClusterFirst"` | Optionally change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'. By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller to keep resolving names inside the k8s network, use ClusterFirstWithHostNet. |
+| controller.electionID | string | `"ingress-controller-leader"` | Election ID to use for status update |
+| controller.enableMimalloc | bool | `true` | Enable mimalloc as a drop-in replacement for malloc. |
+| controller.existingPsp | string | `""` | Use an existing PSP instead of creating one |
+| controller.extraArgs | object | `{}` | Additional command line arguments to pass to nginx-ingress-controller E.g. to specify the default SSL certificate you can use |
+| controller.extraContainers | list | `[]` | Additional containers to be added to the controller pod. See https://github.com/lemonldap-ng-controller/lemonldap-ng-controller as example. |
+| controller.extraEnvs | list | `[]` | Additional environment variables to set |
+| controller.extraInitContainers | list | `[]` | Containers, which are run before the app containers are started. |
+| controller.extraModules | list | `[]` |  |
+| controller.extraVolumeMounts | list | `[]` | Additional volumeMounts to the controller main container. |
+| controller.extraVolumes | list | `[]` | Additional volumes to the controller pod. |
+| controller.healthCheckHost | string | `""` | Address to bind the health check endpoint. It is better to set this option to the internal node address if the ingress nginx controller is running in the `hostNetwork: true` mode. |
+| controller.healthCheckPath | string | `"/healthz"` | Path of the health check endpoint. All requests received on the port defined by the healthz-port parameter are forwarded internally to this path. |
+| controller.hostNetwork | bool | `false` | Required for use with CNI based kubernetes installations (such as ones set up by kubeadm), since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920 is merged |
+| controller.hostPort.enabled | bool | `false` | Enable 'hostPort' or not |
+| controller.hostPort.ports.http | int | `80` | 'hostPort' http port |
+| controller.hostPort.ports.https | int | `443` | 'hostPort' https port |
+| controller.hostname | object | `{}` | Optionally customize the pod hostname. |
+| controller.image.allowPrivilegeEscalation | bool | `true` |  |
+| controller.image.chroot | bool | `false` |  |
+| controller.image.digest | string | `"sha256:d1707ca76d3b044ab8a28277a2466a02100ee9f58a86af1535a3edf9323ea1b5"` |  |
+| controller.image.digestChroot | string | `"sha256:0fcb91216a22aae43b374fc2e6a03b8afe9e8c78cbf07a09d75636dc4ea3c191"` |  |
+| controller.image.image | string | `"ingress-nginx/controller"` |  |
+| controller.image.pullPolicy | string | `"IfNotPresent"` |  |
+| controller.image.registry | string | `"registry.k8s.io"` |  |
+| controller.image.runAsUser | int | `101` |  |
+| controller.image.tag | string | `"v1.3.0"` |  |
+| controller.ingressClass | string | `"nginx"` | For backwards compatibility with ingress.class annotation, use ingressClass. Algorithm is as follows, first ingressClassName is considered, if not present, controller looks for ingress.class annotation |
+| controller.ingressClassByName | bool | `false` | Process IngressClass per name (additionally as per spec.controller). |
+| controller.ingressClassResource.controllerValue | string | `"k8s.io/ingress-nginx"` | Controller-value of the controller that is processing this ingressClass |
+| controller.ingressClassResource.default | bool | `false` | Is this the default ingressClass for the cluster |
+| controller.ingressClassResource.enabled | bool | `true` | Is this ingressClass enabled or not |
+| controller.ingressClassResource.name | string | `"nginx"` | Name of the ingressClass |
+| controller.ingressClassResource.parameters | object | `{}` | Parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters. |
+| controller.keda.apiVersion | string | `"keda.sh/v1alpha1"` |  |
+| controller.keda.behavior | object | `{}` |  |
+| controller.keda.cooldownPeriod | int | `300` |  |
+| controller.keda.enabled | bool | `false` |  |
+| controller.keda.maxReplicas | int | `11` |  |
+| controller.keda.minReplicas | int | `1` |  |
+| controller.keda.pollingInterval | int | `30` |  |
+| controller.keda.restoreToOriginalReplicaCount | bool | `false` |  |
+| controller.keda.scaledObject.annotations | object | `{}` |  |
+| controller.keda.triggers | list | `[]` |  |
+| controller.kind | string | `"Deployment"` | Use a `DaemonSet` or `Deployment` |
+| controller.labels | object | `{}` | Labels to be added to the controller Deployment or DaemonSet and other resources that do not have option to specify labels |
+| controller.lifecycle | object | `{"preStop":{"exec":{"command":["/wait-shutdown"]}}}` | Improve connection draining when ingress controller pod is deleted using a lifecycle hook: With this new hook, we increased the default terminationGracePeriodSeconds from 30 seconds to 300, allowing the draining of connections up to five minutes. If the active connections end before that, the pod will terminate gracefully at that time. To effectively take advantage of this feature, the Configmap feature worker-shutdown-timeout new value is 240s instead of 10s. |
+| controller.livenessProbe.failureThreshold | int | `5` |  |
+| controller.livenessProbe.httpGet.path | string | `"/healthz"` |  |
+| controller.livenessProbe.httpGet.port | int | `10254` |  |
+| controller.livenessProbe.httpGet.scheme | string | `"HTTP"` |  |
+| controller.livenessProbe.initialDelaySeconds | int | `10` |  |
+| controller.livenessProbe.periodSeconds | int | `10` |  |
+| controller.livenessProbe.successThreshold | int | `1` |  |
+| controller.livenessProbe.timeoutSeconds | int | `1` |  |
+| controller.maxmindLicenseKey | string | `""` | Maxmind license key to download GeoLite2 Databases. |
+| controller.metrics.enabled | bool | `false` |  |
+| controller.metrics.port | int | `10254` |  |
+| controller.metrics.prometheusRule.additionalLabels | object | `{}` |  |
+| controller.metrics.prometheusRule.enabled | bool | `false` |  |
+| controller.metrics.prometheusRule.rules | list | `[]` |  |
+| controller.metrics.service.annotations | object | `{}` |  |
+| controller.metrics.service.externalIPs | list | `[]` | List of IP addresses at which the stats-exporter service is available |
+| controller.metrics.service.loadBalancerSourceRanges | list | `[]` |  |
+| controller.metrics.service.servicePort | int | `10254` |  |
+| controller.metrics.service.type | string | `"ClusterIP"` |  |
+| controller.metrics.serviceMonitor.additionalLabels | object | `{}` |  |
+| controller.metrics.serviceMonitor.enabled | bool | `false` |  |
+| controller.metrics.serviceMonitor.metricRelabelings | list | `[]` |  |
+| controller.metrics.serviceMonitor.namespace | string | `""` |  |
+| controller.metrics.serviceMonitor.namespaceSelector | object | `{}` |  |
+| controller.metrics.serviceMonitor.relabelings | list | `[]` |  |
+| controller.metrics.serviceMonitor.scrapeInterval | string | `"30s"` |  |
+| controller.metrics.serviceMonitor.targetLabels | list | `[]` |  |
+| controller.minAvailable | int | `1` |  |
+| controller.minReadySeconds | int | `0` | `minReadySeconds` to avoid killing pods before we are ready |
+| controller.name | string | `"controller"` |  |
+| controller.nodeSelector | object | `{"kubernetes.io/os":"linux"}` | Node labels for controller pod assignment |
+| controller.podAnnotations | object | `{}` | Annotations to be added to controller pods |
+| controller.podLabels | object | `{}` | Labels to add to the pod container metadata |
+| controller.podSecurityContext | object | `{}` | Security Context policies for controller pods |
+| controller.priorityClassName | string | `""` |  |
+| controller.proxySetHeaders | object | `{}` | Will add custom headers before sending traffic to backends according to https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/custom-headers |
+| controller.publishService | object | `{"enabled":true,"pathOverride":""}` | Allows customization of the source of the IP address or FQDN to report in the ingress status field. By default, it reads the information provided by the service. If disable, the status field reports the IP address of the node or nodes where an ingress controller pod is running. |
+| controller.publishService.enabled | bool | `true` | Enable 'publishService' or not |
+| controller.publishService.pathOverride | string | `""` | Allows overriding of the publish service to bind to Must be <namespace>/<service_name> |
+| controller.readinessProbe.failureThreshold | int | `3` |  |
+| controller.readinessProbe.httpGet.path | string | `"/healthz"` |  |
+| controller.readinessProbe.httpGet.port | int | `10254` |  |
+| controller.readinessProbe.httpGet.scheme | string | `"HTTP"` |  |
+| controller.readinessProbe.initialDelaySeconds | int | `10` |  |
+| controller.readinessProbe.periodSeconds | int | `10` |  |
+| controller.readinessProbe.successThreshold | int | `1` |  |
+| controller.readinessProbe.timeoutSeconds | int | `1` |  |
+| controller.replicaCount | int | `1` |  |
+| controller.reportNodeInternalIp | bool | `false` | Bare-metal considerations via the host network https://kubernetes.github.io/ingress-nginx/deploy/baremetal/#via-the-host-network Ingress status was blank because there is no Service exposing the NGINX Ingress controller in a configuration using the host network, the default --publish-service flag used in standard cloud setups does not apply |
+| controller.resources.requests.cpu | string | `"100m"` |  |
+| controller.resources.requests.memory | string | `"90Mi"` |  |
+| controller.scope.enabled | bool | `false` | Enable 'scope' or not |
+| controller.scope.namespace | string | `""` | Namespace to limit the controller to; defaults to $(POD_NAMESPACE) |
+| controller.scope.namespaceSelector | string | `""` | When scope.enabled == false, instead of watching all namespaces, we watching namespaces whose labels only match with namespaceSelector. Format like foo=bar. Defaults to empty, means watching all namespaces. |
+| controller.service.annotations | object | `{}` |  |
+| controller.service.appProtocol | bool | `true` | If enabled is adding an appProtocol option for Kubernetes service. An appProtocol field replacing annotations that were using for setting a backend protocol. Here is an example for AWS: service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http It allows choosing the protocol for each backend specified in the Kubernetes service. See the following GitHub issue for more details about the purpose: https://github.com/kubernetes/kubernetes/issues/40244 Will be ignored for Kubernetes versions older than 1.20 |
+| controller.service.enableHttp | bool | `true` |  |
+| controller.service.enableHttps | bool | `true` |  |
+| controller.service.enabled | bool | `true` |  |
+| controller.service.external.enabled | bool | `true` |  |
+| controller.service.externalIPs | list | `[]` | List of IP addresses at which the controller services are available |
+| controller.service.internal.annotations | object | `{}` | Annotations are mandatory for the load balancer to come up. Varies with the cloud service. |
+| controller.service.internal.enabled | bool | `false` | Enables an additional internal load balancer (besides the external one). |
+| controller.service.internal.loadBalancerSourceRanges | list | `[]` | Restrict access For LoadBalancer service. Defaults to 0.0.0.0/0. |
+| controller.service.ipFamilies | list | `["IPv4"]` | List of IP families (e.g. IPv4, IPv6) assigned to the service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. |
+| controller.service.ipFamilyPolicy | string | `"SingleStack"` | Represents the dual-stack-ness requested or required by this Service. Possible values are SingleStack, PreferDualStack or RequireDualStack. The ipFamilies and clusterIPs fields depend on the value of this field. |
+| controller.service.labels | object | `{}` |  |
+| controller.service.loadBalancerIP | string | `""` | Used by cloud providers to connect the resulting `LoadBalancer` to a pre-existing static IP according to https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer |
+| controller.service.loadBalancerSourceRanges | list | `[]` |  |
+| controller.service.nodePorts.http | string | `""` |  |
+| controller.service.nodePorts.https | string | `""` |  |
+| controller.service.nodePorts.tcp | object | `{}` |  |
+| controller.service.nodePorts.udp | object | `{}` |  |
+| controller.service.ports.http | int | `80` |  |
+| controller.service.ports.https | int | `443` |  |
+| controller.service.targetPorts.http | string | `"http"` |  |
+| controller.service.targetPorts.https | string | `"https"` |  |
+| controller.service.type | string | `"LoadBalancer"` |  |
+| controller.shareProcessNamespace | bool | `false` |  |
+| controller.sysctls | object | `{}` | See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for notes on enabling and using sysctls |
+| controller.tcp.annotations | object | `{}` | Annotations to be added to the tcp config configmap |
+| controller.tcp.configMapNamespace | string | `""` | Allows customization of the tcp-services-configmap; defaults to $(POD_NAMESPACE) |
+| controller.terminationGracePeriodSeconds | int | `300` | `terminationGracePeriodSeconds` to avoid killing pods before we are ready |
+| controller.tolerations | list | `[]` | Node tolerations for server scheduling to nodes with taints |
+| controller.topologySpreadConstraints | list | `[]` | Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in. |
+| controller.udp.annotations | object | `{}` | Annotations to be added to the udp config configmap |
+| controller.udp.configMapNamespace | string | `""` | Allows customization of the udp-services-configmap; defaults to $(POD_NAMESPACE) |
+| controller.updateStrategy | object | `{}` | The update strategy to apply to the Deployment or DaemonSet |
+| controller.watchIngressWithoutClass | bool | `false` | Process Ingress objects without ingressClass annotation/ingressClassName field Overrides value for --watch-ingress-without-class flag of the controller binary Defaults to false |
+| defaultBackend.affinity | object | `{}` |  |
+| defaultBackend.autoscaling.annotations | object | `{}` |  |
+| defaultBackend.autoscaling.enabled | bool | `false` |  |
+| defaultBackend.autoscaling.maxReplicas | int | `2` |  |
+| defaultBackend.autoscaling.minReplicas | int | `1` |  |
+| defaultBackend.autoscaling.targetCPUUtilizationPercentage | int | `50` |  |
+| defaultBackend.autoscaling.targetMemoryUtilizationPercentage | int | `50` |  |
+| defaultBackend.containerSecurityContext | object | `{}` | Security Context policies for controller main container. See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for notes on enabling and using sysctls |
+| defaultBackend.enabled | bool | `false` |  |
+| defaultBackend.existingPsp | string | `""` | Use an existing PSP instead of creating one |
+| defaultBackend.extraArgs | object | `{}` |  |
+| defaultBackend.extraEnvs | list | `[]` | Additional environment variables to set for defaultBackend pods |
+| defaultBackend.extraVolumeMounts | list | `[]` |  |
+| defaultBackend.extraVolumes | list | `[]` |  |
+| defaultBackend.image.allowPrivilegeEscalation | bool | `false` |  |
+| defaultBackend.image.image | string | `"defaultbackend-amd64"` |  |
+| defaultBackend.image.pullPolicy | string | `"IfNotPresent"` |  |
+| defaultBackend.image.readOnlyRootFilesystem | bool | `true` |  |
+| defaultBackend.image.registry | string | `"registry.k8s.io"` |  |
+| defaultBackend.image.runAsNonRoot | bool | `true` |  |
+| defaultBackend.image.runAsUser | int | `65534` |  |
+| defaultBackend.image.tag | string | `"1.5"` |  |
+| defaultBackend.labels | object | `{}` | Labels to be added to the default backend resources |
+| defaultBackend.livenessProbe.failureThreshold | int | `3` |  |
+| defaultBackend.livenessProbe.initialDelaySeconds | int | `30` |  |
+| defaultBackend.livenessProbe.periodSeconds | int | `10` |  |
+| defaultBackend.livenessProbe.successThreshold | int | `1` |  |
+| defaultBackend.livenessProbe.timeoutSeconds | int | `5` |  |
+| defaultBackend.minAvailable | int | `1` |  |
+| defaultBackend.name | string | `"defaultbackend"` |  |
+| defaultBackend.nodeSelector | object | `{"kubernetes.io/os":"linux"}` | Node labels for default backend pod assignment |
+| defaultBackend.podAnnotations | object | `{}` | Annotations to be added to default backend pods |
+| defaultBackend.podLabels | object | `{}` | Labels to add to the pod container metadata |
+| defaultBackend.podSecurityContext | object | `{}` | Security Context policies for controller pods See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for notes on enabling and using sysctls |
+| defaultBackend.port | int | `8080` |  |
+| defaultBackend.priorityClassName | string | `""` |  |
+| defaultBackend.readinessProbe.failureThreshold | int | `6` |  |
+| defaultBackend.readinessProbe.initialDelaySeconds | int | `0` |  |
+| defaultBackend.readinessProbe.periodSeconds | int | `5` |  |
+| defaultBackend.readinessProbe.successThreshold | int | `1` |  |
+| defaultBackend.readinessProbe.timeoutSeconds | int | `5` |  |
+| defaultBackend.replicaCount | int | `1` |  |
+| defaultBackend.resources | object | `{}` |  |
+| defaultBackend.service.annotations | object | `{}` |  |
+| defaultBackend.service.externalIPs | list | `[]` | List of IP addresses at which the default backend service is available |
+| defaultBackend.service.loadBalancerSourceRanges | list | `[]` |  |
+| defaultBackend.service.servicePort | int | `80` |  |
+| defaultBackend.service.type | string | `"ClusterIP"` |  |
+| defaultBackend.serviceAccount.automountServiceAccountToken | bool | `true` |  |
+| defaultBackend.serviceAccount.create | bool | `true` |  |
+| defaultBackend.serviceAccount.name | string | `""` |  |
+| defaultBackend.tolerations | list | `[]` | Node tolerations for server scheduling to nodes with taints |
+| dhParam | string | `nil` | A base64-encoded Diffie-Hellman parameter. This can be generated with: `openssl dhparam 4096 2> /dev/null | base64` |
+| imagePullSecrets | list | `[]` | Optional array of imagePullSecrets containing private registry credentials |
+| podSecurityPolicy.enabled | bool | `false` |  |
+| portNamePrefix | string | `""` | Prefix for TCP and UDP ports names in ingress controller service |
+| rbac.create | bool | `true` |  |
+| rbac.scope | bool | `false` |  |
+| revisionHistoryLimit | int | `10` | Rollback limit |
+| serviceAccount.annotations | object | `{}` | Annotations for the controller service account |
+| serviceAccount.automountServiceAccountToken | bool | `true` |  |
+| serviceAccount.create | bool | `true` |  |
+| serviceAccount.name | string | `""` |  |
+| tcp | object | `{}` | TCP service key-value pairs |
+| udp | object | `{}` | UDP service key-value pairs |
+
Index: HelmChart/ingress-nginx/ingress-nginx/ci/controller-custom-ingressclass-flags.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/controller-custom-ingressclass-flags.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/controller-custom-ingressclass-flags.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/controller-custom-ingressclass-flags.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,7 @@
+controller:
+  watchIngressWithoutClass: true
+  ingressClassResource:
+    name: custom-nginx
+    enabled: true
+    default: true
+    controllerValue: "k8s.io/custom-nginx"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-customconfig-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-customconfig-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-customconfig-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-customconfig-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,14 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  kind: DaemonSet
+  allowSnippetAnnotations: false
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+
+  config:
+    use-proxy-protocol: "true"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-customnodeport-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-customnodeport-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-customnodeport-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-customnodeport-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,22 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+
+  service:
+    type: NodePort
+    nodePorts:
+      tcp:
+        9000: 30090
+      udp:
+        9001: 30091
+
+tcp:
+  9000: "default/test:8080"
+
+udp:
+  9001: "default/test:8080"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-extra-modules.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-extra-modules.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-extra-modules.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-extra-modules.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,10 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+  service:
+    type: ClusterIP
+  extraModules:
+    - name: opentelemetry
+      image: busybox
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-headers-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-headers-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-headers-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-headers-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,14 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  addHeaders:
+    X-Frame-Options: deny
+  proxySetHeaders:
+    X-Forwarded-Proto: https
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-internal-lb-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-internal-lb-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-internal-lb-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-internal-lb-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,14 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+    internal:
+      enabled: true
+      annotations:
+        service.beta.kubernetes.io/aws-load-balancer-internal: "true"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-nodeport-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-nodeport-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-nodeport-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-nodeport-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,10 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: NodePort
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-podannotations-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-podannotations-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-podannotations-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-podannotations-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,17 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  metrics:
+    enabled: true
+  service:
+    type: ClusterIP
+  podAnnotations:
+    prometheus.io/path: /metrics
+    prometheus.io/port: "10254"
+    prometheus.io/scheme: http
+    prometheus.io/scrape: "true"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-configMapNamespace-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-configMapNamespace-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-configMapNamespace-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-configMapNamespace-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,20 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+  tcp:
+    configMapNamespace: default
+  udp:
+    configMapNamespace: default
+
+tcp:
+  9000: "default/test:8080"
+
+udp:
+  9001: "default/test:8080"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-portNamePrefix-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-portNamePrefix-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-portNamePrefix-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-portNamePrefix-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,18 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+
+tcp:
+  9000: "default/test:8080"
+
+udp:
+  9001: "default/test:8080"
+
+portNamePrefix: "port"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-udp-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,16 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+
+tcp:
+  9000: "default/test:8080"
+
+udp:
+  9001: "default/test:8080"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/daemonset-tcp-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,14 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+
+tcp:
+  9000: "default/test:8080"
+  9001: "default/test:8080"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-default-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-default-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-default-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-default-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,10 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-metrics-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-metrics-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-metrics-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-metrics-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,12 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  metrics:
+    enabled: true
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-psp-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-psp-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-psp-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-psp-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,13 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+
+podSecurityPolicy:
+  enabled: true
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-webhook-and-psp-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-webhook-and-psp-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-webhook-and-psp-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-webhook-and-psp-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,13 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: true
+  service:
+    type: ClusterIP
+
+podSecurityPolicy:
+  enabled: true
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-webhook-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-webhook-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-webhook-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deamonset-webhook-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,10 @@
+controller:
+  kind: DaemonSet
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: true
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-autoscaling-behavior-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-autoscaling-behavior-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-autoscaling-behavior-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-autoscaling-behavior-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,14 @@
+controller:
+  autoscaling:
+    enabled: true
+    behavior:
+      scaleDown:
+        stabilizationWindowSeconds: 300
+        policies:
+        - type: Pods
+          value: 1
+          periodSeconds: 180
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-autoscaling-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-autoscaling-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-autoscaling-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-autoscaling-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,11 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  autoscaling:
+    enabled: true
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-customconfig-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-customconfig-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-customconfig-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-customconfig-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,12 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  config:
+    use-proxy-protocol: "true"
+  allowSnippetAnnotations: false
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-customnodeport-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-customnodeport-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-customnodeport-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-customnodeport-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,20 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: NodePort
+    nodePorts:
+      tcp:
+        9000: 30090
+      udp:
+        9001: 30091
+
+tcp:
+  9000: "default/test:8080"
+
+udp:
+  9001: "default/test:8080"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-default-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-default-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-default-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-default-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,8 @@
+# Left blank to test default values
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-extra-modules.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-extra-modules.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-extra-modules.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-extra-modules.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,10 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  service:
+    type: ClusterIP
+  extraModules:
+    - name: opentelemetry
+      image: busybox
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-headers-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-headers-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-headers-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-headers-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,13 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  addHeaders:
+    X-Frame-Options: deny
+  proxySetHeaders:
+    X-Forwarded-Proto: https
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-internal-lb-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-internal-lb-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-internal-lb-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-internal-lb-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,13 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+    internal:
+      enabled: true
+      annotations:
+        service.beta.kubernetes.io/aws-load-balancer-internal: "true"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-metrics-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-metrics-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-metrics-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-metrics-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,11 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  metrics:
+    enabled: true
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-nodeport-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-nodeport-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-nodeport-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-nodeport-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,9 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: NodePort
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-podannotations-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-podannotations-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-podannotations-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-podannotations-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,16 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  metrics:
+    enabled: true
+  service:
+    type: ClusterIP
+  podAnnotations:
+    prometheus.io/path: /metrics
+    prometheus.io/port: "10254"
+    prometheus.io/scheme: http
+    prometheus.io/scrape: "true"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-psp-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-psp-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-psp-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-psp-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,10 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  service:
+    type: ClusterIP
+
+podSecurityPolicy:
+  enabled: true
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-configMapNamespace-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-configMapNamespace-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-configMapNamespace-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-configMapNamespace-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,19 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+  tcp:
+    configMapNamespace: default
+  udp:
+    configMapNamespace: default
+
+tcp:
+  9000: "default/test:8080"
+
+udp:
+  9001: "default/test:8080"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-portNamePrefix-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-portNamePrefix-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-portNamePrefix-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-portNamePrefix-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,17 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+
+tcp:
+  9000: "default/test:8080"
+
+udp:
+  9001: "default/test:8080"
+
+portNamePrefix: "port"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-udp-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,15 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: false
+  service:
+    type: ClusterIP
+
+tcp:
+  9000: "default/test:8080"
+
+udp:
+  9001: "default/test:8080"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-tcp-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,11 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  service:
+    type: ClusterIP
+
+tcp:
+  9000: "default/test:8080"
+  9001: "default/test:8080"
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-and-psp-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-and-psp-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-and-psp-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-and-psp-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,12 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: true
+  service:
+    type: ClusterIP
+
+podSecurityPolicy:
+  enabled: true
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-extraEnvs-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-extraEnvs-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-extraEnvs-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-extraEnvs-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,12 @@
+controller:
+  service:
+    type: ClusterIP
+  admissionWebhooks:
+    enabled: true
+    extraEnvs:
+      - name: FOO
+        value: foo
+      - name: TEST
+        value: test
+    patch:
+      enabled: true
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-resources-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-resources-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-resources-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-resources-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,23 @@
+controller:
+  service:
+    type: ClusterIP
+  admissionWebhooks:
+    enabled: true
+    createSecretJob:
+      resources:
+        limits:
+          cpu: 10m
+          memory: 20Mi
+        requests:
+          cpu: 10m
+          memory: 20Mi
+    patchWebhookJob:
+      resources:
+        limits:
+          cpu: 10m
+          memory: 20Mi
+        requests:
+          cpu: 10m
+          memory: 20Mi
+    patch:
+      enabled: true
Index: HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-values.yaml b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/ci/deployment-webhook-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,9 @@
+controller:
+  image:
+    repository: ingress-controller/controller
+    tag: 1.0.0-dev
+    digest: null
+  admissionWebhooks:
+    enabled: true
+  service:
+    type: ClusterIP
Index: HelmChart/ingress-nginx/ingress-nginx/templates/NOTES.txt
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/NOTES.txt b/HelmChart/ingress-nginx/ingress-nginx/templates/NOTES.txt
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/NOTES.txt	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,80 @@
+The ingress-nginx controller has been installed.
+
+{{- if contains "NodePort" .Values.controller.service.type }}
+Get the application URL by running these commands:
+
+{{- if (not (empty .Values.controller.service.nodePorts.http)) }}
+  export HTTP_NODE_PORT={{ .Values.controller.service.nodePorts.http }}
+{{- else }}
+  export HTTP_NODE_PORT=$(kubectl --namespace {{ .Release.Namespace }} get services -o jsonpath="{.spec.ports[0].nodePort}" {{ include "ingress-nginx.controller.fullname" . }})
+{{- end }}
+{{- if (not (empty .Values.controller.service.nodePorts.https)) }}
+  export HTTPS_NODE_PORT={{ .Values.controller.service.nodePorts.https }}
+{{- else }}
+  export HTTPS_NODE_PORT=$(kubectl --namespace {{ .Release.Namespace }} get services -o jsonpath="{.spec.ports[1].nodePort}" {{ include "ingress-nginx.controller.fullname" . }})
+{{- end }}
+  export NODE_IP=$(kubectl --namespace {{ .Release.Namespace }} get nodes -o jsonpath="{.items[0].status.addresses[1].address}")
+
+  echo "Visit http://$NODE_IP:$HTTP_NODE_PORT to access your application via HTTP."
+  echo "Visit https://$NODE_IP:$HTTPS_NODE_PORT to access your application via HTTPS."
+{{- else if contains "LoadBalancer" .Values.controller.service.type }}
+It may take a few minutes for the LoadBalancer IP to be available.
+You can watch the status by running 'kubectl --namespace {{ .Release.Namespace }} get services -o wide -w {{ include "ingress-nginx.controller.fullname" . }}'
+{{- else if contains "ClusterIP"  .Values.controller.service.type }}
+Get the application URL by running these commands:
+  export POD_NAME=$(kubectl --namespace {{ .Release.Namespace }} get pods -o jsonpath="{.items[0].metadata.name}" -l "app={{ template "ingress-nginx.name" . }},component={{ .Values.controller.name }},release={{ .Release.Name }}")
+  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
+  echo "Visit http://127.0.0.1:8080 to access your application."
+{{- end }}
+
+An example Ingress that makes use of the controller:
+
+{{- $isV1 := semverCompare ">=1" .Chart.AppVersion}}
+  apiVersion: networking.k8s.io/v1
+  kind: Ingress
+  metadata:
+    name: example
+    namespace: foo
+    {{- if eq $isV1 false }}
+    annotations:
+      kubernetes.io/ingress.class: {{ .Values.controller.ingressClass }}
+    {{- end }}
+  spec:
+    {{- if $isV1 }}
+    ingressClassName: {{ .Values.controller.ingressClassResource.name }}
+    {{- end }}
+    rules:
+      - host: www.example.com
+        http:
+          paths:
+            - pathType: Prefix
+              backend:
+                service:
+                  name: exampleService
+                  port:
+                    number: 80
+              path: /
+    # This section is only required if TLS is to be enabled for the Ingress
+    tls:
+      - hosts:
+        - www.example.com
+        secretName: example-tls
+
+If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:
+
+  apiVersion: v1
+  kind: Secret
+  metadata:
+    name: example-tls
+    namespace: foo
+  data:
+    tls.crt: <base64 encoded cert>
+    tls.key: <base64 encoded key>
+  type: kubernetes.io/tls
+
+{{- if .Values.controller.headers }}
+#################################################################################
+######   WARNING: `controller.headers` has been deprecated!                 #####
+######            It has been renamed to `controller.proxySetHeaders`.      #####
+#################################################################################
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,34 @@
+{{- if and .Values.controller.admissionWebhooks.enabled .Values.controller.admissionWebhooks.patch.enabled -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ include "ingress-nginx.fullname" . }}-admission
+  annotations:
+    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.patch.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+rules:
+  - apiGroups:
+      - admissionregistration.k8s.io
+    resources:
+      - validatingwebhookconfigurations
+    verbs:
+      - get
+      - update
+{{- if .Values.podSecurityPolicy.enabled }}
+  - apiGroups: ['extensions']
+    resources: ['podsecuritypolicies']
+    verbs:     ['use']
+    resourceNames:
+    {{- with .Values.controller.admissionWebhooks.existingPsp }}
+    - {{ . }}
+    {{- else }}
+    - {{ include "ingress-nginx.fullname" . }}-admission
+    {{- end }}
+{{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,23 @@
+{{- if and .Values.controller.admissionWebhooks.enabled .Values.controller.admissionWebhooks.patch.enabled -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name:  {{ include "ingress-nginx.fullname" . }}-admission
+  annotations:
+    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.patch.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ include "ingress-nginx.fullname" . }}-admission
+subjects:
+  - kind: ServiceAccount
+    name: {{ include "ingress-nginx.fullname" . }}-admission
+    namespace: {{ .Release.Namespace | quote }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,79 @@
+{{- if and .Values.controller.admissionWebhooks.enabled .Values.controller.admissionWebhooks.patch.enabled -}}
+apiVersion: batch/v1
+kind: Job
+metadata:
+  name: {{ include "ingress-nginx.fullname" . }}-admission-create
+  namespace: {{ .Release.Namespace }}
+  annotations:
+    "helm.sh/hook": pre-install,pre-upgrade
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+    {{- with .Values.controller.admissionWebhooks.annotations }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.patch.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+spec:
+{{- if .Capabilities.APIVersions.Has "batch/v1alpha1" }}
+  # Alpha feature since k8s 1.12
+  ttlSecondsAfterFinished: 0
+{{- end }}
+  template:
+    metadata:
+      name: {{ include "ingress-nginx.fullname" . }}-admission-create
+    {{- if .Values.controller.admissionWebhooks.patch.podAnnotations }}
+      annotations: {{ toYaml .Values.controller.admissionWebhooks.patch.podAnnotations | nindent 8 }}
+    {{- end }}
+      labels:
+        {{- include "ingress-nginx.labels" . | nindent 8 }}
+        app.kubernetes.io/component: admission-webhook
+        {{- with .Values.controller.admissionWebhooks.patch.labels }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+    spec:
+    {{- if .Values.controller.admissionWebhooks.patch.priorityClassName }}
+      priorityClassName: {{ .Values.controller.admissionWebhooks.patch.priorityClassName }}
+    {{- end }}
+    {{- if .Values.imagePullSecrets }}
+      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
+    {{- end }}
+      containers:
+        - name: create
+          {{- with .Values.controller.admissionWebhooks.patch.image }}
+          image: "{{- if .repository -}}{{ .repository }}{{ else }}{{ .registry }}/{{ .image }}{{- end -}}:{{ .tag }}{{- if (.digest) -}} @{{.digest}} {{- end -}}"
+          {{- end }}
+          imagePullPolicy: {{ .Values.controller.admissionWebhooks.patch.image.pullPolicy }}
+          args:
+            - create
+            - --host={{ include "ingress-nginx.controller.fullname" . }}-admission,{{ include "ingress-nginx.controller.fullname" . }}-admission.$(POD_NAMESPACE).svc
+            - --namespace=$(POD_NAMESPACE)
+            - --secret-name={{ include "ingress-nginx.fullname" . }}-admission
+          env:
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+          {{- if .Values.controller.admissionWebhooks.extraEnvs }}
+            {{- toYaml .Values.controller.admissionWebhooks.extraEnvs | nindent 12 }}
+          {{- end }}
+          securityContext:
+            allowPrivilegeEscalation: false
+          {{- if .Values.controller.admissionWebhooks.createSecretJob.resources }}
+          resources: {{ toYaml .Values.controller.admissionWebhooks.createSecretJob.resources | nindent 12 }}
+          {{- end }}
+      restartPolicy: OnFailure
+      serviceAccountName: {{ include "ingress-nginx.fullname" . }}-admission
+    {{- if .Values.controller.admissionWebhooks.patch.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.controller.admissionWebhooks.patch.nodeSelector | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.admissionWebhooks.patch.tolerations }}
+      tolerations: {{ toYaml .Values.controller.admissionWebhooks.patch.tolerations | nindent 8 }}
+    {{- end }}
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: {{ .Values.controller.admissionWebhooks.patch.runAsUser }}
+        fsGroup: {{ .Values.controller.admissionWebhooks.patch.fsGroup }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,81 @@
+{{- if and .Values.controller.admissionWebhooks.enabled .Values.controller.admissionWebhooks.patch.enabled -}}
+apiVersion: batch/v1
+kind: Job
+metadata:
+  name: {{ include "ingress-nginx.fullname" . }}-admission-patch
+  namespace: {{ .Release.Namespace }}
+  annotations:
+    "helm.sh/hook": post-install,post-upgrade
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+    {{- with .Values.controller.admissionWebhooks.annotations }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.patch.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+spec:
+{{- if .Capabilities.APIVersions.Has "batch/v1alpha1" }}
+  # Alpha feature since k8s 1.12
+  ttlSecondsAfterFinished: 0
+{{- end }}
+  template:
+    metadata:
+      name: {{ include "ingress-nginx.fullname" . }}-admission-patch
+    {{- if .Values.controller.admissionWebhooks.patch.podAnnotations }}
+      annotations: {{ toYaml .Values.controller.admissionWebhooks.patch.podAnnotations | nindent 8 }}
+    {{- end }}
+      labels:
+        {{- include "ingress-nginx.labels" . | nindent 8 }}
+        app.kubernetes.io/component: admission-webhook
+        {{- with .Values.controller.admissionWebhooks.patch.labels }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+    spec:
+    {{- if .Values.controller.admissionWebhooks.patch.priorityClassName }}
+      priorityClassName: {{ .Values.controller.admissionWebhooks.patch.priorityClassName }}
+    {{- end }}
+    {{- if .Values.imagePullSecrets }}
+      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
+    {{- end }}
+      containers:
+        - name: patch
+          {{- with .Values.controller.admissionWebhooks.patch.image }}
+          image: "{{- if .repository -}}{{ .repository }}{{ else }}{{ .registry }}/{{ .image }}{{- end -}}:{{ .tag }}{{- if (.digest) -}} @{{.digest}} {{- end -}}"
+          {{- end }}
+          imagePullPolicy: {{ .Values.controller.admissionWebhooks.patch.image.pullPolicy }}
+          args:
+            - patch
+            - --webhook-name={{ include "ingress-nginx.fullname" . }}-admission
+            - --namespace=$(POD_NAMESPACE)
+            - --patch-mutating=false
+            - --secret-name={{ include "ingress-nginx.fullname" . }}-admission
+            - --patch-failure-policy={{ .Values.controller.admissionWebhooks.failurePolicy }}
+          env:
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+          {{- if .Values.controller.admissionWebhooks.extraEnvs }}
+            {{- toYaml .Values.controller.admissionWebhooks.extraEnvs | nindent 12 }}
+          {{- end }}
+          securityContext:
+            allowPrivilegeEscalation: false
+          {{- if .Values.controller.admissionWebhooks.patchWebhookJob.resources }}
+          resources: {{ toYaml .Values.controller.admissionWebhooks.patchWebhookJob.resources | nindent 12 }}
+          {{- end }}
+      restartPolicy: OnFailure
+      serviceAccountName: {{ include "ingress-nginx.fullname" . }}-admission
+    {{- if .Values.controller.admissionWebhooks.patch.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.controller.admissionWebhooks.patch.nodeSelector | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.admissionWebhooks.patch.tolerations }}
+      tolerations: {{ toYaml .Values.controller.admissionWebhooks.patch.tolerations | nindent 8 }}
+    {{- end }}
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: {{ .Values.controller.admissionWebhooks.patch.runAsUser }}
+        fsGroup: {{ .Values.controller.admissionWebhooks.patch.fsGroup }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/psp.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/psp.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/psp.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/psp.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,39 @@
+{{- if and .Values.controller.admissionWebhooks.enabled .Values.controller.admissionWebhooks.patch.enabled .Values.podSecurityPolicy.enabled (empty .Values.controller.admissionWebhooks.existingPsp) -}}
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ include "ingress-nginx.fullname" . }}-admission
+  annotations:
+    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.patch.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+spec:
+  allowPrivilegeEscalation: false
+  fsGroup:
+    ranges:
+    - max: 65535
+      min: 1
+    rule: MustRunAs
+  requiredDropCapabilities:
+  - ALL
+  runAsUser:
+    rule: MustRunAsNonRoot
+  seLinux:
+    rule: RunAsAny
+  supplementalGroups:
+    ranges:
+    - max: 65535
+      min: 1
+    rule: MustRunAs
+  volumes:
+  - configMap
+  - emptyDir
+  - projected
+  - secret
+  - downwardAPI
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/role.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/role.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/role.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/role.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,24 @@
+{{- if and .Values.controller.admissionWebhooks.enabled .Values.controller.admissionWebhooks.patch.enabled -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  name:  {{ include "ingress-nginx.fullname" . }}-admission
+  namespace: {{ .Release.Namespace }}
+  annotations:
+    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.patch.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+rules:
+  - apiGroups:
+      - ""
+    resources:
+      - secrets
+    verbs:
+      - get
+      - create
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,24 @@
+{{- if and .Values.controller.admissionWebhooks.enabled .Values.controller.admissionWebhooks.patch.enabled -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  name: {{ include "ingress-nginx.fullname" . }}-admission
+  namespace: {{ .Release.Namespace }}
+  annotations:
+    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.patch.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: {{ include "ingress-nginx.fullname" . }}-admission
+subjects:
+  - kind: ServiceAccount
+    name: {{ include "ingress-nginx.fullname" . }}-admission
+    namespace: {{ .Release.Namespace | quote }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,16 @@
+{{- if and .Values.controller.admissionWebhooks.enabled .Values.controller.admissionWebhooks.patch.enabled -}}
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ include "ingress-nginx.fullname" . }}-admission
+  namespace: {{ .Release.Namespace }}
+  annotations:
+    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
+    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.patch.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/validating-webhook.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/validating-webhook.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/validating-webhook.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/admission-webhooks/validating-webhook.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,48 @@
+{{- if .Values.controller.admissionWebhooks.enabled -}}
+# before changing this value, check the required kubernetes version
+# https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisites
+apiVersion: admissionregistration.k8s.io/v1
+kind: ValidatingWebhookConfiguration
+metadata:
+  {{- if .Values.controller.admissionWebhooks.annotations }}
+  annotations: {{ toYaml .Values.controller.admissionWebhooks.annotations | nindent 4 }}
+  {{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: admission-webhook
+    {{- with .Values.controller.admissionWebhooks.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}-admission
+webhooks:
+  - name: validate.nginx.ingress.kubernetes.io
+    matchPolicy: Equivalent
+    rules:
+      - apiGroups:
+          - networking.k8s.io
+        apiVersions:
+          - v1
+        operations:
+          - CREATE
+          - UPDATE
+        resources:
+          - ingresses
+    failurePolicy: {{ .Values.controller.admissionWebhooks.failurePolicy | default "Fail" }}
+    sideEffects: None
+    admissionReviewVersions:
+      - v1
+    clientConfig:
+      service:
+        namespace: {{ .Release.Namespace | quote }}
+        name: {{ include "ingress-nginx.controller.fullname" . }}-admission
+        path: /networking/v1/ingresses
+    {{- if .Values.controller.admissionWebhooks.timeoutSeconds }}
+    timeoutSeconds: {{ .Values.controller.admissionWebhooks.timeoutSeconds }}
+    {{- end }}
+    {{- if .Values.controller.admissionWebhooks.namespaceSelector }}
+    namespaceSelector: {{ toYaml .Values.controller.admissionWebhooks.namespaceSelector | nindent 6 }}
+    {{- end }}
+    {{- if .Values.controller.admissionWebhooks.objectSelector }}
+    objectSelector: {{ toYaml .Values.controller.admissionWebhooks.objectSelector | nindent 6 }}
+    {{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/clusterrole.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/clusterrole.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/clusterrole.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/clusterrole.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,94 @@
+{{- if .Values.rbac.create }}
+
+{{- if and .Values.rbac.scope (not .Values.controller.scope.enabled) -}}
+  {{ required "Invalid configuration: 'rbac.scope' should be equal to 'controller.scope.enabled' (true/false)." (index (dict) ".") }}
+{{- end }}
+
+{{- if not .Values.rbac.scope -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}
+rules:
+  - apiGroups:
+      - ""
+    resources:
+      - configmaps
+      - endpoints
+      - nodes
+      - pods
+      - secrets
+{{- if not .Values.controller.scope.enabled }}
+      - namespaces
+{{- end}}
+    verbs:
+      - list
+      - watch
+  - apiGroups:
+      - coordination.k8s.io
+    resources:
+      - leases
+    verbs:
+      - list
+      - watch
+{{- if and .Values.controller.scope.enabled .Values.controller.scope.namespace }}
+  - apiGroups:
+      - ""
+    resources:
+      - namespaces
+    resourceNames:
+      - "{{ .Values.controller.scope.namespace }}"
+    verbs:
+      - get
+{{- end }}
+  - apiGroups:
+      - ""
+    resources:
+      - nodes
+    verbs:
+      - get
+  - apiGroups:
+      - ""
+    resources:
+      - services
+    verbs:
+      - get
+      - list
+      - watch
+  - apiGroups:
+      - networking.k8s.io
+    resources:
+      - ingresses
+    verbs:
+      - get
+      - list
+      - watch
+  - apiGroups:
+      - ""
+    resources:
+      - events
+    verbs:
+      - create
+      - patch
+  - apiGroups:
+      - networking.k8s.io
+    resources:
+      - ingresses/status
+    verbs:
+      - update
+  - apiGroups:
+      - networking.k8s.io
+    resources:
+      - ingressclasses
+    verbs:
+      - get
+      - list
+      - watch
+{{- end }}
+
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/clusterrolebinding.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/clusterrolebinding.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/clusterrolebinding.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/clusterrolebinding.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,19 @@
+{{- if and .Values.rbac.create (not .Values.rbac.scope) -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ include "ingress-nginx.fullname" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "ingress-nginx.serviceAccountName" . }}
+    namespace: {{ .Release.Namespace | quote }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-addheaders.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-addheaders.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-addheaders.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-addheaders.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,14 @@
+{{- if .Values.controller.addHeaders -}}
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}-custom-add-headers
+  namespace: {{ .Release.Namespace }}
+data: {{ toYaml .Values.controller.addHeaders | nindent 2 }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-proxyheaders.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-proxyheaders.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-proxyheaders.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-proxyheaders.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,19 @@
+{{- if or .Values.controller.proxySetHeaders .Values.controller.headers -}}
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}-custom-proxy-headers
+  namespace: {{ .Release.Namespace }}
+data:
+{{- if .Values.controller.proxySetHeaders }}
+{{ toYaml .Values.controller.proxySetHeaders | indent 2 }}
+{{ else if and .Values.controller.headers (not .Values.controller.proxySetHeaders) }}
+{{ toYaml .Values.controller.headers | indent 2 }}
+{{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-tcp.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-tcp.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-tcp.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-tcp.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,17 @@
+{{- if .Values.tcp -}}
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+{{- if .Values.controller.tcp.annotations }}
+  annotations: {{ toYaml .Values.controller.tcp.annotations | nindent 4 }}
+{{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}-tcp
+  namespace: {{ .Release.Namespace }}
+data: {{ tpl (toYaml .Values.tcp) . | nindent 2 }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-udp.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-udp.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-udp.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap-udp.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,17 @@
+{{- if .Values.udp -}}
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+{{- if .Values.controller.udp.annotations }}
+  annotations: {{ toYaml .Values.controller.udp.annotations | nindent 4 }}
+{{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}-udp
+  namespace: {{ .Release.Namespace }}
+data: {{ tpl (toYaml .Values.udp) . | nindent 2 }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-configmap.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,29 @@
+apiVersion: v1
+kind: ConfigMap
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+{{- if .Values.controller.configAnnotations }}
+  annotations: {{ toYaml .Values.controller.configAnnotations | nindent 4 }}
+{{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+data:
+  allow-snippet-annotations: "{{ .Values.controller.allowSnippetAnnotations }}"
+{{- if .Values.controller.addHeaders }}
+  add-headers: {{ .Release.Namespace }}/{{ include "ingress-nginx.fullname" . }}-custom-add-headers
+{{- end }}
+{{- if or .Values.controller.proxySetHeaders .Values.controller.headers }}
+  proxy-set-headers: {{ .Release.Namespace }}/{{ include "ingress-nginx.fullname" . }}-custom-proxy-headers
+{{- end }}
+{{- if .Values.dhParam }}
+  ssl-dh-param: {{ printf "%s/%s" .Release.Namespace (include "ingress-nginx.controller.fullname" .) }}
+{{- end }}
+{{- range $key, $value := .Values.controller.config }}
+    {{- $key | nindent 2 }}: {{ $value | quote }}
+{{- end }}
+
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-daemonset.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-daemonset.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-daemonset.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-daemonset.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,223 @@
+{{- if or (eq .Values.controller.kind "DaemonSet") (eq .Values.controller.kind "Both") -}}
+{{- include  "isControllerTagValid" . -}}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+  {{- if .Values.controller.annotations }}
+  annotations: {{ toYaml .Values.controller.annotations | nindent 4 }}
+  {{- end }}
+spec:
+  selector:
+    matchLabels:
+      {{- include "ingress-nginx.selectorLabels" . | nindent 6 }}
+      app.kubernetes.io/component: controller
+  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
+  {{- if .Values.controller.updateStrategy }}
+  updateStrategy: {{ toYaml .Values.controller.updateStrategy | nindent 4 }}
+  {{- end }}
+  minReadySeconds: {{ .Values.controller.minReadySeconds }}
+  template:
+    metadata:
+    {{- if .Values.controller.podAnnotations }}
+      annotations:
+      {{- range $key, $value := .Values.controller.podAnnotations }}
+        {{ $key }}: {{ $value | quote }}
+      {{- end }}
+    {{- end }}
+      labels:
+        {{- include "ingress-nginx.selectorLabels" . | nindent 8 }}
+        app.kubernetes.io/component: controller
+        {{- with .Values.controller.labels }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      {{- if .Values.controller.podLabels }}
+        {{- toYaml .Values.controller.podLabels | nindent 8 }}
+      {{- end }}
+    spec:
+    {{- if .Values.controller.dnsConfig }}
+      dnsConfig: {{ toYaml .Values.controller.dnsConfig | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.hostname }}
+      hostname: {{ toYaml .Values.controller.hostname | nindent 8 }}
+    {{- end }}
+      dnsPolicy: {{ .Values.controller.dnsPolicy }}
+    {{- if .Values.imagePullSecrets }}
+      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.priorityClassName }}
+      priorityClassName: {{ .Values.controller.priorityClassName }}
+    {{- end }}
+    {{- if or .Values.controller.podSecurityContext .Values.controller.sysctls }}
+      securityContext:
+    {{- end }}
+    {{- if .Values.controller.podSecurityContext  }}
+        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.sysctls }}
+        sysctls:
+    {{- range $sysctl, $value := .Values.controller.sysctls }}
+        - name: {{ $sysctl | quote }}
+          value: {{ $value | quote }}
+    {{- end }}
+    {{- end }}
+    {{- if .Values.controller.shareProcessNamespace }}
+      shareProcessNamespace: {{ .Values.controller.shareProcessNamespace }}
+    {{- end }}
+      containers:
+        - name: {{ .Values.controller.containerName }}
+          {{- with .Values.controller.image }}
+          image: "{{- if .repository -}}{{ .repository }}{{ else }}{{ .registry }}/{{ include "ingress-nginx.image" . }}{{- end -}}:{{ .tag }}{{ include "ingress-nginx.imageDigest" . }}"
+          {{- end }}
+          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
+        {{- if .Values.controller.lifecycle }}
+          lifecycle: {{ toYaml .Values.controller.lifecycle | nindent 12 }}
+        {{- end }}
+          args:
+            {{- include "ingress-nginx.params" . | nindent 12 }}
+          securityContext: {{ include "controller.containerSecurityContext" . | nindent 12 }}
+          env:
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+          {{- if .Values.controller.enableMimalloc }}
+            - name: LD_PRELOAD
+              value: /usr/local/lib/libmimalloc.so
+          {{- end }}
+          {{- if .Values.controller.extraEnvs }}
+            {{- toYaml .Values.controller.extraEnvs | nindent 12 }}
+          {{- end }}
+          {{- if .Values.controller.startupProbe }}
+          startupProbe: {{ toYaml .Values.controller.startupProbe | nindent 12 }}
+          {{- end }}
+          livenessProbe: {{ toYaml .Values.controller.livenessProbe | nindent 12 }}
+          readinessProbe: {{ toYaml .Values.controller.readinessProbe | nindent 12 }}
+          ports:
+          {{- range $key, $value := .Values.controller.containerPort }}
+            - name: {{ $key }}
+              containerPort: {{ $value }}
+              protocol: TCP
+              {{- if $.Values.controller.hostPort.enabled }}
+              hostPort: {{ index $.Values.controller.hostPort.ports $key | default $value }}
+              {{- end }}
+          {{- end }}
+          {{- if .Values.controller.metrics.enabled }}
+            - name: metrics
+              containerPort: {{ .Values.controller.metrics.port }}
+              protocol: TCP
+          {{- end }}
+          {{- if .Values.controller.admissionWebhooks.enabled }}
+            - name: webhook
+              containerPort: {{ .Values.controller.admissionWebhooks.port }}
+              protocol: TCP
+          {{- end }}
+          {{- range $key, $value := .Values.tcp }}
+            - name: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-tcp
+              containerPort: {{ $key }}
+              protocol: TCP
+              {{- if $.Values.controller.hostPort.enabled }}
+              hostPort: {{ $key }}
+              {{- end }}
+          {{- end }}
+          {{- range $key, $value := .Values.udp }}
+            - name: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-udp
+              containerPort: {{ $key }}
+              protocol: UDP
+              {{- if $.Values.controller.hostPort.enabled }}
+              hostPort: {{ $key }}
+              {{- end }}
+          {{- end }}
+        {{- if (or .Values.controller.customTemplate.configMapName .Values.controller.extraVolumeMounts .Values.controller.admissionWebhooks.enabled .Values.controller.extraModules) }}
+          volumeMounts:
+          {{- if .Values.controller.extraModules }}
+            - name: modules
+              mountPath: /modules_mount
+          {{- end }}
+          {{- if .Values.controller.customTemplate.configMapName }}
+            - mountPath: /etc/nginx/template
+              name: nginx-template-volume
+              readOnly: true
+          {{- end }}
+          {{- if .Values.controller.admissionWebhooks.enabled }}
+            - name: webhook-cert
+              mountPath: /usr/local/certificates/
+              readOnly: true
+          {{- end }}
+          {{- if .Values.controller.extraVolumeMounts }}
+            {{- toYaml .Values.controller.extraVolumeMounts | nindent 12 }}
+          {{- end }}
+        {{- end }}
+        {{- if .Values.controller.resources }}
+          resources: {{ toYaml .Values.controller.resources | nindent 12 }}
+        {{- end }}
+      {{- if .Values.controller.extraContainers }}
+        {{ toYaml .Values.controller.extraContainers | nindent 8 }}
+      {{- end }}
+
+
+    {{- if (or .Values.controller.extraInitContainers .Values.controller.extraModules) }}
+      initContainers:
+      {{- if .Values.controller.extraInitContainers }}
+        {{ toYaml .Values.controller.extraInitContainers | nindent 8 }}
+      {{- end }}
+      {{- if .Values.controller.extraModules }}
+        {{- range .Values.controller.extraModules }}
+          - name: {{ .Name }}
+            image: {{ .Image }}
+            command: ['sh', '-c', '/usr/local/bin/init_module.sh']
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- if .Values.controller.hostNetwork }}
+      hostNetwork: {{ .Values.controller.hostNetwork }}
+    {{- end }}
+    {{- if .Values.controller.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.controller.nodeSelector | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.tolerations }}
+      tolerations: {{ toYaml .Values.controller.tolerations | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.affinity }}
+      affinity: {{ toYaml .Values.controller.affinity | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.topologySpreadConstraints }}
+      topologySpreadConstraints: {{ toYaml .Values.controller.topologySpreadConstraints | nindent 8 }}
+    {{- end }}
+      serviceAccountName: {{ template "ingress-nginx.serviceAccountName" . }}
+      terminationGracePeriodSeconds: {{ .Values.controller.terminationGracePeriodSeconds }}
+    {{- if (or .Values.controller.customTemplate.configMapName .Values.controller.extraVolumeMounts .Values.controller.admissionWebhooks.enabled .Values.controller.extraVolumes .Values.controller.extraModules) }}
+      volumes:
+      {{- if .Values.controller.extraModules }}
+        - name: modules
+          emptyDir: {}
+      {{- end }}
+      {{- if .Values.controller.customTemplate.configMapName }}
+        - name: nginx-template-volume
+          configMap:
+            name: {{ .Values.controller.customTemplate.configMapName }}
+            items:
+            - key: {{ .Values.controller.customTemplate.configMapKey }}
+              path: nginx.tmpl
+      {{- end }}
+      {{- if .Values.controller.admissionWebhooks.enabled }}
+        - name: webhook-cert
+          secret:
+            secretName: {{ include "ingress-nginx.fullname" . }}-admission
+      {{- end }}
+      {{- if .Values.controller.extraVolumes }}
+        {{ toYaml .Values.controller.extraVolumes | nindent 8 }}
+      {{- end }}
+    {{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-deployment.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-deployment.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-deployment.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-deployment.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,228 @@
+{{- if or (eq .Values.controller.kind "Deployment") (eq .Values.controller.kind "Both") -}}
+{{- include  "isControllerTagValid" . -}}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+  {{- if .Values.controller.annotations }}
+  annotations: {{ toYaml .Values.controller.annotations | nindent 4 }}
+  {{- end }}
+spec:
+  selector:
+    matchLabels:
+      {{- include "ingress-nginx.selectorLabels" . | nindent 6 }}
+      app.kubernetes.io/component: controller
+  {{- if not .Values.controller.autoscaling.enabled }}
+  replicas: {{ .Values.controller.replicaCount }}
+  {{- end }}
+  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
+  {{- if .Values.controller.updateStrategy }}
+  strategy:
+    {{ toYaml .Values.controller.updateStrategy | nindent 4 }}
+  {{- end }}
+  minReadySeconds: {{ .Values.controller.minReadySeconds }}
+  template:
+    metadata:
+    {{- if .Values.controller.podAnnotations }}
+      annotations:
+      {{- range $key, $value := .Values.controller.podAnnotations }}
+        {{ $key }}: {{ $value | quote }}
+      {{- end }}
+    {{- end }}
+      labels:
+        {{- include "ingress-nginx.selectorLabels" . | nindent 8 }}
+        app.kubernetes.io/component: controller
+        {{- with .Values.controller.labels }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      {{- if .Values.controller.podLabels }}
+        {{- toYaml .Values.controller.podLabels | nindent 8 }}
+      {{- end }}
+    spec:
+    {{- if .Values.controller.dnsConfig }}
+      dnsConfig: {{ toYaml .Values.controller.dnsConfig | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.hostname }}
+      hostname: {{ toYaml .Values.controller.hostname | nindent 8 }}
+    {{- end }}
+      dnsPolicy: {{ .Values.controller.dnsPolicy }}
+    {{- if .Values.imagePullSecrets }}
+      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.priorityClassName }}
+      priorityClassName: {{ .Values.controller.priorityClassName | quote }}
+    {{- end }}
+    {{- if or .Values.controller.podSecurityContext .Values.controller.sysctls }}
+      securityContext:
+    {{- end }}
+    {{- if .Values.controller.podSecurityContext }}
+        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.sysctls }}
+        sysctls:
+    {{- range $sysctl, $value := .Values.controller.sysctls }}
+        - name: {{ $sysctl | quote }}
+          value: {{ $value | quote }}
+    {{- end }}
+    {{- end }}
+    {{- if .Values.controller.shareProcessNamespace }}
+      shareProcessNamespace: {{ .Values.controller.shareProcessNamespace }}
+    {{- end }}
+      containers:
+        - name: {{ .Values.controller.containerName }}
+          {{- with .Values.controller.image }}
+          image: "{{- if .repository -}}{{ .repository }}{{ else }}{{ .registry }}/{{ include "ingress-nginx.image" . }}{{- end -}}:{{ .tag }}{{ include "ingress-nginx.imageDigest" . }}"
+          {{- end }}
+          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
+        {{- if .Values.controller.lifecycle }}
+          lifecycle: {{ toYaml .Values.controller.lifecycle | nindent 12 }}
+        {{- end }}
+          args:
+            {{- include "ingress-nginx.params" . | nindent 12 }}
+          securityContext: {{ include "controller.containerSecurityContext" . | nindent 12 }}
+          env:
+            - name: POD_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.name
+            - name: POD_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+          {{- if .Values.controller.enableMimalloc }}
+            - name: LD_PRELOAD
+              value: /usr/local/lib/libmimalloc.so
+          {{- end }}
+          {{- if .Values.controller.extraEnvs }}
+            {{- toYaml .Values.controller.extraEnvs | nindent 12 }}
+          {{- end }}
+          {{- if .Values.controller.startupProbe }}
+          startupProbe: {{ toYaml .Values.controller.startupProbe | nindent 12 }}
+          {{- end }}
+          livenessProbe: {{ toYaml .Values.controller.livenessProbe | nindent 12 }}
+          readinessProbe: {{ toYaml .Values.controller.readinessProbe | nindent 12 }}
+          ports:
+          {{- range $key, $value := .Values.controller.containerPort }}
+            - name: {{ $key }}
+              containerPort: {{ $value }}
+              protocol: TCP
+              {{- if $.Values.controller.hostPort.enabled }}
+              hostPort: {{ index $.Values.controller.hostPort.ports $key | default $value }}
+              {{- end }}
+          {{- end }}
+          {{- if .Values.controller.metrics.enabled }}
+            - name: metrics
+              containerPort: {{ .Values.controller.metrics.port }}
+              protocol: TCP
+          {{- end }}
+          {{- if .Values.controller.admissionWebhooks.enabled }}
+            - name: webhook
+              containerPort: {{ .Values.controller.admissionWebhooks.port }}
+              protocol: TCP
+          {{- end }}
+          {{- range $key, $value := .Values.tcp }}
+            - name: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-tcp
+              containerPort: {{ $key }}
+              protocol: TCP
+              {{- if $.Values.controller.hostPort.enabled }}
+              hostPort: {{ $key }}
+              {{- end }}
+          {{- end }}
+          {{- range $key, $value := .Values.udp }}
+            - name: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-udp
+              containerPort: {{ $key }}
+              protocol: UDP
+              {{- if $.Values.controller.hostPort.enabled }}
+              hostPort: {{ $key }}
+              {{- end }}
+          {{- end }}
+        {{- if (or .Values.controller.customTemplate.configMapName .Values.controller.extraVolumeMounts .Values.controller.admissionWebhooks.enabled .Values.controller.extraModules) }}
+          volumeMounts:
+          {{- if .Values.controller.extraModules }}
+            - name: modules
+              mountPath: /modules_mount
+          {{- end }}
+          {{- if .Values.controller.customTemplate.configMapName }}
+            - mountPath: /etc/nginx/template
+              name: nginx-template-volume
+              readOnly: true
+          {{- end }}
+          {{- if .Values.controller.admissionWebhooks.enabled }}
+            - name: webhook-cert
+              mountPath: /usr/local/certificates/
+              readOnly: true
+          {{- end }}
+          {{- if .Values.controller.extraVolumeMounts }}
+            {{- toYaml .Values.controller.extraVolumeMounts | nindent 12 }}
+          {{- end }}
+        {{- end }}
+        {{- if .Values.controller.resources }}
+          resources: {{ toYaml .Values.controller.resources | nindent 12 }}
+        {{- end }}
+      {{- if .Values.controller.extraContainers }}
+        {{ toYaml .Values.controller.extraContainers | nindent 8 }}
+      {{- end }}
+    {{- if (or .Values.controller.extraInitContainers .Values.controller.extraModules) }}
+      initContainers:
+      {{- if .Values.controller.extraInitContainers }}
+        {{ toYaml .Values.controller.extraInitContainers | nindent 8 }}
+      {{- end }}
+      {{- if .Values.controller.extraModules }}
+        {{- range .Values.controller.extraModules }}
+          - name: {{ .name }}
+            image: {{ .image }}
+            command: ['sh', '-c', '/usr/local/bin/init_module.sh']
+            volumeMounts:
+              - name: modules
+                mountPath: /modules_mount
+        {{- end }}
+      {{- end }}
+    {{- end }}
+    {{- if .Values.controller.hostNetwork }}
+      hostNetwork: {{ .Values.controller.hostNetwork }}
+    {{- end }}
+    {{- if .Values.controller.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.controller.nodeSelector | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.tolerations }}
+      tolerations: {{ toYaml .Values.controller.tolerations | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.affinity }}
+      affinity: {{ toYaml .Values.controller.affinity | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.topologySpreadConstraints }}
+      topologySpreadConstraints: {{ toYaml .Values.controller.topologySpreadConstraints | nindent 8 }}
+    {{- end }}
+      serviceAccountName: {{ template "ingress-nginx.serviceAccountName" . }}
+      terminationGracePeriodSeconds: {{ .Values.controller.terminationGracePeriodSeconds }}
+    {{- if (or .Values.controller.customTemplate.configMapName .Values.controller.extraVolumeMounts .Values.controller.admissionWebhooks.enabled .Values.controller.extraVolumes .Values.controller.extraModules) }}
+      volumes:
+      {{- if .Values.controller.extraModules }}
+        - name: modules
+          emptyDir: {}
+      {{- end }}
+      {{- if .Values.controller.customTemplate.configMapName }}
+        - name: nginx-template-volume
+          configMap:
+            name: {{ .Values.controller.customTemplate.configMapName }}
+            items:
+            - key: {{ .Values.controller.customTemplate.configMapKey }}
+              path: nginx.tmpl
+      {{- end }}
+      {{- if .Values.controller.admissionWebhooks.enabled }}
+        - name: webhook-cert
+          secret:
+            secretName: {{ include "ingress-nginx.fullname" . }}-admission
+      {{- end }}
+      {{- if .Values.controller.extraVolumes }}
+        {{ toYaml .Values.controller.extraVolumes | nindent 8 }}
+      {{- end }}
+    {{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-hpa.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-hpa.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-hpa.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-hpa.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,52 @@
+{{- if and .Values.controller.autoscaling.enabled (or (eq .Values.controller.kind "Deployment") (eq .Values.controller.kind "Both")) -}}
+{{- if not .Values.controller.keda.enabled }}
+
+apiVersion: autoscaling/v2beta2
+kind: HorizontalPodAutoscaler
+metadata:
+  annotations:
+  {{- with .Values.controller.autoscaling.annotations }}
+  {{- toYaml . | trimSuffix "\n" | nindent 4 }}
+  {{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+spec:
+  scaleTargetRef:
+    apiVersion: apps/v1
+    kind: Deployment
+    name: {{ include "ingress-nginx.controller.fullname" . }}
+  minReplicas: {{ .Values.controller.autoscaling.minReplicas }}
+  maxReplicas: {{ .Values.controller.autoscaling.maxReplicas }}
+  metrics:
+  {{- with .Values.controller.autoscaling.targetMemoryUtilizationPercentage }}
+  - type: Resource
+    resource:
+      name: memory
+      target:
+        type: Utilization
+        averageUtilization: {{ . }}
+  {{- end }}
+  {{- with .Values.controller.autoscaling.targetCPUUtilizationPercentage }}
+  - type: Resource
+    resource:
+      name: cpu
+      target:
+        type: Utilization
+        averageUtilization: {{ . }}
+  {{- end }}
+  {{- with .Values.controller.autoscalingTemplate }}
+  {{- toYaml . | nindent 2 }}
+  {{- end }}
+  {{- with .Values.controller.autoscaling.behavior }}
+  behavior:
+    {{- toYaml . | nindent 4 }}
+  {{- end }}
+{{- end }}
+{{- end }}
+
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-ingressclass.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-ingressclass.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-ingressclass.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-ingressclass.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,21 @@
+{{- if .Values.controller.ingressClassResource.enabled -}}
+# We don't support namespaced ingressClass yet
+# So a ClusterRole and a ClusterRoleBinding is required
+apiVersion: networking.k8s.io/v1
+kind: IngressClass
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ .Values.controller.ingressClassResource.name }}
+{{- if .Values.controller.ingressClassResource.default }}
+  annotations:
+    ingressclass.kubernetes.io/is-default-class: "true"
+{{- end }}
+spec:
+  controller: {{ .Values.controller.ingressClassResource.controllerValue }}
+  {{ template "ingressClass.parameters" . }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-keda.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-keda.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-keda.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-keda.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,42 @@
+{{- if and .Values.controller.keda.enabled (or (eq .Values.controller.kind "Deployment") (eq .Values.controller.kind "Both")) -}}
+# https://keda.sh/docs/
+
+apiVersion: {{ .Values.controller.keda.apiVersion }}
+kind: ScaledObject
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+  {{- if .Values.controller.keda.scaledObject.annotations }}
+  annotations: {{ toYaml .Values.controller.keda.scaledObject.annotations | nindent 4 }}
+  {{- end }}
+spec:
+  scaleTargetRef:
+{{- if eq .Values.controller.keda.apiVersion "keda.k8s.io/v1alpha1" }}
+    deploymentName: {{ include "ingress-nginx.controller.fullname" . }}
+{{- else if eq .Values.controller.keda.apiVersion "keda.sh/v1alpha1" }}
+    name: {{ include "ingress-nginx.controller.fullname" . }}
+{{- end }}
+  pollingInterval: {{ .Values.controller.keda.pollingInterval }}
+  cooldownPeriod: {{ .Values.controller.keda.cooldownPeriod }}
+  minReplicaCount: {{ .Values.controller.keda.minReplicas }}
+  maxReplicaCount: {{ .Values.controller.keda.maxReplicas }}
+  triggers:
+{{- with .Values.controller.keda.triggers }}
+{{ toYaml . | indent 2 }}
+{{ end }}
+  advanced:
+    restoreToOriginalReplicaCount: {{ .Values.controller.keda.restoreToOriginalReplicaCount }}
+{{- if .Values.controller.keda.behavior }}
+    horizontalPodAutoscalerConfig:
+      behavior:
+{{ with .Values.controller.keda.behavior -}}
+{{ toYaml . | indent 8 }}
+{{ end }}
+
+{{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-poddisruptionbudget.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-poddisruptionbudget.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-poddisruptionbudget.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-poddisruptionbudget.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,19 @@
+{{- if or (and .Values.controller.autoscaling.enabled (gt (.Values.controller.autoscaling.minReplicas | int) 1)) (and (not .Values.controller.autoscaling.enabled) (gt (.Values.controller.replicaCount | int) 1)) }}
+apiVersion: {{ ternary "policy/v1" "policy/v1beta1" (semverCompare ">=1.21.0-0" .Capabilities.KubeVersion.Version) }}
+kind: PodDisruptionBudget
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+spec:
+  selector:
+    matchLabels:
+      {{- include "ingress-nginx.selectorLabels" . | nindent 6 }}
+      app.kubernetes.io/component: controller
+  minAvailable: {{ .Values.controller.minAvailable }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-prometheusrules.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-prometheusrules.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-prometheusrules.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-prometheusrules.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,21 @@
+{{- if and ( .Values.controller.metrics.enabled ) ( .Values.controller.metrics.prometheusRule.enabled ) ( .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" ) -}}
+apiVersion: monitoring.coreos.com/v1
+kind: PrometheusRule
+metadata:
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+{{- if .Values.controller.metrics.prometheusRule.namespace }}
+  namespace: {{ .Values.controller.metrics.prometheusRule.namespace | quote }}
+{{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+  {{- if .Values.controller.metrics.prometheusRule.additionalLabels }}
+    {{- toYaml .Values.controller.metrics.prometheusRule.additionalLabels | nindent 4 }}
+  {{- end }}
+spec:
+{{- if .Values.controller.metrics.prometheusRule.rules }}
+  groups:
+  - name: {{ template "ingress-nginx.name" . }}
+    rules: {{- toYaml .Values.controller.metrics.prometheusRule.rules | nindent 4 }}
+{{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-psp.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-psp.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-psp.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-psp.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,92 @@
+{{- if and .Values.podSecurityPolicy.enabled (empty .Values.controller.existingPsp) -}}
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ include "ingress-nginx.fullname" . }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+spec:
+  allowedCapabilities:
+    - NET_BIND_SERVICE
+  {{- if .Values.controller.image.chroot }}
+    - SYS_CHROOT
+  {{- end }}
+{{- if .Values.controller.sysctls }}
+  allowedUnsafeSysctls:
+  {{- range $sysctl, $value := .Values.controller.sysctls }}
+  - {{ $sysctl }}
+  {{- end }}
+{{- end }}
+  privileged: false
+  allowPrivilegeEscalation: true
+  # Allow core volume types.
+  volumes:
+    - 'configMap'
+    - 'emptyDir'
+    #- 'projected'
+    - 'secret'
+    #- 'downwardAPI'
+{{- if .Values.controller.hostNetwork }}
+  hostNetwork: {{ .Values.controller.hostNetwork }}
+{{- end }}
+{{- if or .Values.controller.hostNetwork .Values.controller.hostPort.enabled }}
+  hostPorts:
+{{- if .Values.controller.hostNetwork }}
+{{- range $key, $value := .Values.controller.containerPort }}
+  # {{ $key }}
+  - min: {{ $value }}
+    max: {{ $value }}
+{{- end }}
+{{- else if .Values.controller.hostPort.enabled }}
+{{- range $key, $value := .Values.controller.hostPort.ports }}
+  # {{ $key }}
+  - min: {{ $value }}
+    max: {{ $value }}
+{{- end }}
+{{- end }}
+{{- if .Values.controller.metrics.enabled }}
+  # metrics
+  - min: {{ .Values.controller.metrics.port }}
+    max: {{ .Values.controller.metrics.port }}
+{{- end }}
+{{- if .Values.controller.admissionWebhooks.enabled }}
+  # admission webhooks
+  - min: {{ .Values.controller.admissionWebhooks.port }}
+    max: {{ .Values.controller.admissionWebhooks.port }}
+{{- end }}
+{{- range $key, $value := .Values.tcp }}
+  # {{ $key }}-tcp
+  - min: {{ $key }}
+    max: {{ $key }}
+{{- end }}
+{{- range $key, $value := .Values.udp }}
+  # {{ $key }}-udp
+  - min: {{ $key }}
+    max: {{ $key }}
+{{- end }}
+{{- end }}
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    # Require the container to run without root privileges.
+    rule: 'MustRunAsNonRoot'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      # Forbid adding the root group.
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      # Forbid adding the root group.
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  seLinux:
+    rule: 'RunAsAny'
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-role.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-role.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-role.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-role.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,108 @@
+{{- if .Values.rbac.create -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+rules:
+  - apiGroups:
+      - ""
+    resources:
+      - namespaces
+    verbs:
+      - get
+  - apiGroups:
+      - ""
+    resources:
+      - configmaps
+      - pods
+      - secrets
+      - endpoints
+    verbs:
+      - get
+      - list
+      - watch
+  - apiGroups:
+      - ""
+    resources:
+      - services
+    verbs:
+      - get
+      - list
+      - watch
+  - apiGroups:
+      - networking.k8s.io
+    resources:
+      - ingresses
+    verbs:
+      - get
+      - list
+      - watch
+  - apiGroups:
+      - networking.k8s.io
+    resources:
+      - ingresses/status
+    verbs:
+      - update
+  - apiGroups:
+      - networking.k8s.io
+    resources:
+      - ingressclasses
+    verbs:
+      - get
+      - list
+      - watch
+  - apiGroups:
+      - ""
+    resources:
+      - configmaps
+    resourceNames:
+      - {{ .Values.controller.electionID }}
+    verbs:
+      - get
+      - update
+  - apiGroups:
+      - ""
+    resources:
+      - configmaps
+    verbs:
+      - create
+  - apiGroups:
+      - coordination.k8s.io
+    resources:
+      - leases
+    resourceNames:
+      - {{ .Values.controller.electionID }}
+    verbs:
+      - get
+      - update
+  - apiGroups:
+      - coordination.k8s.io
+    resources:
+      - leases
+    verbs:
+      - create
+  - apiGroups:
+      - ""
+    resources:
+      - events
+    verbs:
+      - create
+      - patch
+{{- if .Values.podSecurityPolicy.enabled }}
+  - apiGroups:      [{{ template "podSecurityPolicy.apiGroup" . }}]
+    resources:      ['podsecuritypolicies']
+    verbs:          ['use']
+    {{- with .Values.controller.existingPsp }}
+    resourceNames:  [{{ . }}]
+    {{- else }}
+    resourceNames:  [{{ include "ingress-nginx.fullname" . }}]
+    {{- end }}
+{{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-rolebinding.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-rolebinding.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-rolebinding.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-rolebinding.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,21 @@
+{{- if .Values.rbac.create -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: {{ include "ingress-nginx.fullname" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "ingress-nginx.serviceAccountName" . }}
+    namespace: {{ .Release.Namespace | quote }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-internal.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-internal.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-internal.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-internal.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,79 @@
+{{- if and .Values.controller.service.enabled .Values.controller.service.internal.enabled .Values.controller.service.internal.annotations}}
+apiVersion: v1
+kind: Service
+metadata:
+  annotations:
+  {{- range $key, $value := .Values.controller.service.internal.annotations }}
+    {{ $key }}: {{ $value | quote }}
+  {{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+  {{- if .Values.controller.service.labels }}
+    {{- toYaml .Values.controller.service.labels | nindent 4 }}
+  {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}-internal
+  namespace: {{ .Release.Namespace }}
+spec:
+  type: "{{ .Values.controller.service.type }}"
+{{- if .Values.controller.service.internal.loadBalancerIP }}
+  loadBalancerIP: {{ .Values.controller.service.internal.loadBalancerIP }}
+{{- end }}
+{{- if .Values.controller.service.internal.loadBalancerSourceRanges }}
+  loadBalancerSourceRanges: {{ toYaml .Values.controller.service.internal.loadBalancerSourceRanges | nindent 4 }}
+{{- end }}
+{{- if .Values.controller.service.internal.externalTrafficPolicy }}
+  externalTrafficPolicy: {{ .Values.controller.service.internal.externalTrafficPolicy }}
+{{- end }}
+  ports:
+  {{- $setNodePorts := (or (eq .Values.controller.service.type "NodePort") (eq .Values.controller.service.type "LoadBalancer")) }}
+  {{- if .Values.controller.service.enableHttp }}
+    - name: http
+      port: {{ .Values.controller.service.ports.http }}
+      protocol: TCP
+      targetPort: {{ .Values.controller.service.targetPorts.http }}
+    {{- if semverCompare ">=1.20" .Capabilities.KubeVersion.Version }}
+      appProtocol: http
+    {{- end }}
+    {{- if (and $setNodePorts (not (empty .Values.controller.service.nodePorts.http))) }}
+      nodePort: {{ .Values.controller.service.nodePorts.http }}
+    {{- end }}
+  {{- end }}
+  {{- if .Values.controller.service.enableHttps }}
+    - name: https
+      port: {{ .Values.controller.service.ports.https }}
+      protocol: TCP
+      targetPort: {{ .Values.controller.service.targetPorts.https }}
+    {{- if semverCompare ">=1.20" .Capabilities.KubeVersion.Version }}
+      appProtocol: https
+    {{- end }}
+    {{- if (and $setNodePorts (not (empty .Values.controller.service.nodePorts.https))) }}
+      nodePort: {{ .Values.controller.service.nodePorts.https }}
+    {{- end }}
+  {{- end }}
+  {{- range $key, $value := .Values.tcp }}
+    - name: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-tcp
+      port: {{ $key }}
+      protocol: TCP
+      targetPort: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-tcp
+    {{- if $.Values.controller.service.nodePorts.tcp }}
+    {{- if index $.Values.controller.service.nodePorts.tcp $key }}
+      nodePort: {{ index $.Values.controller.service.nodePorts.tcp $key }}
+    {{- end }}
+    {{- end }}
+  {{- end }}
+  {{- range $key, $value := .Values.udp }}
+    - name: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-udp
+      port: {{ $key }}
+      protocol: UDP
+      targetPort: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-udp
+    {{- if $.Values.controller.service.nodePorts.udp }}
+    {{- if index $.Values.controller.service.nodePorts.udp $key }}
+      nodePort: {{ index $.Values.controller.service.nodePorts.udp $key }}
+    {{- end }}
+    {{- end }}
+  {{- end }}
+  selector:
+    {{- include "ingress-nginx.selectorLabels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-metrics.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-metrics.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-metrics.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-metrics.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,45 @@
+{{- if .Values.controller.metrics.enabled -}}
+apiVersion: v1
+kind: Service
+metadata:
+{{- if .Values.controller.metrics.service.annotations }}
+  annotations: {{ toYaml .Values.controller.metrics.service.annotations | nindent 4 }}
+{{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+  {{- if .Values.controller.metrics.service.labels }}
+    {{- toYaml .Values.controller.metrics.service.labels | nindent 4 }}
+  {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}-metrics
+  namespace: {{ .Release.Namespace }}
+spec:
+  type: {{ .Values.controller.metrics.service.type }}
+{{- if .Values.controller.metrics.service.clusterIP }}
+  clusterIP: {{ .Values.controller.metrics.service.clusterIP }}
+{{- end }}
+{{- if .Values.controller.metrics.service.externalIPs }}
+  externalIPs: {{ toYaml .Values.controller.metrics.service.externalIPs | nindent 4 }}
+{{- end }}
+{{- if .Values.controller.metrics.service.loadBalancerIP }}
+  loadBalancerIP: {{ .Values.controller.metrics.service.loadBalancerIP }}
+{{- end }}
+{{- if .Values.controller.metrics.service.loadBalancerSourceRanges }}
+  loadBalancerSourceRanges: {{ toYaml .Values.controller.metrics.service.loadBalancerSourceRanges | nindent 4 }}
+{{- end }}
+{{- if .Values.controller.metrics.service.externalTrafficPolicy }}
+  externalTrafficPolicy: {{ .Values.controller.metrics.service.externalTrafficPolicy }}
+{{- end }}
+  ports:
+    - name: metrics
+      port: {{ .Values.controller.metrics.service.servicePort }}
+      protocol: TCP
+      targetPort: metrics
+    {{- $setNodePorts := (or (eq .Values.controller.metrics.service.type "NodePort") (eq .Values.controller.metrics.service.type "LoadBalancer")) }}
+    {{- if (and $setNodePorts (not (empty .Values.controller.metrics.service.nodePort))) }}
+      nodePort: {{ .Values.controller.metrics.service.nodePort }}
+    {{- end }}
+  selector:
+    {{- include "ingress-nginx.selectorLabels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-webhook.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-webhook.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-webhook.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service-webhook.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,40 @@
+{{- if .Values.controller.admissionWebhooks.enabled -}}
+apiVersion: v1
+kind: Service
+metadata:
+{{- if .Values.controller.admissionWebhooks.service.annotations }}
+  annotations: {{ toYaml .Values.controller.admissionWebhooks.service.annotations | nindent 4 }}
+{{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}-admission
+  namespace: {{ .Release.Namespace }}
+spec:
+  type: {{ .Values.controller.admissionWebhooks.service.type }}
+{{- if .Values.controller.admissionWebhooks.service.clusterIP }}
+  clusterIP: {{ .Values.controller.admissionWebhooks.service.clusterIP }}
+{{- end }}
+{{- if .Values.controller.admissionWebhooks.service.externalIPs }}
+  externalIPs: {{ toYaml .Values.controller.admissionWebhooks.service.externalIPs | nindent 4 }}
+{{- end }}
+{{- if .Values.controller.admissionWebhooks.service.loadBalancerIP }}
+  loadBalancerIP: {{ .Values.controller.admissionWebhooks.service.loadBalancerIP }}
+{{- end }}
+{{- if .Values.controller.admissionWebhooks.service.loadBalancerSourceRanges }}
+  loadBalancerSourceRanges: {{ toYaml .Values.controller.admissionWebhooks.service.loadBalancerSourceRanges | nindent 4 }}
+{{- end }}
+  ports:
+    - name: https-webhook
+      port: 443
+      targetPort: webhook
+    {{- if semverCompare ">=1.20" .Capabilities.KubeVersion.Version }}
+      appProtocol: https
+    {{- end }}
+  selector:
+    {{- include "ingress-nginx.selectorLabels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-service.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-service.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,101 @@
+{{- if and .Values.controller.service.enabled .Values.controller.service.external.enabled -}}
+apiVersion: v1
+kind: Service
+metadata:
+  annotations:
+  {{- range $key, $value := .Values.controller.service.annotations }}
+    {{ $key }}: {{ $value | quote }}
+  {{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+  {{- if .Values.controller.service.labels }}
+    {{- toYaml .Values.controller.service.labels | nindent 4 }}
+  {{- end }}
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+spec:
+  type: {{ .Values.controller.service.type }}
+{{- if .Values.controller.service.clusterIP }}
+  clusterIP: {{ .Values.controller.service.clusterIP }}
+{{- end }}
+{{- if .Values.controller.service.externalIPs }}
+  externalIPs: {{ toYaml .Values.controller.service.externalIPs | nindent 4 }}
+{{- end }}
+{{- if .Values.controller.service.loadBalancerIP }}
+  loadBalancerIP: {{ .Values.controller.service.loadBalancerIP }}
+{{- end }}
+{{- if .Values.controller.service.loadBalancerSourceRanges }}
+  loadBalancerSourceRanges: {{ toYaml .Values.controller.service.loadBalancerSourceRanges | nindent 4 }}
+{{- end }}
+{{- if .Values.controller.service.externalTrafficPolicy }}
+  externalTrafficPolicy: {{ .Values.controller.service.externalTrafficPolicy }}
+{{- end }}
+{{- if .Values.controller.service.sessionAffinity }}
+  sessionAffinity: {{ .Values.controller.service.sessionAffinity }}
+{{- end }}
+{{- if .Values.controller.service.healthCheckNodePort }}
+  healthCheckNodePort: {{ .Values.controller.service.healthCheckNodePort }}
+{{- end }}
+{{- if semverCompare ">=1.21.0-0" .Capabilities.KubeVersion.Version -}}
+{{- if .Values.controller.service.ipFamilyPolicy }}
+  ipFamilyPolicy: {{ .Values.controller.service.ipFamilyPolicy }}
+{{- end }}
+{{- end }}
+{{- if semverCompare ">=1.21.0-0" .Capabilities.KubeVersion.Version -}}
+{{- if .Values.controller.service.ipFamilies }}
+  ipFamilies: {{ toYaml .Values.controller.service.ipFamilies | nindent 4 }}
+{{- end }}
+{{- end }}
+  ports:
+  {{- $setNodePorts := (or (eq .Values.controller.service.type "NodePort") (eq .Values.controller.service.type "LoadBalancer")) }}
+  {{- if .Values.controller.service.enableHttp }}
+    - name: http
+      port: {{ .Values.controller.service.ports.http }}
+      protocol: TCP
+      targetPort: {{ .Values.controller.service.targetPorts.http }}
+    {{- if and (semverCompare ">=1.20" .Capabilities.KubeVersion.Version) (.Values.controller.service.appProtocol) }}
+      appProtocol: http
+    {{- end }}
+    {{- if (and $setNodePorts (not (empty .Values.controller.service.nodePorts.http))) }}
+      nodePort: {{ .Values.controller.service.nodePorts.http }}
+    {{- end }}
+  {{- end }}
+  {{- if .Values.controller.service.enableHttps }}
+    - name: https
+      port: {{ .Values.controller.service.ports.https }}
+      protocol: TCP
+      targetPort: {{ .Values.controller.service.targetPorts.https }}
+    {{- if and (semverCompare ">=1.20" .Capabilities.KubeVersion.Version) (.Values.controller.service.appProtocol) }}
+      appProtocol: https
+    {{- end }}
+    {{- if (and $setNodePorts (not (empty .Values.controller.service.nodePorts.https))) }}
+      nodePort: {{ .Values.controller.service.nodePorts.https }}
+    {{- end }}
+  {{- end }}
+  {{- range $key, $value := .Values.tcp }}
+    - name: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-tcp
+      port: {{ $key }}
+      protocol: TCP
+      targetPort: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-tcp
+    {{- if $.Values.controller.service.nodePorts.tcp }}
+    {{- if index $.Values.controller.service.nodePorts.tcp $key }}
+      nodePort: {{ index $.Values.controller.service.nodePorts.tcp $key }}
+    {{- end }}
+    {{- end }}
+  {{- end }}
+  {{- range $key, $value := .Values.udp }}
+    - name: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-udp
+      port: {{ $key }}
+      protocol: UDP
+      targetPort: {{ if $.Values.portNamePrefix }}{{ $.Values.portNamePrefix }}-{{ end }}{{ $key }}-udp
+    {{- if $.Values.controller.service.nodePorts.udp }}
+    {{- if index $.Values.controller.service.nodePorts.udp $key }}
+      nodePort: {{ index $.Values.controller.service.nodePorts.udp $key }}
+    {{- end }}
+    {{- end }}
+  {{- end }}
+  selector:
+    {{- include "ingress-nginx.selectorLabels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-serviceaccount.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-serviceaccount.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-serviceaccount.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-serviceaccount.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,18 @@
+{{- if or .Values.serviceAccount.create -}}
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+    {{- with .Values.controller.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ template "ingress-nginx.serviceAccountName" . }}
+  namespace: {{ .Release.Namespace }}
+  {{- if .Values.serviceAccount.annotations }}
+  annotations:
+  {{ toYaml .Values.serviceAccount.annotations | indent 4 }}
+  {{- end }}
+automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/controller-servicemonitor.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/controller-servicemonitor.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-servicemonitor.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/controller-servicemonitor.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,48 @@
+{{- if and .Values.controller.metrics.enabled .Values.controller.metrics.serviceMonitor.enabled -}}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ include "ingress-nginx.controller.fullname" . }}
+{{- if .Values.controller.metrics.serviceMonitor.namespace }}
+  namespace: {{ .Values.controller.metrics.serviceMonitor.namespace | quote }}
+{{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: controller
+  {{- if .Values.controller.metrics.serviceMonitor.additionalLabels }}
+    {{- toYaml .Values.controller.metrics.serviceMonitor.additionalLabels | nindent 4 }}
+  {{- end }}
+spec:
+  endpoints:
+    - port: metrics
+      interval: {{ .Values.controller.metrics.serviceMonitor.scrapeInterval }}
+    {{- if .Values.controller.metrics.serviceMonitor.honorLabels }}
+      honorLabels: true
+    {{- end }}
+    {{- if .Values.controller.metrics.serviceMonitor.relabelings }}
+      relabelings: {{ toYaml .Values.controller.metrics.serviceMonitor.relabelings | nindent 8 }}
+    {{- end }}
+    {{- if .Values.controller.metrics.serviceMonitor.metricRelabelings }}
+      metricRelabelings: {{ toYaml .Values.controller.metrics.serviceMonitor.metricRelabelings | nindent 8 }}
+    {{- end }}
+{{- if .Values.controller.metrics.serviceMonitor.jobLabel }}
+  jobLabel: {{ .Values.controller.metrics.serviceMonitor.jobLabel | quote }}
+{{- end }}
+{{- if .Values.controller.metrics.serviceMonitor.namespaceSelector }}
+  namespaceSelector: {{ toYaml .Values.controller.metrics.serviceMonitor.namespaceSelector | nindent 4 }}
+{{- else }}
+  namespaceSelector:
+    matchNames:
+      - {{ .Release.Namespace }}
+{{- end }}
+{{- if .Values.controller.metrics.serviceMonitor.targetLabels }}
+  targetLabels:
+  {{- range .Values.controller.metrics.serviceMonitor.targetLabels }}
+    - {{ . }}
+  {{- end }}
+{{- end }}
+  selector:
+    matchLabels:
+      {{- include "ingress-nginx.selectorLabels" . | nindent 6 }}
+      app.kubernetes.io/component: controller
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-deployment.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-deployment.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-deployment.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-deployment.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,118 @@
+{{- if .Values.defaultBackend.enabled -}}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+    {{- with .Values.defaultBackend.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.defaultBackend.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+spec:
+  selector:
+    matchLabels:
+      {{- include "ingress-nginx.selectorLabels" . | nindent 6 }}
+      app.kubernetes.io/component: default-backend
+{{- if not .Values.defaultBackend.autoscaling.enabled }}
+  replicas: {{ .Values.defaultBackend.replicaCount }}
+{{- end }}
+  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
+  template:
+    metadata:
+    {{- if .Values.defaultBackend.podAnnotations }}
+      annotations: {{ toYaml .Values.defaultBackend.podAnnotations | nindent 8 }}
+    {{- end }}
+      labels:
+        {{- include "ingress-nginx.selectorLabels" . | nindent 8 }}
+        app.kubernetes.io/component: default-backend
+        {{- with .Values.defaultBackend.labels }}
+        {{- toYaml . | nindent 8 }}
+        {{- end }}
+      {{- if .Values.defaultBackend.podLabels }}
+        {{- toYaml .Values.defaultBackend.podLabels | nindent 8 }}
+      {{- end }}
+    spec:
+    {{- if .Values.imagePullSecrets }}
+      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
+    {{- end }}
+    {{- if .Values.defaultBackend.priorityClassName }}
+      priorityClassName: {{ .Values.defaultBackend.priorityClassName }}
+    {{- end }}
+    {{- if .Values.defaultBackend.podSecurityContext }}
+      securityContext: {{ toYaml .Values.defaultBackend.podSecurityContext | nindent 8 }}
+    {{- end }}
+      containers:
+        - name: {{ template "ingress-nginx.name" . }}-default-backend
+          {{- with .Values.defaultBackend.image }}
+          image: "{{- if .repository -}}{{ .repository }}{{ else }}{{ .registry }}/{{ .image }}{{- end -}}:{{ .tag }}{{- if (.digest) -}} @{{.digest}} {{- end -}}"
+          {{- end }}
+          imagePullPolicy: {{ .Values.defaultBackend.image.pullPolicy }}
+        {{- if .Values.defaultBackend.extraArgs }}
+          args:
+          {{- range $key, $value := .Values.defaultBackend.extraArgs }}
+            {{- /* Accept keys without values or with false as value */}}
+            {{- if eq ($value | quote | len) 2 }}
+            - --{{ $key }}
+            {{- else }}
+            - --{{ $key }}={{ $value }}
+            {{- end }}
+          {{- end }}
+        {{- end }}
+          securityContext:
+            capabilities:
+              drop:
+              - ALL
+            runAsUser: {{ .Values.defaultBackend.image.runAsUser }}
+            runAsNonRoot: {{ .Values.defaultBackend.image.runAsNonRoot }}
+            allowPrivilegeEscalation: {{ .Values.defaultBackend.image.allowPrivilegeEscalation }}
+            readOnlyRootFilesystem: {{ .Values.defaultBackend.image.readOnlyRootFilesystem}}
+        {{- if .Values.defaultBackend.extraEnvs }}
+          env: {{ toYaml .Values.defaultBackend.extraEnvs | nindent 12 }}
+        {{- end }}
+          livenessProbe:
+            httpGet:
+              path: /healthz
+              port: {{ .Values.defaultBackend.port }}
+              scheme: HTTP
+            initialDelaySeconds: {{ .Values.defaultBackend.livenessProbe.initialDelaySeconds }}
+            periodSeconds: {{ .Values.defaultBackend.livenessProbe.periodSeconds }}
+            timeoutSeconds: {{ .Values.defaultBackend.livenessProbe.timeoutSeconds }}
+            successThreshold: {{ .Values.defaultBackend.livenessProbe.successThreshold }}
+            failureThreshold: {{ .Values.defaultBackend.livenessProbe.failureThreshold }}
+          readinessProbe:
+            httpGet:
+              path: /healthz
+              port: {{ .Values.defaultBackend.port }}
+              scheme: HTTP
+            initialDelaySeconds: {{ .Values.defaultBackend.readinessProbe.initialDelaySeconds }}
+            periodSeconds: {{ .Values.defaultBackend.readinessProbe.periodSeconds }}
+            timeoutSeconds: {{ .Values.defaultBackend.readinessProbe.timeoutSeconds }}
+            successThreshold: {{ .Values.defaultBackend.readinessProbe.successThreshold }}
+            failureThreshold: {{ .Values.defaultBackend.readinessProbe.failureThreshold }}
+          ports:
+            - name: http
+              containerPort: {{ .Values.defaultBackend.port }}
+              protocol: TCP
+        {{- if .Values.defaultBackend.extraVolumeMounts }}
+          volumeMounts: {{- toYaml .Values.defaultBackend.extraVolumeMounts | nindent 12 }}
+        {{- end }}
+        {{- if .Values.defaultBackend.resources }}
+          resources: {{ toYaml .Values.defaultBackend.resources | nindent 12 }}
+        {{- end }}
+    {{- if .Values.defaultBackend.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.defaultBackend.nodeSelector | nindent 8 }}
+    {{- end }}
+      serviceAccountName: {{ template "ingress-nginx.defaultBackend.serviceAccountName" . }}
+    {{- if .Values.defaultBackend.tolerations }}
+      tolerations: {{ toYaml .Values.defaultBackend.tolerations | nindent 8 }}
+    {{- end }}
+    {{- if .Values.defaultBackend.affinity }}
+      affinity: {{ toYaml .Values.defaultBackend.affinity | nindent 8 }}
+    {{- end }}
+      terminationGracePeriodSeconds: 60
+    {{- if .Values.defaultBackend.extraVolumes }}
+      volumes: {{ toYaml .Values.defaultBackend.extraVolumes | nindent 8 }}
+    {{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-hpa.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-hpa.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-hpa.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-hpa.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,33 @@
+{{- if and .Values.defaultBackend.enabled .Values.defaultBackend.autoscaling.enabled }}
+apiVersion: autoscaling/v2beta1
+kind: HorizontalPodAutoscaler
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+    {{- with .Values.defaultBackend.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ template "ingress-nginx.defaultBackend.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+spec:
+  scaleTargetRef:
+    apiVersion: apps/v1
+    kind: Deployment
+    name: {{ template "ingress-nginx.defaultBackend.fullname" . }}
+  minReplicas: {{ .Values.defaultBackend.autoscaling.minReplicas }}
+  maxReplicas: {{ .Values.defaultBackend.autoscaling.maxReplicas }}
+  metrics:
+{{- with .Values.defaultBackend.autoscaling.targetCPUUtilizationPercentage }}
+    - type: Resource
+      resource:
+        name: cpu
+        targetAverageUtilization: {{ . }}
+{{- end }}
+{{- with .Values.defaultBackend.autoscaling.targetMemoryUtilizationPercentage }}
+    - type: Resource
+      resource:
+        name: memory
+        targetAverageUtilization: {{ . }}
+{{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-poddisruptionbudget.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-poddisruptionbudget.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-poddisruptionbudget.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-poddisruptionbudget.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,21 @@
+{{- if .Values.defaultBackend.enabled -}}
+{{- if or (gt (.Values.defaultBackend.replicaCount | int) 1) (gt (.Values.defaultBackend.autoscaling.minReplicas | int) 1) }}
+apiVersion: {{ ternary "policy/v1" "policy/v1beta1" (semverCompare ">=1.21.0-0" .Capabilities.KubeVersion.Version) }}
+kind: PodDisruptionBudget
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+    {{- with .Values.defaultBackend.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.defaultBackend.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+spec:
+  selector:
+    matchLabels:
+      {{- include "ingress-nginx.selectorLabels" . | nindent 6 }}
+      app.kubernetes.io/component: default-backend
+  minAvailable: {{ .Values.defaultBackend.minAvailable }}
+{{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-psp.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-psp.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-psp.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-psp.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,36 @@
+{{- if and .Values.podSecurityPolicy.enabled .Values.defaultBackend.enabled (empty .Values.defaultBackend.existingPsp) -}}
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ include "ingress-nginx.fullname" . }}-backend
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+    {{- with .Values.defaultBackend.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+spec:
+  allowPrivilegeEscalation: false
+  fsGroup:
+    ranges:
+    - max: 65535
+      min: 1
+    rule: MustRunAs
+  requiredDropCapabilities:
+  - ALL
+  runAsUser:
+    rule: MustRunAsNonRoot
+  seLinux:
+    rule: RunAsAny
+  supplementalGroups:
+    ranges:
+    - max: 65535
+      min: 1
+    rule: MustRunAs
+  volumes:
+  - configMap
+  - emptyDir
+  - projected
+  - secret
+  - downwardAPI
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-role.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-role.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-role.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-role.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,22 @@
+{{- if and .Values.rbac.create .Values.podSecurityPolicy.enabled .Values.defaultBackend.enabled -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+    {{- with .Values.defaultBackend.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}-backend
+  namespace: {{ .Release.Namespace }}
+rules:
+  - apiGroups:      [{{ template "podSecurityPolicy.apiGroup" . }}]
+    resources:      ['podsecuritypolicies']
+    verbs:          ['use']
+    {{- with .Values.defaultBackend.existingPsp }}
+    resourceNames:  [{{ . }}]
+    {{- else }}
+    resourceNames:  [{{ include "ingress-nginx.fullname" . }}-backend]
+    {{- end }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-rolebinding.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-rolebinding.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-rolebinding.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-rolebinding.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,21 @@
+{{- if and .Values.rbac.create .Values.podSecurityPolicy.enabled .Values.defaultBackend.enabled -}}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+    {{- with .Values.defaultBackend.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.fullname" . }}-backend
+  namespace: {{ .Release.Namespace }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: {{ include "ingress-nginx.fullname" . }}-backend
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "ingress-nginx.defaultBackend.serviceAccountName" . }}
+    namespace: {{ .Release.Namespace | quote }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-service.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-service.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-service.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-service.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,41 @@
+{{- if .Values.defaultBackend.enabled -}}
+apiVersion: v1
+kind: Service
+metadata:
+{{- if .Values.defaultBackend.service.annotations }}
+  annotations: {{ toYaml .Values.defaultBackend.service.annotations | nindent 4 }}
+{{- end }}
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+    {{- with .Values.defaultBackend.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ include "ingress-nginx.defaultBackend.fullname" . }}
+  namespace: {{ .Release.Namespace }}
+spec:
+  type: {{ .Values.defaultBackend.service.type }}
+{{- if .Values.defaultBackend.service.clusterIP }}
+  clusterIP: {{ .Values.defaultBackend.service.clusterIP }}
+{{- end }}
+{{- if .Values.defaultBackend.service.externalIPs }}
+  externalIPs: {{ toYaml .Values.defaultBackend.service.externalIPs | nindent 4 }}
+{{- end }}
+{{- if .Values.defaultBackend.service.loadBalancerIP }}
+  loadBalancerIP: {{ .Values.defaultBackend.service.loadBalancerIP }}
+{{- end }}
+{{- if .Values.defaultBackend.service.loadBalancerSourceRanges }}
+  loadBalancerSourceRanges: {{ toYaml .Values.defaultBackend.service.loadBalancerSourceRanges | nindent 4 }}
+{{- end }}
+  ports:
+    - name: http
+      port: {{ .Values.defaultBackend.service.servicePort }}
+      protocol: TCP
+      targetPort: http
+    {{- if semverCompare ">=1.20" .Capabilities.KubeVersion.Version }}
+      appProtocol: http
+    {{- end }}
+  selector:
+    {{- include "ingress-nginx.selectorLabels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-serviceaccount.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-serviceaccount.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-serviceaccount.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/default-backend-serviceaccount.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,14 @@
+{{- if and .Values.defaultBackend.enabled  .Values.defaultBackend.serviceAccount.create -}}
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  labels:
+    {{- include "ingress-nginx.labels" . | nindent 4 }}
+    app.kubernetes.io/component: default-backend
+    {{- with .Values.defaultBackend.labels }}
+    {{- toYaml . | nindent 4 }}
+    {{- end }}
+  name: {{ template "ingress-nginx.defaultBackend.serviceAccountName" . }}
+  namespace: {{ .Release.Namespace }}
+automountServiceAccountToken: {{ .Values.defaultBackend.serviceAccount.automountServiceAccountToken }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/templates/dh-param-secret.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/dh-param-secret.yaml b/HelmChart/ingress-nginx/ingress-nginx/templates/dh-param-secret.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/templates/dh-param-secret.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,10 @@
+{{- with .Values.dhParam -}}
+apiVersion: v1
+kind: Secret
+metadata:
+  name: {{ include "ingress-nginx.controller.fullname" $ }}
+  labels:
+    {{- include "ingress-nginx.labels" $ | nindent 4 }}
+data:
+  dhparam.pem: {{ . }}
+{{- end }}
Index: HelmChart/ingress-nginx/ingress-nginx/values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/ingress-nginx/values.yaml b/HelmChart/ingress-nginx/ingress-nginx/values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/ingress-nginx/values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,940 @@
+## nginx configuration
+## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/index.md
+##
+
+## Overrides for generated resource names
+# See templates/_helpers.tpl
+# nameOverride:
+# fullnameOverride:
+
+## Labels to apply to all resources
+##
+commonLabels: {}
+# scmhash: abc123
+# myLabel: aakkmd
+
+controller:
+  name: controller
+  image:
+    ## Keep false as default for now!
+    chroot: false
+    registry: registry.k8s.io
+    image: ingress-nginx/controller
+    ## for backwards compatibility consider setting the full image url via the repository value below
+    ## use *either* current default registry/image or repository format or installing chart by providing the values.yaml will fail
+    ## repository:
+    tag: "v1.3.0"
+    digest: sha256:d1707ca76d3b044ab8a28277a2466a02100ee9f58a86af1535a3edf9323ea1b5
+    digestChroot: sha256:0fcb91216a22aae43b374fc2e6a03b8afe9e8c78cbf07a09d75636dc4ea3c191
+    pullPolicy: IfNotPresent
+    # www-data -> uid 101
+    runAsUser: 101
+    allowPrivilegeEscalation: true
+
+  # -- Use an existing PSP instead of creating one
+  existingPsp: ""
+
+  # -- Configures the controller container name
+  containerName: controller
+
+  # -- Configures the ports that the nginx-controller listens on
+  containerPort:
+    http: 80
+    https: 443
+
+  # -- Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
+  config: {}
+
+  # -- Annotations to be added to the controller config configuration configmap.
+  configAnnotations: {}
+
+  # -- Will add custom headers before sending traffic to backends according to https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/custom-headers
+  proxySetHeaders: {}
+
+  # -- Will add custom headers before sending response traffic to the client according to: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#add-headers
+  addHeaders: {}
+
+  # -- Optionally customize the pod dnsConfig.
+  dnsConfig: {}
+
+  # -- Optionally customize the pod hostname.
+  hostname: {}
+
+  # -- Optionally change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'.
+  # By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller
+  # to keep resolving names inside the k8s network, use ClusterFirstWithHostNet.
+  dnsPolicy: ClusterFirst
+
+  # -- Bare-metal considerations via the host network https://kubernetes.github.io/ingress-nginx/deploy/baremetal/#via-the-host-network
+  # Ingress status was blank because there is no Service exposing the NGINX Ingress controller in a configuration using the host network, the default --publish-service flag used in standard cloud setups does not apply
+  reportNodeInternalIp: false
+
+  # -- Process Ingress objects without ingressClass annotation/ingressClassName field
+  # Overrides value for --watch-ingress-without-class flag of the controller binary
+  # Defaults to false
+  watchIngressWithoutClass: false
+
+  # -- Process IngressClass per name (additionally as per spec.controller).
+  ingressClassByName: false
+
+  # -- This configuration defines if Ingress Controller should allow users to set
+  # their own *-snippet annotations, otherwise this is forbidden / dropped
+  # when users add those annotations.
+  # Global snippets in ConfigMap are still respected
+  allowSnippetAnnotations: true
+
+  # -- Required for use with CNI based kubernetes installations (such as ones set up by kubeadm),
+  # since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920
+  # is merged
+  hostNetwork: false
+
+  ## Use host ports 80 and 443
+  ## Disabled by default
+  hostPort:
+    # -- Enable 'hostPort' or not
+    enabled: false
+    ports:
+      # -- 'hostPort' http port
+      http: 80
+      # -- 'hostPort' https port
+      https: 443
+
+  # -- Election ID to use for status update
+  electionID: ingress-controller-leader
+
+  ## This section refers to the creation of the IngressClass resource
+  ## IngressClass resources are supported since k8s >= 1.18 and required since k8s >= 1.19
+  ingressClassResource:
+    # -- Name of the ingressClass
+    name: nginx
+    # -- Is this ingressClass enabled or not
+    enabled: true
+    # -- Is this the default ingressClass for the cluster
+    default: false
+    # -- Controller-value of the controller that is processing this ingressClass
+    controllerValue: "k8s.io/ingress-nginx"
+
+    # -- Parameters is a link to a custom resource containing additional
+    # configuration for the controller. This is optional if the controller
+    # does not require extra parameters.
+    parameters: {}
+
+  # -- For backwards compatibility with ingress.class annotation, use ingressClass.
+  # Algorithm is as follows, first ingressClassName is considered, if not present, controller looks for ingress.class annotation
+  ingressClass: nginx
+
+  # -- Labels to add to the pod container metadata
+  podLabels: {}
+  #  key: value
+
+  # -- Security Context policies for controller pods
+  podSecurityContext: {}
+
+  # -- See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for notes on enabling and using sysctls
+  sysctls: {}
+  # sysctls:
+  #   "net.core.somaxconn": "8192"
+
+  # -- Allows customization of the source of the IP address or FQDN to report
+  # in the ingress status field. By default, it reads the information provided
+  # by the service. If disable, the status field reports the IP address of the
+  # node or nodes where an ingress controller pod is running.
+  publishService:
+    # -- Enable 'publishService' or not
+    enabled: true
+    # -- Allows overriding of the publish service to bind to
+    # Must be <namespace>/<service_name>
+    pathOverride: ""
+
+  # Limit the scope of the controller to a specific namespace
+  scope:
+    # -- Enable 'scope' or not
+    enabled: false
+    # -- Namespace to limit the controller to; defaults to $(POD_NAMESPACE)
+    namespace: ""
+    # -- When scope.enabled == false, instead of watching all namespaces, we watching namespaces whose labels
+    # only match with namespaceSelector. Format like foo=bar. Defaults to empty, means watching all namespaces.
+    namespaceSelector: ""
+
+  # -- Allows customization of the configmap / nginx-configmap namespace; defaults to $(POD_NAMESPACE)
+  configMapNamespace: ""
+
+  tcp:
+    # -- Allows customization of the tcp-services-configmap; defaults to $(POD_NAMESPACE)
+    configMapNamespace: ""
+    # -- Annotations to be added to the tcp config configmap
+    annotations: {}
+
+  udp:
+    # -- Allows customization of the udp-services-configmap; defaults to $(POD_NAMESPACE)
+    configMapNamespace: ""
+    # -- Annotations to be added to the udp config configmap
+    annotations: {}
+
+  # -- Maxmind license key to download GeoLite2 Databases.
+  ## https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases
+  maxmindLicenseKey: ""
+
+  # -- Additional command line arguments to pass to nginx-ingress-controller
+  # E.g. to specify the default SSL certificate you can use
+  extraArgs: {}
+  ## extraArgs:
+  ##   default-ssl-certificate: "<namespace>/<secret_name>"
+
+  # -- Additional environment variables to set
+  extraEnvs: []
+  # extraEnvs:
+  #   - name: FOO
+  #     valueFrom:
+  #       secretKeyRef:
+  #         key: FOO
+  #         name: secret-resource
+
+  # -- Use a `DaemonSet` or `Deployment`
+  kind: Deployment
+
+  # -- Annotations to be added to the controller Deployment or DaemonSet
+  ##
+  annotations: {}
+  #  keel.sh/pollSchedule: "@every 60m"
+
+  # -- Labels to be added to the controller Deployment or DaemonSet and other resources that do not have option to specify labels
+  ##
+  labels: {}
+  #  keel.sh/policy: patch
+  #  keel.sh/trigger: poll
+
+
+  # -- The update strategy to apply to the Deployment or DaemonSet
+  ##
+  updateStrategy: {}
+  #  rollingUpdate:
+  #    maxUnavailable: 1
+  #  type: RollingUpdate
+
+  # -- `minReadySeconds` to avoid killing pods before we are ready
+  ##
+  minReadySeconds: 0
+
+
+  # -- Node tolerations for server scheduling to nodes with taints
+  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
+  ##
+  tolerations: []
+  #  - key: "key"
+  #    operator: "Equal|Exists"
+  #    value: "value"
+  #    effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
+
+  # -- Affinity and anti-affinity rules for server scheduling to nodes
+  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
+  ##
+  affinity: {}
+    # # An example of preferred pod anti-affinity, weight is in the range 1-100
+    # podAntiAffinity:
+    #   preferredDuringSchedulingIgnoredDuringExecution:
+    #   - weight: 100
+    #     podAffinityTerm:
+    #       labelSelector:
+    #         matchExpressions:
+    #         - key: app.kubernetes.io/name
+    #           operator: In
+    #           values:
+    #           - ingress-nginx
+    #         - key: app.kubernetes.io/instance
+    #           operator: In
+    #           values:
+    #           - ingress-nginx
+    #         - key: app.kubernetes.io/component
+    #           operator: In
+    #           values:
+    #           - controller
+    #       topologyKey: kubernetes.io/hostname
+
+    # # An example of required pod anti-affinity
+    # podAntiAffinity:
+    #   requiredDuringSchedulingIgnoredDuringExecution:
+    #   - labelSelector:
+    #       matchExpressions:
+    #       - key: app.kubernetes.io/name
+    #         operator: In
+    #         values:
+    #         - ingress-nginx
+    #       - key: app.kubernetes.io/instance
+    #         operator: In
+    #         values:
+    #         - ingress-nginx
+    #       - key: app.kubernetes.io/component
+    #         operator: In
+    #         values:
+    #         - controller
+    #     topologyKey: "kubernetes.io/hostname"
+
+  # -- Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in.
+  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
+  ##
+  topologySpreadConstraints: []
+    # - maxSkew: 1
+    #   topologyKey: topology.kubernetes.io/zone
+    #   whenUnsatisfiable: DoNotSchedule
+    #   labelSelector:
+    #     matchLabels:
+    #       app.kubernetes.io/instance: ingress-nginx-internal
+
+  # -- `terminationGracePeriodSeconds` to avoid killing pods before we are ready
+  ## wait up to five minutes for the drain of connections
+  ##
+  terminationGracePeriodSeconds: 300
+
+  # -- Node labels for controller pod assignment
+  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
+  ##
+  nodeSelector:
+    kubernetes.io/os: linux
+
+  ## Liveness and readiness probe values
+  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
+  ##
+  ## startupProbe:
+  ##   httpGet:
+  ##     # should match container.healthCheckPath
+  ##     path: "/healthz"
+  ##     port: 10254
+  ##     scheme: HTTP
+  ##   initialDelaySeconds: 5
+  ##   periodSeconds: 5
+  ##   timeoutSeconds: 2
+  ##   successThreshold: 1
+  ##   failureThreshold: 5
+  livenessProbe:
+    httpGet:
+      # should match container.healthCheckPath
+      path: "/healthz"
+      port: 10254
+      scheme: HTTP
+    initialDelaySeconds: 10
+    periodSeconds: 10
+    timeoutSeconds: 1
+    successThreshold: 1
+    failureThreshold: 5
+  readinessProbe:
+    httpGet:
+      # should match container.healthCheckPath
+      path: "/healthz"
+      port: 10254
+      scheme: HTTP
+    initialDelaySeconds: 10
+    periodSeconds: 10
+    timeoutSeconds: 1
+    successThreshold: 1
+    failureThreshold: 3
+
+
+  # -- Path of the health check endpoint. All requests received on the port defined by
+  # the healthz-port parameter are forwarded internally to this path.
+  healthCheckPath: "/healthz"
+
+  # -- Address to bind the health check endpoint.
+  # It is better to set this option to the internal node address
+  # if the ingress nginx controller is running in the `hostNetwork: true` mode.
+  healthCheckHost: ""
+
+  # -- Annotations to be added to controller pods
+  ##
+  podAnnotations: {}
+
+  replicaCount: 1
+
+  minAvailable: 1
+
+  ## Define requests resources to avoid probe issues due to CPU utilization in busy nodes
+  ## ref: https://github.com/kubernetes/ingress-nginx/issues/4735#issuecomment-551204903
+  ## Ideally, there should be no limits.
+  ## https://engineering.indeedblog.com/blog/2019/12/cpu-throttling-regression-fix/
+  resources:
+  ##  limits:
+  ##    cpu: 100m
+  ##    memory: 90Mi
+    requests:
+      cpu: 100m
+      memory: 90Mi
+
+  # Mutually exclusive with keda autoscaling
+  autoscaling:
+    enabled: false
+    minReplicas: 1
+    maxReplicas: 11
+    targetCPUUtilizationPercentage: 50
+    targetMemoryUtilizationPercentage: 50
+    behavior: {}
+      # scaleDown:
+      #   stabilizationWindowSeconds: 300
+      #  policies:
+      #   - type: Pods
+      #     value: 1
+      #     periodSeconds: 180
+      # scaleUp:
+      #   stabilizationWindowSeconds: 300
+      #   policies:
+      #   - type: Pods
+      #     value: 2
+      #     periodSeconds: 60
+
+  autoscalingTemplate: []
+  # Custom or additional autoscaling metrics
+  # ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-custom-metrics
+  # - type: Pods
+  #   pods:
+  #     metric:
+  #       name: nginx_ingress_controller_nginx_process_requests_total
+  #     target:
+  #       type: AverageValue
+  #       averageValue: 10000m
+
+  # Mutually exclusive with hpa autoscaling
+  keda:
+    apiVersion: "keda.sh/v1alpha1"
+    ## apiVersion changes with keda 1.x vs 2.x
+    ## 2.x = keda.sh/v1alpha1
+    ## 1.x = keda.k8s.io/v1alpha1
+    enabled: false
+    minReplicas: 1
+    maxReplicas: 11
+    pollingInterval: 30
+    cooldownPeriod: 300
+    restoreToOriginalReplicaCount: false
+    scaledObject:
+      annotations: {}
+      # Custom annotations for ScaledObject resource
+      #  annotations:
+      # key: value
+    triggers: []
+ #     - type: prometheus
+ #       metadata:
+ #         serverAddress: http://<prometheus-host>:9090
+ #         metricName: http_requests_total
+ #         threshold: '100'
+ #         query: sum(rate(http_requests_total{deployment="my-deployment"}[2m]))
+
+    behavior: {}
+ #     scaleDown:
+ #       stabilizationWindowSeconds: 300
+ #       policies:
+ #       - type: Pods
+ #         value: 1
+ #         periodSeconds: 180
+ #     scaleUp:
+ #       stabilizationWindowSeconds: 300
+ #       policies:
+ #       - type: Pods
+ #         value: 2
+ #         periodSeconds: 60
+
+  # -- Enable mimalloc as a drop-in replacement for malloc.
+  ## ref: https://github.com/microsoft/mimalloc
+  ##
+  enableMimalloc: true
+
+  ## Override NGINX template
+  customTemplate:
+    configMapName: ""
+    configMapKey: ""
+
+  service:
+    enabled: true
+
+    # -- If enabled is adding an appProtocol option for Kubernetes service. An appProtocol field replacing annotations that were
+    # using for setting a backend protocol. Here is an example for AWS: service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
+    # It allows choosing the protocol for each backend specified in the Kubernetes service.
+    # See the following GitHub issue for more details about the purpose: https://github.com/kubernetes/kubernetes/issues/40244
+    # Will be ignored for Kubernetes versions older than 1.20
+    ##
+    appProtocol: true
+
+    annotations: {}
+    labels: {}
+    # clusterIP: ""
+
+    # -- List of IP addresses at which the controller services are available
+    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
+    ##
+    externalIPs: []
+
+    # -- Used by cloud providers to connect the resulting `LoadBalancer` to a pre-existing static IP according to https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
+    loadBalancerIP: ""
+    loadBalancerSourceRanges: []
+
+    enableHttp: true
+    enableHttps: true
+
+    ## Set external traffic policy to: "Local" to preserve source IP on providers supporting it.
+    ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
+    # externalTrafficPolicy: ""
+
+    ## Must be either "None" or "ClientIP" if set. Kubernetes will default to "None".
+    ## Ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
+    # sessionAffinity: ""
+
+    ## Specifies the health check node port (numeric port number) for the service. If healthCheckNodePort isn’t specified,
+    ## the service controller allocates a port from your cluster’s NodePort range.
+    ## Ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
+    # healthCheckNodePort: 0
+
+    # -- Represents the dual-stack-ness requested or required by this Service. Possible values are
+    # SingleStack, PreferDualStack or RequireDualStack.
+    # The ipFamilies and clusterIPs fields depend on the value of this field.
+    ## Ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/
+    ipFamilyPolicy: "SingleStack"
+
+    # -- List of IP families (e.g. IPv4, IPv6) assigned to the service. This field is usually assigned automatically
+    # based on cluster configuration and the ipFamilyPolicy field.
+    ## Ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/
+    ipFamilies:
+      - IPv4
+
+    ports:
+      http: 80
+      https: 443
+
+    targetPorts:
+      http: http
+      https: https
+
+    type: LoadBalancer
+
+    ## type: NodePort
+    ## nodePorts:
+    ##   http: 32080
+    ##   https: 32443
+    ##   tcp:
+    ##     8080: 32808
+    nodePorts:
+      http: ""
+      https: ""
+      tcp: {}
+      udp: {}
+
+    external:
+      enabled: true
+
+    internal:
+      # -- Enables an additional internal load balancer (besides the external one).
+      enabled: false
+      # -- Annotations are mandatory for the load balancer to come up. Varies with the cloud service.
+      annotations: {}
+
+      # loadBalancerIP: ""
+
+      # -- Restrict access For LoadBalancer service. Defaults to 0.0.0.0/0.
+      loadBalancerSourceRanges: []
+
+      ## Set external traffic policy to: "Local" to preserve source IP on
+      ## providers supporting it
+      ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
+      # externalTrafficPolicy: ""
+
+  # shareProcessNamespace enables process namespace sharing within the pod.
+  # This can be used for example to signal log rotation using `kill -USR1` from a sidecar.
+  shareProcessNamespace: false
+
+  # -- Additional containers to be added to the controller pod.
+  # See https://github.com/lemonldap-ng-controller/lemonldap-ng-controller as example.
+  extraContainers: []
+  #  - name: my-sidecar
+  #    image: nginx:latest
+  #  - name: lemonldap-ng-controller
+  #    image: lemonldapng/lemonldap-ng-controller:0.2.0
+  #    args:
+  #      - /lemonldap-ng-controller
+  #      - --alsologtostderr
+  #      - --configmap=$(POD_NAMESPACE)/lemonldap-ng-configuration
+  #    env:
+  #      - name: POD_NAME
+  #        valueFrom:
+  #          fieldRef:
+  #            fieldPath: metadata.name
+  #      - name: POD_NAMESPACE
+  #        valueFrom:
+  #          fieldRef:
+  #            fieldPath: metadata.namespace
+  #    volumeMounts:
+  #    - name: copy-portal-skins
+  #      mountPath: /srv/var/lib/lemonldap-ng/portal/skins
+
+  # -- Additional volumeMounts to the controller main container.
+  extraVolumeMounts: []
+  #  - name: copy-portal-skins
+  #   mountPath: /var/lib/lemonldap-ng/portal/skins
+
+  # -- Additional volumes to the controller pod.
+  extraVolumes: []
+  #  - name: copy-portal-skins
+  #    emptyDir: {}
+
+  # -- Containers, which are run before the app containers are started.
+  extraInitContainers: []
+  # - name: init-myservice
+  #   image: busybox
+  #   command: ['sh', '-c', 'until nslookup myservice; do echo waiting for myservice; sleep 2; done;']
+
+  extraModules: []
+  ## Modules, which are mounted into the core nginx image
+  # - name: opentelemetry
+  #   image: registry.k8s.io/ingress-nginx/opentelemetry:v20220415-controller-v1.2.0-beta.0-2-g81c2afd97@sha256:ce61e2cf0b347dffebb2dcbf57c33891d2217c1bad9c0959c878e5be671ef941
+  #
+  # The image must contain a `/usr/local/bin/init_module.sh` executable, which
+  # will be executed as initContainers, to move its config files within the
+  # mounted volume.
+
+  admissionWebhooks:
+    annotations: {}
+    # ignore-check.kube-linter.io/no-read-only-rootfs: "This deployment needs write access to root filesystem".
+
+    ## Additional annotations to the admission webhooks.
+    ## These annotations will be added to the ValidatingWebhookConfiguration and
+    ## the Jobs Spec of the admission webhooks.
+    enabled: true
+    # -- Additional environment variables to set
+    extraEnvs: []
+    # extraEnvs:
+    #   - name: FOO
+    #     valueFrom:
+    #       secretKeyRef:
+    #         key: FOO
+    #         name: secret-resource
+    # -- Admission Webhook failure policy to use
+    failurePolicy: Fail
+    # timeoutSeconds: 10
+    port: 8443
+    certificate: "/usr/local/certificates/cert"
+    key: "/usr/local/certificates/key"
+    namespaceSelector: {}
+    objectSelector: {}
+    # -- Labels to be added to admission webhooks
+    labels: {}
+
+    # -- Use an existing PSP instead of creating one
+    existingPsp: ""
+
+    service:
+      annotations: {}
+      # clusterIP: ""
+      externalIPs: []
+      # loadBalancerIP: ""
+      loadBalancerSourceRanges: []
+      servicePort: 443
+      type: ClusterIP
+
+    createSecretJob:
+      resources: {}
+        # limits:
+        #   cpu: 10m
+        #   memory: 20Mi
+        # requests:
+        #   cpu: 10m
+        #   memory: 20Mi
+
+    patchWebhookJob:
+      resources: {}
+
+    patch:
+      enabled: true
+      image:
+        registry: registry.k8s.io
+        image: ingress-nginx/kube-webhook-certgen
+        ## for backwards compatibility consider setting the full image url via the repository value below
+        ## use *either* current default registry/image or repository format or installing chart by providing the values.yaml will fail
+        ## repository:
+        tag: v1.1.1
+        digest: sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
+        pullPolicy: IfNotPresent
+      # -- Provide a priority class name to the webhook patching job
+      ##
+      priorityClassName: ""
+      podAnnotations: {}
+      nodeSelector:
+        kubernetes.io/os: linux
+      tolerations: []
+      # -- Labels to be added to patch job resources
+      labels: {}
+      runAsUser: 2000
+      fsGroup: 2000
+
+  metrics:
+    port: 10254
+    # if this port is changed, change healthz-port: in extraArgs: accordingly
+    enabled: false
+
+    service:
+      annotations: {}
+      # prometheus.io/scrape: "true"
+      # prometheus.io/port: "10254"
+
+      # clusterIP: ""
+
+      # -- List of IP addresses at which the stats-exporter service is available
+      ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
+      ##
+      externalIPs: []
+
+      # loadBalancerIP: ""
+      loadBalancerSourceRanges: []
+      servicePort: 10254
+      type: ClusterIP
+      # externalTrafficPolicy: ""
+      # nodePort: ""
+
+    serviceMonitor:
+      enabled: false
+      additionalLabels: {}
+      ## The label to use to retrieve the job name from.
+      ## jobLabel: "app.kubernetes.io/name"
+      namespace: ""
+      namespaceSelector: {}
+      ## Default: scrape .Release.Namespace only
+      ## To scrape all, use the following:
+      ## namespaceSelector:
+      ##   any: true
+      scrapeInterval: 30s
+      # honorLabels: true
+      targetLabels: []
+      relabelings: []
+      metricRelabelings: []
+
+    prometheusRule:
+      enabled: false
+      additionalLabels: {}
+      # namespace: ""
+      rules: []
+        # # These are just examples rules, please adapt them to your needs
+        # - alert: NGINXConfigFailed
+        #   expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
+        #   for: 1s
+        #   labels:
+        #     severity: critical
+        #   annotations:
+        #     description: bad ingress config - nginx config test failed
+        #     summary: uninstall the latest ingress changes to allow config reloads to resume
+        # - alert: NGINXCertificateExpiry
+        #   expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds) by (host) - time()) < 604800
+        #   for: 1s
+        #   labels:
+        #     severity: critical
+        #   annotations:
+        #     description: ssl certificate(s) will expire in less then a week
+        #     summary: renew expiring certificates to avoid downtime
+        # - alert: NGINXTooMany500s
+        #   expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
+        #   for: 1m
+        #   labels:
+        #     severity: warning
+        #   annotations:
+        #     description: Too many 5XXs
+        #     summary: More than 5% of all requests returned 5XX, this requires your attention
+        # - alert: NGINXTooMany400s
+        #   expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
+        #   for: 1m
+        #   labels:
+        #     severity: warning
+        #   annotations:
+        #     description: Too many 4XXs
+        #     summary: More than 5% of all requests returned 4XX, this requires your attention
+
+  # -- Improve connection draining when ingress controller pod is deleted using a lifecycle hook:
+  # With this new hook, we increased the default terminationGracePeriodSeconds from 30 seconds
+  # to 300, allowing the draining of connections up to five minutes.
+  # If the active connections end before that, the pod will terminate gracefully at that time.
+  # To effectively take advantage of this feature, the Configmap feature
+  # worker-shutdown-timeout new value is 240s instead of 10s.
+  ##
+  lifecycle:
+    preStop:
+      exec:
+        command:
+          - /wait-shutdown
+
+  priorityClassName: ""
+
+# -- Rollback limit
+##
+revisionHistoryLimit: 10
+
+## Default 404 backend
+##
+defaultBackend:
+  ##
+  enabled: false
+
+  name: defaultbackend
+  image:
+    registry: registry.k8s.io
+    image: defaultbackend-amd64
+    ## for backwards compatibility consider setting the full image url via the repository value below
+    ## use *either* current default registry/image or repository format or installing chart by providing the values.yaml will fail
+    ## repository:
+    tag: "1.5"
+    pullPolicy: IfNotPresent
+    # nobody user -> uid 65534
+    runAsUser: 65534
+    runAsNonRoot: true
+    readOnlyRootFilesystem: true
+    allowPrivilegeEscalation: false
+
+  # -- Use an existing PSP instead of creating one
+  existingPsp: ""
+
+  extraArgs: {}
+
+  serviceAccount:
+    create: true
+    name: ""
+    automountServiceAccountToken: true
+  # -- Additional environment variables to set for defaultBackend pods
+  extraEnvs: []
+
+  port: 8080
+
+  ## Readiness and liveness probes for default backend
+  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
+  ##
+  livenessProbe:
+    failureThreshold: 3
+    initialDelaySeconds: 30
+    periodSeconds: 10
+    successThreshold: 1
+    timeoutSeconds: 5
+  readinessProbe:
+    failureThreshold: 6
+    initialDelaySeconds: 0
+    periodSeconds: 5
+    successThreshold: 1
+    timeoutSeconds: 5
+
+  # -- Node tolerations for server scheduling to nodes with taints
+  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
+  ##
+  tolerations: []
+  #  - key: "key"
+  #    operator: "Equal|Exists"
+  #    value: "value"
+  #    effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
+
+  affinity: {}
+
+  # -- Security Context policies for controller pods
+  # See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
+  # notes on enabling and using sysctls
+  ##
+  podSecurityContext: {}
+
+  # -- Security Context policies for controller main container.
+  # See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
+  # notes on enabling and using sysctls
+  ##
+  containerSecurityContext: {}
+
+  # -- Labels to add to the pod container metadata
+  podLabels: {}
+  #  key: value
+
+  # -- Node labels for default backend pod assignment
+  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
+  ##
+  nodeSelector:
+    kubernetes.io/os: linux
+
+  # -- Annotations to be added to default backend pods
+  ##
+  podAnnotations: {}
+
+  replicaCount: 1
+
+  minAvailable: 1
+
+  resources: {}
+  # limits:
+  #   cpu: 10m
+  #   memory: 20Mi
+  # requests:
+  #   cpu: 10m
+  #   memory: 20Mi
+
+  extraVolumeMounts: []
+  ## Additional volumeMounts to the default backend container.
+  #  - name: copy-portal-skins
+  #   mountPath: /var/lib/lemonldap-ng/portal/skins
+
+  extraVolumes: []
+  ## Additional volumes to the default backend pod.
+  #  - name: copy-portal-skins
+  #    emptyDir: {}
+
+  autoscaling:
+    annotations: {}
+    enabled: false
+    minReplicas: 1
+    maxReplicas: 2
+    targetCPUUtilizationPercentage: 50
+    targetMemoryUtilizationPercentage: 50
+
+  service:
+    annotations: {}
+
+    # clusterIP: ""
+
+    # -- List of IP addresses at which the default backend service is available
+    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
+    ##
+    externalIPs: []
+
+    # loadBalancerIP: ""
+    loadBalancerSourceRanges: []
+    servicePort: 80
+    type: ClusterIP
+
+  priorityClassName: ""
+  # -- Labels to be added to the default backend resources
+  labels: {}
+
+## Enable RBAC as per https://github.com/kubernetes/ingress-nginx/blob/main/docs/deploy/rbac.md and https://github.com/kubernetes/ingress-nginx/issues/266
+rbac:
+  create: true
+  scope: false
+
+## If true, create & use Pod Security Policy resources
+## https://kubernetes.io/docs/concepts/policy/pod-security-policy/
+podSecurityPolicy:
+  enabled: false
+
+serviceAccount:
+  create: true
+  name: ""
+  automountServiceAccountToken: true
+  # -- Annotations for the controller service account
+  annotations: {}
+
+# -- Optional array of imagePullSecrets containing private registry credentials
+## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
+imagePullSecrets: []
+# - name: secretName
+
+# -- TCP service key-value pairs
+## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md
+##
+tcp: {}
+#  8080: "default/example-tcp-svc:9000"
+
+# -- UDP service key-value pairs
+## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md
+##
+udp: {}
+#  53: "kube-system/kube-dns:53"
+
+# -- Prefix for TCP and UDP ports names in ingress controller service
+## Some cloud providers, like Yandex Cloud may have a requirements for a port name regex to support cloud load balancer integration
+portNamePrefix: ""
+
+# -- (string) A base64-encoded Diffie-Hellman parameter.
+# This can be generated with: `openssl dhparam 4096 2> /dev/null | base64`
+## Ref: https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/ssl-dh-param
+dhParam:
Index: HelmChart/ingress-nginx/loadbalancer-values-uat.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/loadbalancer-values-uat.yaml b/HelmChart/ingress-nginx/loadbalancer-values-uat.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/loadbalancer-values-uat.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,35 @@
+controller:
+  extraArgs:
+    default-ssl-certificate: "ingress-nginx/vinhomes.vn-tls"
+  replicaCount: 1
+  ingressClassByName: true
+  ingressClassResource:
+    name: "loadbalancer"
+    enabled: true
+    default: false
+    controllerValue: "k8s.io/loadbalancer-ingress-nginx"
+  ## Name of the ingress class to route through this controller
+  ##
+  ingressClass: loadbalancer
+  config:
+    #Upload
+    client-body-buffer-size: 32M
+    proxy-body-size: 100G
+    proxy-buffering: "off"
+    proxy-read-timeout: "600"
+    proxy-send-timeout: "600"
+    #Logging
+    log-format-upstream: '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id $http_x_device_id|$http_x_device_os|$http_x_device_os_version|$http_x_device_locale|$http_x_app_version|$http_x_app_id'
+    # Accesslog Request IP
+    compute-full-forwarded-for: "true"
+    use-forwarded-headers: "true"
+  service:
+    type: LoadBalancer
+  metrics:
+    enabled: false
+    serviceMonitor:
+      enabled: true
+#tcp:
+#  32069: "external/window-rdp-external:32069"
+#  32070: "external/avnet-poc-external:3393"
+
Index: HelmChart/ingress-nginx/public-values.yaml
===================================================================
diff --git a/HelmChart/ingress-nginx/public-values.yaml b/HelmChart/ingress-nginx/public-values.yaml
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/HelmChart/ingress-nginx/public-values.yaml	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,42 @@
+controller:
+  replicaCount: 2
+  ingressClassByName: true
+  ingressClassResource:
+    name: "public"
+    enabled: true
+    default: false
+    controllerValue: "k8s.io/public-ingress-nginx"
+  ## Name of the ingress class to route through this controller
+  ##
+  ingressClass: public
+  config:
+    #Upload
+    client-body-buffer-size: 32M
+    proxy-body-size: 100G
+    proxy-buffering: "off"
+    proxy-read-timeout: "600"
+    proxy-send-timeout: "600"
+    #Logging
+    log-format-upstream: '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id $http_x_device_id|$http_x_device_os|$http_x_device_os_version|$http_x_device_locale|$http_x_app_version|$http_x_app_id'
+    # Accesslog Request IP
+    compute-full-forwarded-for: "true"
+    use-forwarded-headers: "true"
+  service:
+    type: NodePort
+    nodePorts:
+      http: "30080"
+      https: "30443"
+      tcp:
+        32069: 32069
+        32070: 32070
+        31280: 31280
+      udp: {}
+  metrics:
+    enabled: false
+    serviceMonitor:
+      enabled: true
+tcp:
+  32069: "external/window-rdp-external:32069"
+  32070: "external/avnet-poc-external:3393"
+  31280: "external/squid-external:31280"
+
Index: aws-resources/deploy-out.tf
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aws-resources/deploy-out.tf b/aws-resources/deploy-out.tf
--- a/aws-resources/deploy-out.tf	(revision 81d0c30d6d22ffd54b5d0fccdd757fa94bc31a8a)
+++ b/aws-resources/deploy-out.tf	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -1,15 +1,22 @@
-# output "vpc-main" {
-#   value = aws_vpc.vpc-main.id
-# }
-# output "sqs_id" {
-#   value = aws_sqs_queue.sqs_iaac.id
-# }
-# output "sqs_arn" {
-#   value = aws_sqs_queue.sqs_iaac.arn
-# }
-# output "sqs_url" {
-#   value = aws_sqs_queue.sqs_iaac.url
-# }
-# output "sqs_queue_name" {
-#   value = aws_sqs_queue.sqs_iaac.name
-# }
\ No newline at end of file
+output "vpc-main" {
+  value = aws_vpc.vpc-main.id
+}
+output "sqs_id" {
+  value = aws_sqs_queue.sqs_iaac.id
+}
+output "sqs_arn" {
+  value = aws_sqs_queue.sqs_iaac.arn
+}
+output "sqs_url" {
+  value = aws_sqs_queue.sqs_iaac.url
+}
+output "sqs_queue_name" {
+  value = aws_sqs_queue.sqs_iaac.name
+}
+output "kubeconfig" {
+  value = aws_eks_cluster.eks_cluster.access_config
+}
+resource "local_file" "kubeconfig" {
+  filename = "configurations/kubeconfig"
+  content = aws_eks_cluster.eks_cluster.access_config
+}
\ No newline at end of file
Index: kubernetes/ingress-nginx.tf
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kubernetes/ingress-nginx.tf b/kubernetes/ingress-nginx.tf
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/kubernetes/ingress-nginx.tf	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,20 @@
+resource "kubernetes_namespace" "nginx-ingress" {
+  metadata {
+    annotations = {
+      name:"ingress nginx namespace"
+    }
+    name = "nginx ingress namespace"
+  }
+  lifecycle {
+  }
+}
+resource "helm_release" "public-nginx-ingress" {
+  name       = "ingress-public"
+  chart      = "ingress-nginx"
+  repository = "https://kubernetes.github.io/ingress-nginx"
+  version    = "4.3.0"
+  namespace  = kubernetes_namespace.nginx-ingress.id
+  values = [
+    file("HelmChart/ingress-nginx/public-values.yaml")
+  ]
+}
\ No newline at end of file
Index: kubernetes/provider.tf
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kubernetes/provider.tf b/kubernetes/provider.tf
new file mode 100644
--- /dev/null	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
+++ b/kubernetes/provider.tf	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -0,0 +1,12 @@
+provider "kubernetes" {
+  config_path    = "configurations/kubeconfig"
+  config_context = "aws-iaac"
+  insecure = true
+}
+provider "helm" {
+  kubernetes {
+    config_path    = "configurations/kubeconfig"
+    config_context = "aws-iaac"
+    insecure = true
+  }
+}
\ No newline at end of file
Index: main.tf
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.tf b/main.tf
--- a/main.tf	(revision 81d0c30d6d22ffd54b5d0fccdd757fa94bc31a8a)
+++ b/main.tf	(revision 9461c9c096b45f089c3587758faca63948e42ce2)
@@ -1,3 +1,6 @@
 module "aws-resources" {
   source = "./aws-resources"
 }
+module "kuberntes" {
+  source = "./kubernetes"
+}
diff --git a/script/jenkins-install.sh b/configurations/jenkins-install.sh
rename from script/jenkins-install.sh
rename to configurations/jenkins-install.sh
diff --git a/configurations/kubeconfig b/configurations/kubeconfig
new file mode 100644
diff --git a/kubernetes/variables.tf b/kubernetes/variables.tf
new file mode 100644
diff --git a/HelmChart/ingress-nginx/ingress-nginx-4.3.0.tgz b/HelmChart/ingress-nginx/ingress-nginx-4.3.0.tgz
new file mode 100644
index 0000000000000000000000000000000000000000..491f9b09bec1179b11635dcb643c344d3446a3b1
GIT binary patch
literal 42495
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
VkZCA@g@OVA0^~WmC<5px{{z9>uXF$a

diff --git a/HelmChart/ingress-nginx/ingress-nginx/.helmignore b/HelmChart/ingress-nginx/ingress-nginx/.helmignore
new file mode 100644
index 0000000000000000000000000000000000000000..50af0317254197a5a019f4ac2f8ecc223f93f5a7
GIT binary patch
literal 342
zc$`g-!EVDK5Jc~M#a6krRRtfB^w3iyxym)dW&_(`K(Myc9{TOwIEvcK(=yBs!v^-2
z8Eb058OWzx5te`n`iY{W<e}K%Y&|xuHt-RsL7Pg+m1PJRBlwtm7%dM$+%HfuTBaFg
zkHbIRCMN+2z1-#mkEP;?F6dw(@jX0gcu(;Qa#}a9m7rjSNC~ylyYASrbd!i}9!Ci{
zY&&pNo6?@xti07%y8o_b<y{EgTya0PIhntpUj8=~I8nr=o^@M_u(xL+k23#=^<XRI
dslnUsRURxgf8xMOlS6B6K9Q83+mIa^^$YY)a#sKV

diff --git a/HelmChart/ingress-nginx/ingress-nginx/OWNERS b/HelmChart/ingress-nginx/ingress-nginx/OWNERS
new file mode 100644
index 0000000000000000000000000000000000000000..6b7e049ca84e275022f5273cff3b058fcabd062e
GIT binary patch
literal 213
zc${^Lu@1s83<dXmMI`3bdv{il=)jz`RvM8wmF=|f_XGwuhBw^1JJ|`*>WcPyznpKA
zUFs~OT~#+30b<g%g<-A*9xWgfDhhNgjgr0~<QkxOQRM!Tatci=3&fTdgnAIN3}rFK
vZyVRW(`cMc6d6Sv#Y9iHVlJ-uMB3L2V;J{@$N%`}jmbV>{&t?x!$+GpD1}U~

diff --git a/HelmChart/ingress-nginx/ingress-nginx/README.md.gotmpl b/HelmChart/ingress-nginx/ingress-nginx/README.md.gotmpl
new file mode 100644
index 0000000000000000000000000000000000000000..895996111133359f2959daa516057c1ec3aeb9bb
GIT binary patch
literal 10571
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
Jlh;3${10#efb;+W

diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/_helpers.tpl b/HelmChart/ingress-nginx/ingress-nginx/templates/_helpers.tpl
new file mode 100644
index 0000000000000000000000000000000000000000..e69de0c41fcf1a1464aa583cbe4d9355d0c1565e
GIT binary patch
literal 5570
zc%02xS#R4$5PsLM7!V2Iq!697K?@j3P)9b>ps8$FX^K2KD{>?*vgES6OWQ)6|K8by
zha~E9^ANw7TF!hs_rb4UkDtN~&rd+3ff*NQ7A3yQD{WYk;R!rF{`PI~m8b^icO@%Q
zFd0I@as)YZ&q>CVi3fph2r15Zfe`Uxu2Ab?G3UiyY&jwrwlu5~2I7%p9$UEhBNG*B
zM|p9BO7Rro9*nAr1b+R+J@R}~&1U=#qG1b$B$R#jQjQcd6QuHTTA>L~b6Eh>P-#qI
zx@ctw!KNs7YT#(wTT8_YGlS@{9zNF5vL^odW4QAk6qbS|g!oeg(RK82typ8ZStY~*
z{;incGfoPzvUJ+UgMZMYJ9=a9u##(-V!}vw(2_*_vznqR(4h7<A`FpgU<yI-oEt(k
zl1#)k90gmQjVG3ti~_pE<jGEhSrM1r&S#C6>z9qEYnqJ&dl^mW7U_}G?Bvz{(bkbO
zk%eKr&;cdBLV--9XKrL&Iz3px)eu@j^Y<PSDVv__5b_$Kf(a&-;$~q_@UAa+t@cU^
zfhtaFwiT{kukOLuuo?M@<>EoCjTIACvMCqbaMULQfK<uS{vX2W`}g#prK$fpKL2q2
z=H2-0dUAgC@!ja04mXR=b2dlHcO|6(y2S!aK25Gie_UN$d<d-8y7Z2`bE^N=s7~l~
zGgw1rd6*FL_EPa1s<v}H*9jBMP^H)ov55;h?(VG}Z>g}`jHN=6fWz9AxsGVr!ND3m
zq3hpJ_&Tm#k-kp1zu1uSIcl?)^k<HAs}A<aBaZr&``wA#OVX9PRkQ=S6>R_1-LLq!
zvGSw!fKC*zw}X}Xcf^ZCROyyJ5<lrnkAn+kQx7%qB*tl0GLykfD*vOJ3a+yu<?9Vk
z$ex2Y3v1*XEL_Gpo7{3CK=ZsLS6G``#+OzWT~e=qef+W&acGZUTWjXbB-!c+H3;{>
z9I5D$&r-V477GmtE67ap#&#!qly#@FlG1OyD+NzDB}zabv<2L<!oXBkcJAQ}KKIxx
zXgCQ9TJ7sD_<3-EQ<rfr38ppoBjOG(#-S6p9zV7oj~*ReUYuQzPyaffT%L~3pKK0-
z-aw*wXfD&O2;H8)D#T&7fNrEN-|@W$xB7g_k}sC^2TR}}-WxC7cTVCJ@CPSyo>Nk~
zDPHf=$5VNz3`HL6?AT5AuK8{XK0o@$5UPAXm8S76F;cw`SH#e1G=B6vEz5c<uya6J
z#$OsA##|nUHN_7CYb^H^Hqziq!(T@!iEk)p4#gl9C>uq+`&ir$kh6kXXgZuOyd?Et
z8d9XISCdZG2VQe;q_y#`CD=K!OoAo%^y#YMhrLQ!jkh^@t3_xNFsw*$*&eQ<Y)kvK
zUAb-4b;V{$LY3OsOr^x$t*YZX^-SYU+to5zoOo%5ZkDy<Yg2U&O4k+CqN{y91g+pl
z;UU@!WY+|=YR<Z5_S=%Cc3Jr5oWgB})JbKk!%9&~YMcw8(#V9CbRC-tOb@JvdwOFl
z*EZ*LYHLt+zXH3l!u}5rwh}x5d!u8o&{V2$&ZMNH?M-pl@=E?z$*Od7&ZSK2Mex#j
zt*2>~Ycw^)l1DV=RAQ-Nl(tDmuU|cnpT8JBv!8D|n`CSoYbd($TW;$5yVUaRo%W(_
zyFEm-wPInJ_4a)|gn5R^7iWy%+it<AKVca*cVTNFm)Z`m3bB4^2ZW4=k9303YvoH-
zPhjg&gZ+Wc$)`MBvQ<Ir&e58|p2a`^7C&<)+q9^XfbCp1V_ZPgUIoo^A9gycj?QEy
zQj#4!JdoEjKF?6?W3_kQRwL3^(;TlT@C=z_^JwEJ<CZcCalhq@K!@=PwXBpI6l;Jc
bZ~R~T;-t3|?hSiSagfr^0WX4leJ%4p5C4Po

diff --git a/HelmChart/ingress-nginx/ingress-nginx/templates/_params.tpl b/HelmChart/ingress-nginx/ingress-nginx/templates/_params.tpl
new file mode 100644
index 0000000000000000000000000000000000000000..305ce0dd2652667e64f147471902d70c39985771
GIT binary patch
literal 2996
zc$~dfU2obj6n*cnun-SW%^>Zu5)br48rsULRaze><6MY^W2d%L=ve>z>?DSeIFPE-
zp6dGEd(OGs4`;W-D1s#ufO<@<6ljgbiizzgC5j}vhw$6m1xDli5_=aag;A1oP!~Ik
zz?NwAlkg1m$bylKn`=VXAfgcnvfvP*90cRiiWh|$YfvwY!lXZV_<s9qKE1zte3;(c
z4ad73VuJE4YUrvFEHlmpNuY;Dj>M_4*ZydQ5&NGPcaS|wvjt~5ek=s+bp||j&E)`n
z%6V%*3Bv0?KuNn#+~#Q@NjWi%L|er^5EEC^<r>bYVd8(N!JejGh4Sbafde&63d|zM
z7SQZHX16}(V8oOYty=<1y*JL~2WXiooB6?>2b?Zm6~UA5JH8`xAZP2jWUGXvF1&1C
z)T_6AFN9o#-jj50TU@7vx(rSXM<p~c7?rFIO}#vO^bMdtqSfNOTko+*CnYe!o-2#?
zn(gtQXtp>X)odY7Xs!+;l_}IGa6=4@vGC0A&!9jR73nQIa3G{PD{I(+;xV64sajI7
zbt&vexpdK91@64Z6{J#`xr|^|Zl75i@{6T5b1)mJ)?RoKiiM5cuP)3|Orpq@yJgse
zgh9oDU=k%vYrEZ^U=d5X*7bgPA)H0T*p9=S!ew$5*3pD=y4rCt1!dThQM=q*Qfoq1
zVoo5h;k7fO_3iv?C1jg05q+~$E;M{CBAtfPfO%m#As`6Ri980vO?(prU4OB?<Ee}5
z-`Mq23uhp*$>^qW0MBRQ-Q$XS<C3&DJXV3J^TDZgIxi)M>Y9A@MZ11=i!t~f;>Bw|
z_!FZt=!Tqci&+8k#7rzRbM)R8+r+bM3Xk&j4Y4R9R)G4p13sbtOa8`RO@iMQTcgNS
zt@bbU_!3Pih14J$tWimYatw{^8ge&iN!;fZ(ZxNw93Qf?)f<$Qf6#L#jr+?%4AEzw
Yjjc+*+VKvnVRE%Aahmn19o^UXU;Mr@r~m)}

diff --git a/script/terraform.tfstate b/script/terraform.tfstate
deleted file mode 100644
index 6660863e344ed7729347a2115871453b2bcbfa79..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

